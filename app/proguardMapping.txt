# compiler: R8
# compiler_version: 8.1.65
# min_api: 26
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: dca358e
# pg_map_hash: SHA-256 dca358e43d21d7652d6beffe66bc33cdd0e91439899af3ceb0b6cbc710529ef7
android.app.AppComponentFactory -> android.app.AppComponentFactory:
# {"id":"com.android.tools.r8.synthesized"}
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.view.OnReceiveContentListener -> android.view.OnReceiveContentListener:
# {"id":"com.android.tools.r8.synthesized"}
android.view.WindowInsetsAnimation$Callback -> android.view.WindowInsetsAnimation$Callback:
# {"id":"com.android.tools.r8.synthesized"}
androidx.activity.Cancellable -> androidx.activity.Cancellable:
# {"id":"sourceFile","fileName":"Cancellable.java"}
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    0:0:void $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA(androidx.activity.ComponentActivity,android.content.Context) -> $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI(androidx.activity.ComponentActivity) -> $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI
      # {"id":"com.android.tools.r8.synthesized"}
    141:332:void <init>() -> <init>
    118:118:void access$001(androidx.activity.ComponentActivity) -> access$001
    500:501:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    613:624:void ensureViewModelStore() -> ensureViewModelStore
    853:853:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    649:658:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    629:635:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    587:587:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    684:684:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    690:690:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    603:608:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    476:480:void initViewTreeOwners() -> initViewTreeOwners
    568:569:void invalidateMenu() -> invalidateMenu
    321:323:android.os.Bundle lambda$new$0() -> lambda$new$0
    326:331:void lambda$new$1(android.content.Context) -> lambda$new$1
    793:796:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    673:674:void onBackPressed() -> onBackPressed
    865:869:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    361:373:void onCreate(android.os.Bundle) -> onCreate
    520:524:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    529:535:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    972:984:void onMultiWindowModeChanged(boolean,android.content.res.Configuration) -> onMultiWindowModeChanged
    920:924:void onNewIntent(android.content.Intent) -> onNewIntent
    540:542:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    1034:1048:void onPictureInPictureModeChanged(boolean,android.content.res.Configuration) -> onPictureInPictureModeChanged
    511:515:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    818:825:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    428:428:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    396:416:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    378:384:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    893:897:void onTrimMemory(int) -> onTrimMemory
    833:834:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    842:842:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    1067:1087:void reportFullyDrawn() -> reportFullyDrawn
    453:455:void setContentView(android.view.View) -> setContentView
    709:710:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    728:729:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    750:752:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    772:774:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$$ExternalSyntheticLambda0 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.f$0 -> f$0
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda1 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.f$0 -> f$0
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda2 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.f$0 -> f$0
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.onContextAvailable(android.content.Context) -> onContextAvailable
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    153:153:void <init>(androidx.activity.ComponentActivity) -> <init>
    161:168:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    176:176:void <init>(androidx.activity.ComponentActivity) -> <init>
    185:245:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> onLaunch
androidx.activity.ComponentActivity$2$1 -> androidx.activity.ComponentActivity$2$1:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    191:191:void <init>(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult) -> <init>
    194:195:void run() -> run
androidx.activity.ComponentActivity$2$2 -> androidx.activity.ComponentActivity$2$2:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    232:232:void <init>(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException) -> <init>
    235:238:void run() -> run
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    277:277:void <init>(androidx.activity.ComponentActivity) -> <init>
    281:288:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    291:291:void <init>(androidx.activity.ComponentActivity) -> <init>
    295:303:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    305:305:void <init>(androidx.activity.ComponentActivity) -> <init>
    309:311:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$Api19Impl -> androidx.activity.ComponentActivity$Api19Impl:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    1094:1095:void cancelPendingInputEvents(android.view.View) -> cancelPendingInputEvents
androidx.activity.ComponentActivity$Api33Impl -> androidx.activity.ComponentActivity$Api33Impl:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    1104:1104:android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity) -> getOnBackInvokedDispatcher
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    134:134:void <init>() -> <init>
androidx.activity.ComponentDialog -> androidx.activity.ComponentDialog:
# {"id":"sourceFile","fileName":"ComponentDialog.kt"}
    0:0:void $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o(androidx.activity.ComponentDialog) -> $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o
      # {"id":"com.android.tools.r8.synthesized"}
    35:75:void <init>(android.content.Context,int) -> <init>
    48:48:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    44:46:androidx.lifecycle.LifecycleRegistry getLifecycleRegistry() -> getLifecycleRegistry
    46:46:androidx.lifecycle.LifecycleRegistry getLifecycleRegistry() -> getLifecycleRegistry
    79:79:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    83:84:void onBackPressed() -> onBackPressed
    76:77:void onBackPressedDispatcher$lambda-1(androidx.activity.ComponentDialog) -> onBackPressedDispatcher$lambda-1
    53:58:void onCreate(android.os.Bundle) -> onCreate
    62:64:void onStart() -> onStart
    69:72:void onStop() -> onStop
androidx.activity.ComponentDialog$$ExternalSyntheticApiModelOutline0 -> androidx.activity.ComponentDialog$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedDispatcher androidx.activity.ComponentDialog$$InternalSyntheticApiModelOutline$1$13817bb7555c980d8155c43dd9206a3dba59a5be4dd3ac95957b065f8370a6f2$0.m(androidx.activity.ComponentDialog) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentDialog$$ExternalSyntheticLambda1 -> androidx.activity.ComponentDialog$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentDialog androidx.activity.ComponentDialog$$InternalSyntheticLambda$2$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.f$0 -> f$0
    0:0:void androidx.activity.ComponentDialog$$InternalSyntheticLambda$2$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.<init>(androidx.activity.ComponentDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.ComponentDialog$$InternalSyntheticLambda$2$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
# {"id":"sourceFile","fileName":"ImmLeaksCleaner.java"}
    39:39:void <clinit>() -> <clinit>
    103:114:void initializeReflectiveFields() -> initializeReflectiveFields
    52:97:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
# {"id":"sourceFile","fileName":"OnBackPressedCallback.java"}
    50:61:void <init>(boolean) -> <init>
    112:113:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    91:91:boolean isEnabled() -> isEnabled
    100:103:void remove() -> remove
    116:117:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    77:81:void setEnabled(boolean) -> setEnabled
    120:121:void setIsEnabledConsumer(androidx.core.util.Consumer) -> setIsEnabledConsumer
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    0:0:void $r8$lambda$_OyTAhjGr9tgm4CqoN01pHmhslA(androidx.activity.OnBackPressedDispatcher,java.lang.Boolean) -> $r8$lambda$_OyTAhjGr9tgm4CqoN01pHmhslA
      # {"id":"com.android.tools.r8.synthesized"}
    67:132:void <init>(java.lang.Runnable) -> <init>
    207:218:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    168:175:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    228:235:boolean hasEnabledCallbacks() -> hasEnabledCallbacks
    126:129:void lambda$new$0(java.lang.Boolean) -> lambda$new$0
    250:262:void onBackPressed() -> onBackPressed
    83:85:void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher) -> setOnBackInvokedDispatcher
    89:104:void updateBackInvokedCallbackState() -> updateBackInvokedCallbackState
androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda0 -> androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.OnBackPressedDispatcher androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.f$0 -> f$0
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.<init>(androidx.activity.OnBackPressedDispatcher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda1 -> androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.OnBackPressedDispatcher androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.f$0 -> f$0
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.<init>(androidx.activity.OnBackPressedDispatcher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$Api33Impl -> androidx.activity.OnBackPressedDispatcher$Api33Impl:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    344:344:android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable) -> createOnBackInvokedCallback
    331:334:void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object) -> registerOnBackInvokedCallback
    338:341:void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> unregisterOnBackInvokedCallback
androidx.activity.OnBackPressedDispatcher$Api33Impl$$ExternalSyntheticLambda0 -> androidx.activity.OnBackPressedDispatcher$Api33Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$2$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.f$0 -> f$0
    0:0:void androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$2$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.<init>(java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$2$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.onBackInvoked() -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    291:295:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    314:320:void cancel() -> cancel
    300:310:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    266:268:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    273:279:void cancel() -> cancel
androidx.activity.OnBackPressedDispatcherOwner -> androidx.activity.OnBackPressedDispatcherOwner:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcherOwner.java"}
androidx.activity.ViewTreeOnBackPressedDispatcherOwner -> androidx.activity.ViewTreeOnBackPressedDispatcherOwner:
# {"id":"sourceFile","fileName":"ViewTreeOnBackPressedDispatcherOwner.kt"}
    38:39:void set(android.view.View,androidx.activity.OnBackPressedDispatcherOwner) -> set
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
# {"id":"sourceFile","fileName":"ContextAwareHelper.java"}
    42:50:void <init>() -> <init>
    73:77:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:109:void clearAvailableContext() -> clearAvailableContext
    97:101:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
androidx.activity.contextaware.OnContextAvailableListener -> androidx.activity.contextaware.OnContextAvailableListener:
# {"id":"sourceFile","fileName":"OnContextAvailableListener.java"}
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
# {"id":"sourceFile","fileName":"ActivityResult.java"}
    109:109:void <clinit>() -> <clinit>
    45:48:void <init>(int,android.content.Intent) -> <init>
    50:53:void <init>(android.os.Parcel) -> <init>
    105:105:int describeContents() -> describeContents
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    87:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:101:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
# {"id":"sourceFile","fileName":"ActivityResult.java"}
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultCallback -> androidx.activity.result.ActivityResultCallback:
# {"id":"sourceFile","fileName":"ActivityResultCallback.java"}
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
# {"id":"sourceFile","fileName":"ActivityResultLauncher.java"}
    34:34:void <init>() -> <init>
    47:48:void launch(java.lang.Object) -> launch
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    51:79:void <init>() -> <init>
    455:457:void bindRcKey(int,java.lang.String) -> bindRcKey
    371:376:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    390:409:boolean dispatchResult(int,java.lang.Object) -> dispatchResult
    414:426:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    445:451:int generateRandomNumber() -> generateRandomNumber
    324:356:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    306:315:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    118:163:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    217:234:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    429:435:void registerKey(java.lang.String) -> registerKey
    275:298:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    132:132:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
    138:158:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$2 -> androidx.activity.result.ActivityResultRegistry$2:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    163:163:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract) -> <init>
    166:180:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    184:185:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    234:234:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract) -> <init>
    237:251:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    255:256:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    465:468:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    475:478:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    481:483:void addObserver(androidx.lifecycle.LifecycleEventObserver) -> addObserver
    486:490:void clearObservers() -> clearObservers
androidx.activity.result.ActivityResultRegistryOwner -> androidx.activity.result.ActivityResultRegistryOwner:
# {"id":"sourceFile","fileName":"ActivityResultRegistryOwner.java"}
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
# {"id":"sourceFile","fileName":"IntentSenderRequest.java"}
    132:132:void <clinit>() -> <clinit>
    77:82:void <init>(android.content.IntentSender,android.content.Intent,int,int) -> <init>
    124:129:void <init>(android.os.Parcel) -> <init>
    146:146:int describeContents() -> describeContents
    102:102:android.content.Intent getFillInIntent() -> getFillInIntent
    111:111:int getFlagsMask() -> getFlagsMask
    120:120:int getFlagsValues() -> getFlagsValues
    91:91:android.content.IntentSender getIntentSender() -> getIntentSender
    151:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
# {"id":"sourceFile","fileName":"IntentSenderRequest.java"}
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.IntentSenderRequest$Builder -> androidx.activity.result.IntentSenderRequest$Builder:
# {"id":"sourceFile","fileName":"IntentSenderRequest.java"}
    187:189:void <init>(android.content.IntentSender) -> <init>
    239:239:androidx.activity.result.IntentSenderRequest build() -> build
    211:212:androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent) -> setFillInIntent
    227:229:androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int) -> setFlags
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    29:29:void <init>() -> <init>
    48:48:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
androidx.activity.result.contract.ActivityResultContract$SynchronousResult -> androidx.activity.result.contract.ActivityResultContract$SynchronousResult:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    55:55:void <init>(java.lang.Object) -> <init>
    55:55:java.lang.Object getValue() -> getValue
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    132:132:void <init>() -> <init>
    131:131:java.lang.Object parseResult(int,android.content.Intent) -> <init>
    131:131:void <init>():131 -> <init>
    131:131:java.lang.Object parseResult(int,android.content.Intent) -> createIntent
    131:131:android.content.Intent createIntent(android.content.Context,java.lang.Object):131 -> createIntent
    173:173:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    131:131:java.lang.Object parseResult(int,android.content.Intent) -> getSynchronousResult
    131:131:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object):131 -> getSynchronousResult
    180:809:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    8676:8677:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associate(java.lang.Object[],kotlin.jvm.functions.Function1) -> getSynchronousResult
    8676:8677:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):190 -> getSynchronousResult
    9358:9359:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> getSynchronousResult
    9358:9359:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):190 -> getSynchronousResult
    190:190:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    9358:9361:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> getSynchronousResult
    9358:9361:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):190 -> getSynchronousResult
    8677:8677:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associate(java.lang.Object[],kotlin.jvm.functions.Function1) -> getSynchronousResult
    8677:8677:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):190 -> getSynchronousResult
    189:191:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    131:131:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    198:203:java.util.Map parseResult(int,android.content.Intent) -> parseResult
    11365:11365:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(int[],kotlin.jvm.functions.Function1) -> parseResult
    11365:11365:java.util.Map parseResult(int,android.content.Intent):203 -> parseResult
    11700:11701:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> parseResult
    11700:11701:java.util.Map parseResult(int,android.content.Intent):203 -> parseResult
    204:204:java.util.Map parseResult(int,android.content.Intent) -> parseResult
    11700:11702:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> parseResult
    11700:11702:java.util.Map parseResult(int,android.content.Intent):203 -> parseResult
    11365:11365:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(int[],kotlin.jvm.functions.Function1) -> parseResult
    11365:11365:java.util.Map parseResult(int,android.content.Intent):203 -> parseResult
    202:206:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    134:134:void <init>() -> <init>
    168:168:android.content.Intent createIntent$activity_release(java.lang.String[]) -> createIntent$activity_release
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    53:53:void <init>() -> <init>
    53:53:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    68:68:android.content.Intent createIntent(android.content.Context,android.content.Intent) -> createIntent
    53:53:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    73:73:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    55:55:void <init>() -> <init>
androidx.annotation.Keep -> androidx.annotation.Keep:
# {"id":"sourceFile","fileName":"Keep.kt"}
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
# {"id":"sourceFile","fileName":"ActionBar.java"}
    92:92:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    1121:1121:void onDestroy() -> onDestroy
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
# {"id":"sourceFile","fileName":"ActionBar.java"}
    1374:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1387:void <init>(int,int) -> <init>
    1374:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener -> androidx.appcompat.app.ActionBar$OnMenuVisibilityListener:
# {"id":"sourceFile","fileName":"ActionBar.java"}
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
# {"id":"sourceFile","fileName":"AlertController.java"}
    82:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:234:void installContent() -> installContent
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
# {"id":"sourceFile","fileName":"AlertController.java"}
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
# {"id":"sourceFile","fileName":"AlertController.java"}
    869:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
# {"id":"sourceFile","fileName":"AlertController.java"}
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
# {"id":"sourceFile","fileName":"AlertController.java"}
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
# {"id":"sourceFile","fileName":"AlertController.java"}
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
# {"id":"sourceFile","fileName":"AlertDialog.java"}
    98:100:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
# {"id":"sourceFile","fileName":"AlertDialog.java"}
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    96:98:void <init>() -> <init>
    214:216:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    141:142:void attachBaseContext(android.content.Context) -> attachBaseContext
    655:660:void closeOptionsMenu() -> closeOptionsMenu
    598:604:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    264:264:android.view.View findViewById(int) -> findViewById
    588:591:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    191:191:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    609:612:android.content.res.Resources getResources() -> getResources
    165:165:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    505:505:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    118:137:void initDelegate() -> initDelegate
    221:225:void initViewTreeOwners() -> initViewTreeOwners
    319:320:void invalidateOptionsMenu() -> invalidateOptionsMenu
    229:241:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    545:546:void onContentChanged() -> onContentChanged
    422:423:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    283:285:void onDestroy() -> onDestroy
    638:641:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    678:678:void onLocalesChanged(androidx.core.os.LocaleListCompat) -> onLocalesChanged
    269:278:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    569:569:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    669:669:void onNightModeChanged(int) -> onNightModeChanged
    580:581:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    152:154:void onPostCreate(android.os.Bundle) -> onPostCreate
    245:247:void onPostResume() -> onPostResume
    441:441:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    251:253:void onStart() -> onStart
    257:259:void onStop() -> onStop
    342:342:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    331:331:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    553:553:void onSupportContentChanged() -> onSupportContentChanged
    467:490:boolean onSupportNavigateUp() -> onSupportNavigateUp
    289:291:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    356:356:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    646:651:void openOptionsMenu() -> openOptionsMenu
    621:633:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    196:198:void setContentView(int) -> setContentView
    202:204:void setContentView(android.view.View) -> setContentView
    208:210:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    146:148:void setTheme(int) -> setTheme
    314:315:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    538:539:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    522:522:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    119:119:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    123:125:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    128:128:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    131:135:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatCallback -> androidx.appcompat.app.AppCompatCallback:
# {"id":"sourceFile","fileName":"AppCompatCallback.java"}
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
# {"id":"sourceFile","fileName":"AppCompatDelegate.java"}
    0:0:void $r8$lambda$F36VbET_i_Y_e98J3kKLOS37EAQ(android.content.Context) -> $r8$lambda$F36VbET_i_Y_e98J3kKLOS37EAQ
      # {"id":"com.android.tools.r8.synthesized"}
    114:201:void <clinit>() -> <clinit>
    297:297:void <init>() -> <init>
    990:997:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    413:413:void attachBaseContext(android.content.Context) -> attachBaseContext
    421:422:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    256:256:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    267:267:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    761:775:androidx.core.os.LocaleListCompat getApplicationLocales() -> getApplicationLocales
    785:785:int getDefaultNightMode() -> getDefaultNightMode
    836:845:java.lang.Object getLocaleManagerForApplication() -> getLocaleManagerForApplication
    795:795:androidx.core.os.LocaleListCompat getRequestedAppLocales() -> getRequestedAppLocales
    852:866:boolean isAutoStorageOptedIn(android.content.Context) -> isAutoStorageOptedIn
    914:916:void lambda$syncRequestedAndStoredLocales$1(android.content.Context) -> lambda$syncRequestedAndStoredLocales$1
    1000:1004:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    1007:1018:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    563:563:void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher) -> setOnBackInvokedDispatcher
    905:940:void syncRequestedAndStoredLocales(android.content.Context) -> syncRequestedAndStoredLocales
androidx.appcompat.app.AppCompatDelegate$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppCompatDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.appcompat.app.AppCompatDelegate$$InternalSyntheticLambda$1$cc563e7b9e953a9d912db7c994e94b3abce009c4c05bec5a3cf3db1e15ccdb54$0.f$0 -> f$0
    0:0:void androidx.appcompat.app.AppCompatDelegate$$InternalSyntheticLambda$1$cc563e7b9e953a9d912db7c994e94b3abce009c4c05bec5a3cf3db1e15ccdb54$0.<init>(android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegate$$InternalSyntheticLambda$1$cc563e7b9e953a9d912db7c994e94b3abce009c4c05bec5a3cf3db1e15ccdb54$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegate$Api24Impl -> androidx.appcompat.app.AppCompatDelegate$Api24Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegate.java"}
    1054:1054:android.os.LocaleList localeListForLanguageTags(java.lang.String) -> localeListForLanguageTags
androidx.appcompat.app.AppCompatDelegate$Api33Impl -> androidx.appcompat.app.AppCompatDelegate$Api33Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegate.java"}
    1073:1074:android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object) -> localeManagerGetApplicationLocales
    1067:1069:void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList) -> localeManagerSetApplicationLocales
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    142:198:void <clinit>() -> <clinit>
    299:300:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    303:304:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    219:350:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    790:794:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2522:2522:boolean applyApplicationSpecificConfig(boolean) -> applyApplicationSpecificConfig
    2535:2577:boolean applyApplicationSpecificConfig(boolean,boolean) -> applyApplicationSpecificConfig
    2501:2501:boolean applyDayNight() -> applyDayNight
    1102:1136:void applyFixedSizeWindow() -> applyFixedSizeWindow
    389:525:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    856:885:void attachToWindow(android.view.Window) -> attachToWindow
    2587:2621:androidx.core.os.LocaleListCompat calculateApplicationLocales(android.content.Context) -> calculateApplicationLocales
    2679:2679:int calculateNightMode() -> calculateNightMode
    2201:2226:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    2081:2092:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    831:837:void cleanupAutoManagers() -> cleanupAutoManagers
    2095:2096:void closePanel(int) -> closePanel
    2099:2133:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2716:2751:android.content.res.Configuration createOverrideAppConfiguration(android.content.Context,int,androidx.core.os.LocaleListCompat,android.content.res.Configuration,boolean) -> createOverrideAppConfiguration
    922:1096:android.view.ViewGroup createSubDecor() -> createSubDecor
    1637:1681:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2470:2492:void dismissPopups() -> dismissPopups
    1580:1598:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2292:2316:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1476:1479:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    888:919:void ensureSubDecor() -> ensureSubDecor
    847:853:void ensureWindow() -> ensureWindow
    2229:2237:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    691:692:android.view.View findViewById(int) -> findViewById
    3802:3905:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    662:673:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2961:2996:int getActivityHandlesConfigChangesFlags(android.content.Context) -> getActivityHandlesConfigChangesFlags
    2954:2957:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2946:2950:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    2694:2695:androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration) -> getConfigurationLocales
    2496:2496:android.content.Context getContextForDelegate() -> getContextForDelegate
    2643:2643:int getLocalNightMode() -> getLocalNightMode
    679:684:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2242:2254:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    592:593:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1221:1225:java.lang.CharSequence getTitle() -> getTitle
    601:601:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    605:619:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1956:1973:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1862:1865:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1913:1952:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1712:1721:void installViewFactory() -> installViewFactory
    1303:1306:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2283:2289:void invalidatePanelMenu(int) -> invalidatePanelMenu
    1472:1472:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2649:2672:int mapNightMode(android.content.Context,int) -> mapNightMode
    1512:1538:boolean onBackPressed() -> onBackPressed
    699:728:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    547:580:void onCreate(android.os.Bundle) -> onCreate
    1729:1729:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1738:1738:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    802:827:void onDestroy() -> onDestroy
    1616:1631:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2136:2143:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1543:1574:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1602:1612:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2147:2196:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1255:1262:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1267:1268:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1245:1251:void onMenuOpened(int) -> onMenuOpened
    1229:1242:void onPanelClosed(int) -> onPanelClosed
    585:586:void onPostCreate(android.os.Bundle) -> onPostCreate
    755:759:void onPostResume() -> onPostResume
    798:798:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    741:743:void onStart() -> onStart
    747:751:void onStop() -> onStop
    1099:1099:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1759:1859:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    597:597:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2259:2279:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1977:2077:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1869:1910:void reopenMenu(boolean) -> reopenMenu
    1140:1177:boolean requestWindowFeature(int) -> requestWindowFeature
    2452:2462:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    2683:2691:void setConfigurationLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat) -> setConfigurationLocales
    763:768:void setContentView(android.view.View) -> setContentView
    772:777:void setContentView(int) -> setContentView
    781:786:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    2704:2709:void setDefaultLocalesForLocaleList(androidx.core.os.LocaleListCompat) -> setDefaultLocalesForLocaleList
    355:372:void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher) -> setOnBackInvokedDispatcher
    841:842:void setTheme(int) -> setTheme
    1208:1217:void setTitle(java.lang.CharSequence) -> setTitle
    1462:1462:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1686:1706:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1488:1503:boolean shouldRegisterBackInvokedCallback() -> shouldRegisterBackInvokedCallback
    1272:1298:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1309:1456:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2445:2449:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1743:1754:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2919:2933:void updateActivityConfiguration(android.content.res.Configuration) -> updateActivityConfiguration
    2765:2873:boolean updateAppConfiguration(int,androidx.core.os.LocaleListCompat,boolean) -> updateAppConfiguration
    375:383:void updateBackInvokedCallbackState() -> updateBackInvokedCallbackState
    2881:2916:void updateResourcesConfiguration(int,androidx.core.os.LocaleListCompat,boolean,android.content.res.Configuration) -> updateResourcesConfiguration
    2327:2433:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2437:2442:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    274:274:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    277:285:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1021:1021:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1025:1037:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1086:1086:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1088:1088:void onAttachedFromWindow() -> onAttachedFromWindow
    1092:1093:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1364:1364:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1367:1392:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1375:1375:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1383:1386:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1378:1379:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1417:1417:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1428:1431:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1420:1424:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3097:3098:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3111:3112:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    3102:3106:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3005:3007:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    3022:3022:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    3011:3011:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    3027:3059:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    3016:3017:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3035:3035:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    3038:3048:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3921:3921:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3914:3917:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
    3926:3927:void setLayoutDirection(android.content.res.Configuration,java.util.Locale) -> setLayoutDirection
    3931:3932:void setLocale(android.content.res.Configuration,java.util.Locale) -> setLocale
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3940:3940:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
    3945:3945:java.lang.String toLanguageTag(java.util.Locale) -> toLanguageTag
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3958:3964:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
    3968:3968:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
    3978:3979:void setDefaultLocales(androidx.core.os.LocaleListCompat) -> setDefaultLocales
    3973:3974:void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat) -> setLocales
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3988:3998:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    4026:4026:android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity) -> getOnBackInvokedDispatcher
    4010:4014:android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl) -> registerOnBackPressedCallback
    4019:4022:void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> unregisterOnBackInvokedCallback
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedDispatcher androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$0462e2f13ba5a5afe2eb522bc8da7fd0c28e4cf2c8459a9fee26ff74b5081de1$0.m(android.app.Activity) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedCallback androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$a4afddb3ed27144c00f1d61b553771b3c4fcc88f91716fb63cbb13b072df193c$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedDispatcher androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$a4afddb3ed27144c00f1d61b553771b3c4fcc88f91716fb63cbb13b072df193c$1.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$a4afddb3ed27144c00f1d61b553771b3c4fcc88f91716fb63cbb13b072df193c$2.m(android.window.OnBackInvokedDispatcher,android.window.OnBackInvokedCallback) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline4 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$2.m(android.window.OnBackInvokedDispatcher,int,android.window.OnBackInvokedCallback) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticLambda5 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppCompatDelegateImpl androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticLambda$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$0.f$0 -> f$0
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticLambda$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$0.<init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticLambda$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$0.onBackInvoked() -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3398:3400:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3598:3601:boolean bypassDispatchKeyEvent(android.view.Window$Callback,android.view.KeyEvent) -> bypassDispatchKeyEvent
    3601:3602:boolean bypassDispatchKeyEvent(android.view.Window$Callback,android.view.KeyEvent) -> bypassDispatchKeyEvent
    3580:3585:void bypassOnContentChanged(android.view.Window$Callback) -> bypassOnContentChanged
    3616:3621:void bypassOnPanelClosed(android.view.Window$Callback,int,android.view.Menu) -> bypassOnPanelClosed
    3408:3413:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3418:3419:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3445:3452:void onContentChanged() -> onContentChanged
    3424:3429:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3434:3440:android.view.View onCreatePanelView(int) -> onCreatePanelView
    3489:3491:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3496:3503:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3456:3484:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3560:3569:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3508:3510:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3545:3553:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3527:3538:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3708:3711:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3729:3732:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3716:3717:int getApplyableNightMode() -> getApplyableNightMode
    3724:3725:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3629:3629:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3661:3670:void cleanup() -> cleanup
    3638:3655:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3647:3647:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3650:3651:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3680:3682:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3697:3701:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3687:3687:int getApplyableNightMode() -> getApplyableNightMode
    3692:3693:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    539:540:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3347:3349:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3353:3354:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3377:3377:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3359:3368:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3373:3374:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3180:3184:void <init>(int) -> <init>
    3248:3259:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    3187:3190:boolean hasPanelItems() -> hasPanelItems
    3236:3245:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    3204:3233:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3063:3064:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3068:3081:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    3086:3092:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
# {"id":"sourceFile","fileName":"AppCompatDialog.java"}
    47:66:void <init>(android.content.Context,int) -> <init>
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:143:void dismiss() -> dismiss
    214:215:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    177:180:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    184:190:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:170:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    199:199:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    195:195:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    204:204:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    209:209:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppCompatDialog androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.f$0 -> f$0
    0:0:void androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.<init>(androidx.appcompat.app.AppCompatDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
# {"id":"sourceFile","fileName":"AppCompatViewInflater.java"}
    75:93:void <clinit>() -> <clinit>
    73:96:void <init>() -> <init>
    422:443:void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet) -> backportAccessibilityAttributes
    347:363:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    274:274:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    238:238:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    258:258:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    268:268:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    243:243:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    253:253:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    233:233:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    280:280:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    263:263:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    285:285:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    290:290:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    248:248:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    228:228:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    295:295:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    128:223:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    307:307:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    367:375:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    375:385:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    311:337:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    326:337:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    328:337:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    330:338:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    394:417:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    299:303:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
# {"id":"sourceFile","fileName":"AppCompatViewInflater.java"}
    456:459:void <init>(android.view.View,java.lang.String) -> <init>
    463:476:void onClick(android.view.View) -> onClick
    479:506:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.AppLocalesMetadataHolderService -> androidx.appcompat.app.AppLocalesMetadataHolderService:
# {"id":"sourceFile","fileName":"AppLocalesMetadataHolderService.java"}
    61:69:android.content.pm.ServiceInfo getServiceInfo(android.content.Context) -> getServiceInfo
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl -> androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl:
# {"id":"sourceFile","fileName":"AppLocalesMetadataHolderService.java"}
    77:77:int getDisabledComponentFlag() -> getDisabledComponentFlag
androidx.appcompat.app.AppLocalesStorageHelper -> androidx.appcompat.app.AppLocalesStorageHelper:
# {"id":"sourceFile","fileName":"AppLocalesStorageHelper.java"}
    120:149:void persistLocales(android.content.Context,java.lang.String) -> persistLocales
    128:155:void persistLocales(android.content.Context,java.lang.String) -> persistLocales
    63:113:java.lang.String readLocales(android.content.Context) -> readLocales
    166:202:void syncLocalesToFramework(android.content.Context) -> syncLocalesToFramework
androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor -> androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor:
# {"id":"sourceFile","fileName":"AppLocalesStorageHelper.java"}
    0:0:void $r8$lambda$VQIUCyuFJVaYXOOy5lMhu8dTj68(androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor,java.lang.Runnable) -> $r8$lambda$VQIUCyuFJVaYXOOy5lMhu8dTj68
      # {"id":"com.android.tools.r8.synthesized"}
    221:228:void <init>(java.util.concurrent.Executor) -> <init>
    232:244:void execute(java.lang.Runnable) -> execute
    235:239:void lambda$execute$0(java.lang.Runnable) -> lambda$execute$0
    247:252:void scheduleNext() -> scheduleNext
androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.f$0 -> f$0
    java.lang.Runnable androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.f$1 -> f$1
    0:0:void androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.<init>(androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor,java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor -> androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor:
# {"id":"sourceFile","fileName":"AppLocalesStorageHelper.java"}
    208:208:void <init>() -> <init>
    211:212:void execute(java.lang.Runnable) -> execute
androidx.appcompat.app.LayoutIncludeDetector -> androidx.appcompat.app.LayoutIncludeDetector:
# {"id":"sourceFile","fileName":"LayoutIncludeDetector.java"}
    36:38:void <init>() -> <init>
    45:61:boolean detect(android.util.AttributeSet) -> detect
    108:111:boolean isParserOutdated(org.xmlpull.v1.XmlPullParser) -> isParserOutdated
    95:103:org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque) -> popOutdatedAttrHolders
    66:83:boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser) -> shouldInheritContext
androidx.appcompat.app.LocaleOverlayHelper -> androidx.appcompat.app.LocaleOverlayHelper:
# {"id":"sourceFile","fileName":"LocaleOverlayHelper.java"}
    69:82:androidx.core.os.LocaleListCompat combineLocales(androidx.core.os.LocaleListCompat,androidx.core.os.LocaleListCompat) -> combineLocales
    47:50:androidx.core.os.LocaleListCompat combineLocalesIfOverlayExists(androidx.core.os.LocaleListCompat,androidx.core.os.LocaleListCompat) -> combineLocalesIfOverlayExists
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
# {"id":"sourceFile","fileName":"TwilightCalculator.java"}
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
# {"id":"sourceFile","fileName":"TwilightManager.java"}
    66:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:187:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
# {"id":"sourceFile","fileName":"TwilightManager.java"}
    196:197:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    84:85:void <clinit>() -> <clinit>
    98:176:void <init>(android.app.Activity,boolean) -> <init>
    98:180:void <init>(android.app.Dialog) -> <init>
    871:907:void animateToMode(boolean) -> animateToMode
    756:761:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    971:975:boolean collapseActionView() -> collapseActionView
    309:314:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    348:357:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    833:861:void doHide(boolean) -> doHide
    784:830:void doShow(boolean) -> doShow
    670:671:void enableContentAnimations(boolean) -> enableContentAnimations
    234:240:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    515:515:int getDisplayOptions() -> getDisplayOptions
    510:510:int getNavigationMode() -> getNavigationMode
    917:929:android.content.Context getThemedContext() -> getThemedContext
    708:715:void hideForActionMode() -> hideForActionMode
    719:723:void hideForSystem() -> hideForSystem
    192:231:void init(android.view.View) -> init
    256:257:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    959:963:void onContentScrollStarted() -> onContentScrollStarted
    967:967:void onContentScrollStopped() -> onContentScrollStopped
    1396:1406:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    318:319:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1389:1392:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    377:378:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    471:476:void setDisplayOptions(int,int) -> setDisplayOptions
    246:247:void setElevation(float) -> setElevation
    260:282:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    727:733:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    392:393:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    330:334:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    443:444:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    912:912:boolean shouldAnimateContextView() -> shouldAnimateContextView
    682:689:void showForActionMode() -> showForActionMode
    693:697:void showForSystem() -> showForSystem
    520:536:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    767:781:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$$ExternalSyntheticThrowCCEIfNotNull0 -> androidx.appcompat.app.WindowDecorActionBar$$ExternalSyntheticThrowCCEIfNotNull0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.WindowDecorActionBar$$InternalSyntheticThrowCCEIfNotNull$7$2eedefc71131769a69fe004afbfba925e9f7a9a0207cf804d262d264353d1271$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    134:134:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    137:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    151:151:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    154:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    160:160:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    163:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    989:995:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1054:1058:boolean dispatchOnCreate() -> dispatchOnCreate
    1058:1059:boolean dispatchOnCreate() -> dispatchOnCreate
    1009:1034:void finish() -> finish
    1111:1111:android.view.View getCustomView() -> getCustomView
    1004:1004:android.view.Menu getMenu() -> getMenu
    999:999:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1095:1095:java.lang.CharSequence getSubtitle() -> getSubtitle
    1090:1090:java.lang.CharSequence getTitle() -> getTitle
    1038:1051:void invalidate() -> invalidate
    1106:1106:boolean isTitleOptional() -> isTitleOptional
    1116:1119:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1144:1149:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1064:1066:void setCustomView(android.view.View) -> setCustomView
    1070:1071:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1085:1086:void setSubtitle(int) -> setSubtitle
    1075:1076:void setTitle(java.lang.CharSequence) -> setTitle
    1080:1081:void setTitle(int) -> setTitle
    1100:1102:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
# {"id":"sourceFile","fileName":"AppCompatResources.java"}
    48:48:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    66:66:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.graphics.drawable.DrawableWrapperCompat -> androidx.appcompat.graphics.drawable.DrawableWrapperCompat:
# {"id":"sourceFile","fileName":"DrawableWrapperCompat.java"}
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    162:163:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:109:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:171:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:84:void setAlpha(int) -> setAlpha
    188:189:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    88:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:74:void setDither(boolean) -> setDither
    235:244:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    213:214:void setHotspot(float,float) -> setHotspot
    218:219:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:199:void setTint(int) -> setTint
    203:204:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:209:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    178:179:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.resources.Compatibility$Api15Impl -> androidx.appcompat.resources.Compatibility$Api15Impl:
# {"id":"sourceFile","fileName":"Compatibility.java"}
    96:97:void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean) -> getValueForDensity
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
# {"id":"sourceFile","fileName":"ActionBarPolicy.java"}
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:73:int getMaxActionButtons() -> getMaxActionButtons
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:79:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
# {"id":"sourceFile","fileName":"ActionMode.java"}
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ActionMode$Callback -> androidx.appcompat.view.ActionMode$Callback:
# {"id":"sourceFile","fileName":"ActionMode.java"}
androidx.appcompat.view.CollapsibleActionView -> androidx.appcompat.view.CollapsibleActionView:
# {"id":"sourceFile","fileName":"CollapsibleActionView.java"}
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
# {"id":"sourceFile","fileName":"ContextThemeWrapper.java"}
    70:72:void <init>(android.content.Context,int) -> <init>
    84:86:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    104:112:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    90:91:void attachBaseContext(android.content.Context) -> attachBaseContext
    213:213:android.content.res.AssetManager getAssets() -> getAssets
    116:116:android.content.res.Resources getResources() -> getResources
    120:139:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    174:180:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    160:169:android.content.res.Resources$Theme getTheme() -> getTheme
    155:155:int getThemeResId() -> getThemeResId
    199:208:void initializeTheme() -> initializeTheme
    222:234:boolean isEmptyConfiguration(android.content.res.Configuration) -> isEmptyConfiguration
    195:196:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    144:148:void setTheme(int) -> setTheme
androidx.appcompat.view.ContextThemeWrapper$Api17Impl -> androidx.appcompat.view.ContextThemeWrapper$Api17Impl:
# {"id":"sourceFile","fileName":"ContextThemeWrapper.java"}
    246:246:android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration) -> createConfigurationContext
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
# {"id":"sourceFile","fileName":"StandaloneActionMode.java"}
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:111:void finish() -> finish
    130:130:android.view.View getCustomView() -> getCustomView
    115:115:android.view.Menu getMenu() -> getMenu
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    125:125:java.lang.CharSequence getSubtitle() -> getSubtitle
    120:120:java.lang.CharSequence getTitle() -> getTitle
    100:101:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    140:140:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    160:162:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:96:void setCustomView(android.view.View) -> setCustomView
    68:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:79:void setSubtitle(int) -> setSubtitle
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
    73:74:void setTitle(int) -> setTitle
    83:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
# {"id":"sourceFile","fileName":"SupportActionModeWrapper.java"}
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
# {"id":"sourceFile","fileName":"SupportActionModeWrapper.java"}
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:137:void inflate(int,android.view.Menu) -> inflate
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    242:242:void <clinit>() -> <clinit>
    247:259:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    337:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:532:void addItem() -> addItem
    535:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    459:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:556:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:380:void readGroup(android.util.AttributeSet) -> readGroup
    386:456:void readItem(android.util.AttributeSet) -> readItem
    356:362:void resetGroup() -> resetGroup
    467:527:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompatSet.java"}
    42:120:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompatSet.java"}
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    51:56:void <init>(android.view.Window$Callback) -> <init>
    80:80:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    60:60:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    65:65:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    85:85:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    70:70:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    75:75:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    189:189:android.view.Window$Callback getWrapped() -> getWrapped
    172:173:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    167:168:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    130:131:void onAttachedToWindow() -> onAttachedToWindow
    95:95:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    90:90:android.view.View onCreatePanelView(int) -> onCreatePanelView
    135:136:void onDetachedFromWindow() -> onDetachedFromWindow
    110:110:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    105:105:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    140:141:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    185:186:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    100:100:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    179:180:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    146:146:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    151:151:boolean onSearchRequested() -> onSearchRequested
    115:116:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    125:126:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    162:162:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api23Impl:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    200:200:boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent) -> onSearchRequested
    206:206:android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api24Impl:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    219:220:void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api26Impl:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    232:233:void onPointerCaptureChanged(android.view.Window$Callback,boolean) -> onPointerCaptureChanged
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
# {"id":"sourceFile","fileName":"ActionMenuItem.java"}
    54:86:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    449:461:void applyIconTint() -> applyIconTint
    379:379:boolean collapseActionView() -> collapseActionView
    374:374:boolean expandActionView() -> expandActionView
    345:345:android.view.ActionProvider getActionProvider() -> getActionProvider
    335:335:android.view.View getActionView() -> getActionView
    95:95:int getAlphabeticModifiers() -> getAlphabeticModifiers
    90:90:char getAlphabeticShortcut() -> getAlphabeticShortcut
    401:401:java.lang.CharSequence getContentDescription() -> getContentDescription
    100:100:int getGroupId() -> getGroupId
    105:105:android.graphics.drawable.Drawable getIcon() -> getIcon
    429:429:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    445:445:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    110:110:android.content.Intent getIntent() -> getIntent
    115:115:int getItemId() -> getItemId
    120:120:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    130:130:int getNumericModifiers() -> getNumericModifiers
    125:125:char getNumericShortcut() -> getNumericShortcut
    135:135:int getOrder() -> getOrder
    140:140:android.view.SubMenu getSubMenu() -> getSubMenu
    356:356:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    145:145:java.lang.CharSequence getTitle() -> getTitle
    150:150:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    413:413:java.lang.CharSequence getTooltipText() -> getTooltipText
    155:155:boolean hasSubMenu() -> hasSubMenu
    384:384:boolean isActionViewExpanded() -> isActionViewExpanded
    160:160:boolean isCheckable() -> isCheckable
    165:165:boolean isChecked() -> isChecked
    170:170:boolean isEnabled() -> isEnabled
    175:175:boolean isVisible() -> isVisible
    340:340:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    43:43:android.view.MenuItem setActionView(int) -> setActionView
    43:43:android.view.MenuItem setActionView(android.view.View) -> setActionView
    330:330:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    351:351:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    180:181:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    187:189:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    194:195:android.view.MenuItem setCheckable(boolean) -> setCheckable
    205:206:android.view.MenuItem setChecked(boolean) -> setChecked
    43:43:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    395:396:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    211:212:android.view.MenuItem setEnabled(boolean) -> setEnabled
    217:220:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    225:228:android.view.MenuItem setIcon(int) -> setIcon
    419:424:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    435:440:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    233:234:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    239:240:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    246:248:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    389:389:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    253:254:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    259:261:android.view.MenuItem setShortcut(char,char) -> setShortcut
    268:272:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    315:315:void setShowAsAction(int) -> setShowAsAction
    43:43:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    368:369:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    277:278:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    283:284:android.view.MenuItem setTitle(int) -> setTitle
    289:290:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    43:43:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    407:408:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    295:296:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    100:100:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    124:124:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    242:242:boolean hasText() -> hasText
    129:142:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    269:269:boolean needsDividerAfter() -> needsDividerAfter
    264:264:boolean needsDividerBefore() -> needsDividerBefore
    155:158:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    274:301:void onMeasure(int,int) -> onMeasure
    338:339:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    146:150:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    170:170:boolean prefersCondensedTitle() -> prefersCondensedTitle
    176:176:void setCheckable(boolean) -> setCheckable
    181:181:void setChecked(boolean) -> setChecked
    184:190:void setExpandedFormat(boolean) -> setExpandedFormat
    220:239:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    161:162:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    118:120:void setPadding(int,int,int,int) -> setPadding
    165:166:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    252:255:void setTitle(java.lang.CharSequence) -> setTitle
    108:112:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    193:216:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    304:306:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    310:313:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    319:323:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    341:341:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
# {"id":"sourceFile","fileName":"BaseMenuPresenter.java"}
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    239:239:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    234:234:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:224:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:249:void setId(int) -> setId
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
# {"id":"sourceFile","fileName":"BaseMenuWrapper.java"}
    34:36:void <init>(android.content.Context) -> <init>
    39:58:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:78:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:89:void internalClear() -> internalClear
    92:101:void internalRemoveGroup(int) -> internalRemoveGroup
    104:113:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    66:66:void <clinit>() -> <clinit>
    89:238:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:362:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    792:792:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    246:255:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:299:void dismiss() -> dismiss
    656:663:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:524:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    727:727:boolean flagActionItems() -> flagActionItems
    316:318:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:349:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:723:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:613:void onDismiss() -> onDismiss
    303:307:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    630:646:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:757:void setAnchorView(android.view.View) -> setAnchorView
    624:625:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:243:void setForceShowIcon(boolean) -> setForceShowIcon
    741:746:void setGravity(int) -> setGravity
    773:775:void setHorizontalOffset(int) -> setHorizontalOffset
    761:762:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:786:void setShowTitle(boolean) -> setShowTitle
    779:781:void setVerticalOffset(int) -> setVerticalOffset
    260:280:void show() -> show
    370:504:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:620:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    801:805:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
# {"id":"sourceFile","fileName":"ExpandedMenuView.java"}
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
# {"id":"sourceFile","fileName":"ListMenuItemView.java"}
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:139:void addContentView(android.view.View) -> addContentView
    142:147:void addContentView(android.view.View,int) -> addContentView
    347:355:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:135:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:314:void insertCheckBox() -> insertCheckBox
    294:298:void insertIconView() -> insertIconView
    301:306:void insertRadioButton() -> insertRadioButton
    102:120:void onFinishInflate() -> onFinishInflate
    282:291:void onMeasure(int,int) -> onMeasure
    318:318:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:213:void setCheckable(boolean) -> setCheckable
    219:232:void setChecked(boolean) -> setChecked
    150:151:void setForceShowIcon(boolean) -> setForceShowIcon
    339:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:278:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:252:void setShortcut(boolean,char) -> setShortcut
    235:238:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    155:162:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
# {"id":"sourceFile","fileName":"ListMenuPresenter.java"}
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
# {"id":"sourceFile","fileName":"ListMenuPresenter.java"}
    233:237:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    278:291:void findExpandedIndex() -> findExpandedIndex
    241:246:int getCount() -> getCount
    232:232:java.lang.Object getItem(int) -> getItem
    251:256:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    263:263:long getItemId(int) -> getItemId
    268:274:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    295:297:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
# {"id":"sourceFile","fileName":"MenuAdapter.java"}
    36:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
    68:68:void <clinit>() -> <clinit>
    134:236:void <init>(android.content.Context) -> <init>
    468:468:android.view.MenuItem add(java.lang.CharSequence) -> add
    473:473:android.view.MenuItem add(int) -> add
    478:478:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    483:483:android.view.MenuItem add(int,int,int,int) -> add
    522:546:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    443:456:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:251:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:266:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    488:488:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    493:493:android.view.SubMenu addSubMenu(int) -> addSubMenu
    498:502:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    507:507:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    843:846:void changeMenuMode() -> changeMenuMode
    606:612:void clear() -> clear
    1215:1220:void clearHeader() -> clearHeader
    1032:1044:void close(boolean) -> close
    1048:1049:void close() -> close
    1375:1393:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    462:462:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    836:836:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:296:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    300:317:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1353:1371:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    726:726:int findGroupIndex(int) -> findGroupIndex
    730:744:int findGroupIndex(int,int) -> findGroupIndex
    849:856:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    695:709:android.view.MenuItem findItem(int) -> findItem
    713:722:int findItemIndex(int) -> findItemIndex
    932:967:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    884:916:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1165:1202:void flagActionItems() -> flagActionItems
    1205:1206:java.util.ArrayList getActionItems() -> getActionItems
    432:432:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    832:832:android.content.Context getContext() -> getContext
    1397:1397:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1318:1318:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1314:1314:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1322:1322:android.view.View getHeaderView() -> getHeaderView
    754:754:android.view.MenuItem getItem(int) -> getItem
    1210:1211:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1349:1349:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    781:787:int getOrdering(int) -> getOrdering
    828:828:android.content.res.Resources getResources() -> getResources
    1330:1330:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1120:1135:java.util.ArrayList getVisibleItems() -> getVisibleItems
    677:690:boolean hasVisibleItems() -> hasVisibleItems
    516:516:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    794:794:boolean isQwertyMode() -> isQwertyMode
    759:759:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    824:824:boolean isShortcutsVisible() -> isShortcutsVisible
    1114:1116:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1103:1105:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1059:1072:void onItemsChanged(boolean) -> onItemsChanged
    973:973:boolean performIdentifierAction(int,int) -> performIdentifierAction
    977:977:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    981:1020:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    861:873:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    556:569:void removeGroup(int) -> removeGroup
    551:552:void removeItem(int) -> removeItem
    582:587:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:281:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    402:429:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    374:398:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    436:437:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    239:240:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    615:630:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    634:643:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    512:513:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    665:673:void setGroupEnabled(int,boolean) -> setGroupEnabled
    647:661:void setGroupVisible(int,boolean) -> setGroupVisible
    1285:1286:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1297:1298:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1224:1251:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1261:1262:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1273:1274:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1309:1310:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1406:1407:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    764:767:void setQwertyMode(boolean) -> setQwertyMode
    814:818:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    749:749:int size() -> size
    1088:1094:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1080:1085:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuBuilder$Callback -> androidx.appcompat.view.menu.MenuBuilder$Callback:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> androidx.appcompat.view.menu.MenuBuilder$ItemInvoker:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
# {"id":"sourceFile","fileName":"MenuDialogHelper.java"}
    43:45:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:143:void dismiss() -> dismiss
    170:171:void onClick(android.content.DialogInterface,int) -> onClick
    152:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:148:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:165:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:91:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
# {"id":"sourceFile","fileName":"MenuItemImpl.java"}
    69:147:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    697:698:void actionFormatChanged() -> actionFormatChanged
    406:409:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    576:591:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    848:861:boolean collapseActionView() -> collapseActionView
    834:843:boolean expandActionView() -> expandActionView
    796:796:android.view.ActionProvider getActionProvider() -> getActionProvider
    778:784:android.view.View getActionView() -> getActionView
    277:277:int getAlphabeticModifiers() -> getAlphabeticModifiers
    244:244:char getAlphabeticShortcut() -> getAlphabeticShortcut
    902:902:java.lang.CharSequence getContentDescription() -> getContentDescription
    204:204:int getGroupId() -> getGroupId
    504:515:android.graphics.drawable.Drawable getIcon() -> getIcon
    555:555:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    572:572:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    224:224:android.content.Intent getIntent() -> getIntent
    210:210:int getItemId() -> getItemId
    693:693:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    287:287:int getNumericModifiers() -> getNumericModifiers
    282:282:char getNumericShortcut() -> getNumericShortcut
    215:215:int getOrder() -> getOrder
    219:219:int getOrdering() -> getOrdering
    346:346:char getShortcut() -> getShortcut
    356:402:java.lang.String getShortcutLabel() -> getShortcutLabel
    423:423:android.view.SubMenu getSubMenu() -> getSubMenu
    802:802:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    440:440:java.lang.CharSequence getTitle() -> getTitle
    475:484:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    450:452:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    917:917:java.lang.CharSequence getTooltipText() -> getTooltipText
    865:871:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    428:428:boolean hasSubMenu() -> hasSubMenu
    155:181:boolean invoke() -> invoke
    708:708:boolean isActionButton() -> isActionButton
    881:881:boolean isActionViewExpanded() -> isActionViewExpanded
    596:596:boolean isCheckable() -> isCheckable
    620:620:boolean isChecked() -> isChecked
    186:186:boolean isEnabled() -> isEnabled
    615:615:boolean isExclusiveCheckable() -> isExclusiveCheckable
    646:649:boolean isVisible() -> isVisible
    712:712:boolean requestsActionButton() -> requestsActionButton
    717:717:boolean requiresActionButton() -> requiresActionButton
    790:790:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    52:52:android.view.MenuItem setActionView(int) -> setActionView
    52:52:android.view.MenuItem setActionView(android.view.View) -> setActionView
    758:764:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    770:773:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    875:877:void setActionViewExpanded(boolean) -> setActionViewExpanded
    249:257:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    263:272:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    601:607:android.view.MenuItem setCheckable(boolean) -> setCheckable
    625:633:android.view.MenuItem setChecked(boolean) -> setChecked
    637:642:void setCheckedInt(boolean) -> setCheckedInt
    52:52:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    893:897:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:199:android.view.MenuItem setEnabled(boolean) -> setEnabled
    611:612:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    520:525:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    530:537:android.view.MenuItem setIcon(int) -> setIcon
    544:550:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    561:567:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    229:230:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    726:731:void setIsActionButton(boolean) -> setIsActionButton
    688:689:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    292:300:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    306:315:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    886:887:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    678:679:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    320:325:android.view.MenuItem setShortcut(char,char) -> setShortcut
    332:339:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    739:753:void setShowAsAction(int) -> setShowAsAction
    52:52:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    828:829:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    432:435:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    808:822:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    457:465:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    470:470:android.view.MenuItem setTitle(int) -> setTitle
    490:499:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    52:52:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    908:912:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    671:673:android.view.MenuItem setVisible(boolean) -> setVisible
    661:663:boolean setVisibleInt(boolean) -> setVisibleInt
    704:704:boolean shouldShowIcon() -> shouldShowIcon
    418:418:boolean shouldShowShortcut() -> shouldShowShortcut
    734:734:boolean showsTextAsAction() -> showsTextAsAction
    684:684:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
# {"id":"sourceFile","fileName":"MenuItemImpl.java"}
    815:815:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    818:819:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    56:61:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:395:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:525:void onActionViewCollapsed() -> onActionViewCollapsed
    519:520:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
# {"id":"sourceFile","fileName":"MenuPopup.java"}
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    83:84:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    64:343:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    233:268:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    307:310:void dismiss() -> dismiss
    164:167:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    329:329:boolean isShowing() -> isShowing
    321:326:void onDismiss() -> onDismiss
    109:110:void setAnchorView(android.view.View) -> setAnchorView
    122:126:void setForceShowIcon(boolean) -> setForceShowIcon
    136:137:void setGravity(int) -> setGravity
    98:99:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    334:338:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    147:150:void show() -> show
    272:300:void showPopup(int,int,boolean,boolean) -> showPopup
    177:186:boolean tryShow() -> tryShow
    213:222:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    343:343:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    346:347:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl -> androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    365:366:void getRealSize(android.view.Display,android.graphics.Point) -> getRealSize
androidx.appcompat.view.menu.MenuPresenter -> androidx.appcompat.view.menu.MenuPresenter:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
androidx.appcompat.view.menu.MenuPresenter$Callback -> androidx.appcompat.view.menu.MenuPresenter$Callback:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
androidx.appcompat.view.menu.MenuView -> androidx.appcompat.view.menu.MenuView:
# {"id":"sourceFile","fileName":"MenuView.java"}
androidx.appcompat.view.menu.MenuView$ItemView -> androidx.appcompat.view.menu.MenuView$ItemView:
# {"id":"sourceFile","fileName":"MenuView.java"}
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
# {"id":"sourceFile","fileName":"MenuWrapperICS.java"}
    41:46:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.ShowableListMenu -> androidx.appcompat.view.menu.ShowableListMenu:
# {"id":"sourceFile","fileName":"ShowableListMenu.java"}
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    46:46:void <clinit>() -> <clinit>
    60:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:211:void show() -> show
    149:203:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
# {"id":"sourceFile","fileName":"SubMenuBuilder.java"}
    43:47:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:81:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:153:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:97:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:103:android.view.SubMenu setIcon(int) -> setIcon
    51:52:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
# {"id":"sourceFile","fileName":"AbsActionBarView.java"}
    39:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    153:156:int getAnimatedVisibility() -> getAnimatedVisibility
    146:146:int getContentHeight() -> getContentHeight
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    258:258:int next(int,int,boolean) -> next
    75:87:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:137:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:112:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:272:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    187:193:void setVisibility(int) -> setVisibility
    160:176:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
# {"id":"sourceFile","fileName":"AbsActionBarView.java"}
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:303:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:298:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:290:void onAnimationStart(android.view.View) -> onAnimationStart
    281:283:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
# {"id":"sourceFile","fileName":"ActionBarBackgroundDrawable.java"}
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl -> androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl:
# {"id":"sourceFile","fileName":"ActionBarBackgroundDrawable.java"}
    87:88:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
# {"id":"sourceFile","fileName":"ActionBarContainer.java"}
    60:81:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    169:179:void drawableStateChanged() -> drawableStateChanged
    268:269:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    244:244:android.view.View getTabContainer() -> getTabContainer
    264:264:boolean isCollapsed(android.view.View) -> isCollapsed
    183:193:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    85:88:void onFinishInflate() -> onFinishInflate
    223:226:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    210:210:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    304:348:void onLayout(boolean,int,int,int,int) -> onLayout
    274:300:void onMeasure(int,int) -> onMeasure
    215:218:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    91:109:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    133:150:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    112:130:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    230:241:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    203:206:void setTransitioning(boolean) -> setTransitioning
    154:159:void setVisibility(int) -> setVisibility
    251:251:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    257:260:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    163:164:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContainer$Api21Impl -> androidx.appcompat.widget.ActionBarContainer$Api21Impl:
# {"id":"sourceFile","fileName":"ActionBarContainer.java"}
    357:358:void invalidateOutline(androidx.appcompat.widget.ActionBarContainer) -> invalidateOutline
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
# {"id":"sourceFile","fileName":"ActionBarContextView.java"}
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    195:199:void closeMode() -> closeMode
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    41:41:int getAnimatedVisibility() -> getAnimatedVisibility
    41:41:int getContentHeight() -> getContentHeight
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    163:192:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:160:void initTitle() -> initTitle
    371:371:boolean isTitleOptional() -> isTitleOptional
    202:209:void killMode() -> killMode
    89:94:void onDetachedFromWindow() -> onDetachedFromWindow
    41:41:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    329:356:void onLayout(boolean,int,int,int,int) -> onLayout
    249:325:void onMeasure(int,int) -> onMeasure
    41:41:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    98:99:void setContentHeight(int) -> setContentHeight
    102:114:void setCustomView(android.view.View) -> setCustomView
    123:125:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    117:120:void setTitle(java.lang.CharSequence) -> setTitle
    364:368:void setTitleOptional(boolean) -> setTitleOptional
    41:41:void setVisibility(int) -> setVisibility
    41:41:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    360:360:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    213:216:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
# {"id":"sourceFile","fileName":"ActionBarContextView.java"}
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:176:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    147:147:void <clinit>() -> <clinit>
    71:163:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:743:void addActionBarHideOffset() -> addActionBarHideOffset
    287:305:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:878:void dismissPopups() -> dismissPopups
    543:552:void draw(android.graphics.Canvas) -> draw
    311:313:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    765:766:java.lang.CharSequence getTitle() -> getTitle
    718:723:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:176:void init(android.content.Context) -> init
    771:783:void initFeature(int) -> initFeature
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:244:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:182:void onDetachedFromWindow() -> onDetachedFromWindow
    520:539:void onLayout(boolean,int,int,int,int) -> onLayout
    410:516:void onMeasure(int,int) -> onMeasure
    646:655:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    665:665:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    598:601:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    661:661:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    564:565:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    591:594:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:628:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    576:579:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:621:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    583:586:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:642:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    253:274:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:283:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:733:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:728:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:679:void pullChildren() -> pullChildren
    736:738:void removeActionBarHideOffset() -> removeActionBarHideOffset
    711:715:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:196:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:216:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:700:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    804:806:void setIcon(int) -> setIcon
    810:812:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    816:818:void setLogo(int) -> setLogo
    858:860:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:854:void setMenuPrepared() -> setMenuPrepared
    199:208:void setOverlayMode(boolean) -> setOverlayMode
    237:237:void setShowingForActionMode(boolean) -> setShowingForActionMode
    788:788:void setUiOptions(int) -> setUiOptions
    753:755:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:761:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    556:556:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:125:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:119:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:134:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:144:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    882:883:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:887:void <init>(int,int) -> <init>
    890:891:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    75:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:375:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:543:boolean flagActionItems() -> flagActionItems
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    354:365:boolean hideOverflowMenu() -> hideOverflowMenu
    384:388:boolean hideSubMenus() -> hideSubMenus
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:550:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:159:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:588:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:150:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    733:743:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:751:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    800:801:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    782:784:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:796:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    628:667:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    687:687:boolean needsDividerAfter() -> needsDividerAfter
    682:682:boolean needsDividerBefore() -> needsDividerBefore
    671:677:boolean performClick() -> performClick
    692:709:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:651:boolean onForwardingStarted() -> onForwardingStarted
    659:664:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    715:719:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:729:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    755:756:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:776:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    79:80:void <init>(android.content.Context) -> <init>
    83:90:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    116:116:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    407:437:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    131:141:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    442:540:void onLayout(boolean,int,int,int,int) -> onLayout
    150:177:void onMeasure(int,int) -> onMeasure
    181:390:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    144:145:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    100:108:void setPopupTheme(int) -> setPopupTheme
    125:127:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> androidx.appcompat.widget.ActionMenuView$ActionMenuChildView:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    873:873:void <clinit>() -> <clinit>
    878:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
# {"id":"sourceFile","fileName":"AlertDialogLayout.java"}
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
# {"id":"sourceFile","fileName":"AppCompatAutoCompleteTextView.java"}
    65:65:void <clinit>() -> <clinit>
    79:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:105:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:233:void drawableStateChanged() -> drawableStateChanged
    264:265:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    322:322:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    365:365:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:145:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:166:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:158:void setBackgroundResource(int) -> setBackgroundResource
    292:296:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    302:306:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    257:259:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    149:150:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    281:282:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    276:277:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:180:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:208:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    345:347:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    385:387:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:241:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
# {"id":"sourceFile","fileName":"AppCompatBackgroundHelper.java"}
    37:46:void <init>(android.view.View) -> <init>
    178:200:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:140:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:93:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:86:void onSetBackgroundResource(int) -> onSetBackgroundResource
    143:153:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:102:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:116:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
# {"id":"sourceFile","fileName":"AppCompatButton.java"}
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:94:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    340:347:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    324:331:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    308:315:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    356:363:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    290:299:int getAutoSizeTextType() -> getAutoSizeTextType
    395:396:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    456:459:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    418:418:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    440:440:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    189:191:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    195:197:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    201:205:void onLayout(boolean,int,int,int,int) -> onLayout
    220:226:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    464:466:void setAllCaps(boolean) -> setAllCaps
    254:263:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    272:279:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    235:242:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    388:390:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    471:472:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    446:447:void setFilters(android.text.InputFilter[]) -> setFilters
    376:379:void setSupportAllCaps(boolean) -> setSupportAllCaps
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    406:408:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    428:430:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    209:216:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
# {"id":"sourceFile","fileName":"AppCompatCheckBox.java"}
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:94:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    251:258:void drawableStateChanged() -> drawableStateChanged
    122:125:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    101:104:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    201:202:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    229:230:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    148:150:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    173:175:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    314:314:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    357:357:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    267:269:void setAllCaps(boolean) -> setAllCaps
    235:239:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    243:247:void setBackgroundResource(int) -> setBackgroundResource
    109:113:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    117:118:void setButtonDrawable(int) -> setButtonDrawable
    284:288:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    294:298:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    273:274:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    262:263:void setFilters(android.text.InputFilter[]) -> setFilters
    186:189:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    214:217:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    135:138:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    160:163:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    337:339:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    377:379:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
# {"id":"sourceFile","fileName":"AppCompatCheckedTextView.java"}
    82:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    253:263:void drawableStateChanged() -> drawableStateChanged
    286:287:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    296:299:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    195:196:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    223:224:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    140:142:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    167:169:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    352:352:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    395:395:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    268:268:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    304:306:void setAllCaps(boolean) -> setAllCaps
    229:233:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    237:241:void setBackgroundResource(int) -> setBackgroundResource
    107:111:void setCheckMarkDrawable(android.graphics.drawable.Drawable) -> setCheckMarkDrawable
    115:116:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    322:326:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    332:336:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    279:281:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    311:312:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    180:183:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    208:211:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    126:129:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    153:156:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
    375:377:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    415:417:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    245:249:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCheckedTextViewHelper -> androidx.appcompat.widget.AppCompatCheckedTextViewHelper:
# {"id":"sourceFile","fileName":"AppCompatCheckedTextViewHelper.java"}
    43:52:void <init>(android.widget.CheckedTextView) -> <init>
    133:151:void applyCheckMarkTint() -> applyCheckMarkTint
    108:108:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    119:119:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    55:98:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    123:130:void onSetCheckMarkDrawable() -> onSetCheckMarkDrawable
    101:105:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    112:116:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
# {"id":"sourceFile","fileName":"AppCompatCompoundButtonHelper.java"}
    39:48:void <init>(android.widget.CompoundButton) -> <init>
    127:145:void applyButtonTint() -> applyButtonTint
    148:156:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    113:113:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    51:92:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:124:void onSetButtonDrawable() -> onSetButtonDrawable
    95:99:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:110:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    54:54:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    465:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    483:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    58:460:void preload() -> preload
    502:503:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    62:128:void <init>() -> <init>
    360:365:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    154:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:254:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    185:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:309:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:396:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    450:456:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:318:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:356:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:445:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
# {"id":"sourceFile","fileName":"AppCompatEditText.java"}
    95:96:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:117:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    78:78:android.view.textclassifier.TextClassifier access$001(androidx.appcompat.widget.AppCompatEditText) -> access$001
    78:78:void access$101(androidx.appcompat.widget.AppCompatEditText,android.view.textclassifier.TextClassifier) -> access$101
    247:254:void drawableStateChanged() -> drawableStateChanged
    304:305:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    312:315:androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller() -> getSuperCaller
    213:214:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    241:242:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    446:446:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    489:489:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    77:77:java.lang.CharSequence getText() -> getText
    165:170:android.text.Editable getText() -> getText
    342:345:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    140:157:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    273:287:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    350:353:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    389:389:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    364:367:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    183:187:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    175:179:void setBackgroundResource(int) -> setBackgroundResource
    416:420:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    426:430:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    297:299:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    405:406:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    400:401:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    198:201:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    226:229:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    469:471:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    509:511:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    258:262:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    324:329:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEditText$SuperCaller -> androidx.appcompat.widget.AppCompatEditText$SuperCaller:
# {"id":"sourceFile","fileName":"AppCompatEditText.java"}
    514:514:void <init>(androidx.appcompat.widget.AppCompatEditText) -> <init>
    518:518:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    522:523:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEmojiEditTextHelper -> androidx.appcompat.widget.AppCompatEmojiEditTextHelper:
# {"id":"sourceFile","fileName":"AppCompatEmojiEditTextHelper.java"}
    50:54:void <init>(android.widget.EditText) -> <init>
    123:126:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    86:86:boolean isEmojiCapableKeyListener(android.text.method.KeyListener) -> isEmojiCapableKeyListener
    63:75:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    148:148:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    96:97:void setEnabled(boolean) -> setEnabled
androidx.appcompat.widget.AppCompatEmojiTextHelper -> androidx.appcompat.widget.AppCompatEmojiTextHelper:
# {"id":"sourceFile","fileName":"AppCompatEmojiTextHelper.java"}
    41:44:void <init>(android.widget.TextView) -> <init>
    99:99:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    52:64:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    109:110:void setAllCaps(boolean) -> setAllCaps
    77:78:void setEnabled(boolean) -> setEnabled
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
# {"id":"sourceFile","fileName":"AppCompatHintHelper.java"}
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
# {"id":"sourceFile","fileName":"AppCompatImageButton.java"}
    73:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:263:void drawableStateChanged() -> drawableStateChanged
    167:168:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    195:196:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    137:141:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    129:133:void setBackgroundResource(int) -> setBackgroundResource
    113:117:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    97:109:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    272:274:void setImageLevel(int) -> setImageLevel
    92:93:void setImageResource(int) -> setImageResource
    121:125:void setImageURI(android.net.Uri) -> setImageURI
    152:155:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    180:183:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:210:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:238:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
# {"id":"sourceFile","fileName":"AppCompatImageHelper.java"}
    46:50:void <init>(android.widget.ImageView) -> <init>
    201:223:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    238:241:void applyImageLevel() -> applyImageLevel
    142:163:void applySupportImageTint() -> applySupportImageTint
    124:124:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    138:138:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    104:111:boolean hasOverlappingRendering() -> hasOverlappingRendering
    53:87:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    231:232:void obtainLevelFromDrawable(android.graphics.drawable.Drawable) -> obtainLevelFromDrawable
    90:101:void setImageResource(int) -> setImageResource
    115:121:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    128:135:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    179:183:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
# {"id":"sourceFile","fileName":"AppCompatImageView.java"}
    69:70:void <init>(android.content.Context) -> <init>
    73:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    268:275:void drawableStateChanged() -> drawableStateChanged
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    234:235:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    262:263:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    279:279:boolean hasOverlappingRendering() -> hasOverlappingRendering
    148:152:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    140:144:void setBackgroundResource(int) -> setBackgroundResource
    124:128:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    108:120:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    284:286:void setImageLevel(int) -> setImageLevel
    100:104:void setImageResource(int) -> setImageResource
    132:136:void setImageURI(android.net.Uri) -> setImageURI
    163:166:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:194:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    219:222:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    247:250:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
# {"id":"sourceFile","fileName":"AppCompatMultiAutoCompleteTextView.java"}
    64:64:void <clinit>() -> <clinit>
    79:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:105:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:233:void drawableStateChanged() -> drawableStateChanged
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    304:304:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    347:347:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:145:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:166:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:158:void setBackgroundResource(int) -> setBackgroundResource
    274:278:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    284:288:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    149:150:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    263:264:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    258:259:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:180:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:208:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    327:329:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    367:369:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:241:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
# {"id":"sourceFile","fileName":"AppCompatPopupWindow.java"}
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
# {"id":"sourceFile","fileName":"AppCompatProgressBarHelper.java"}
    41:41:void <clinit>() -> <clinit>
    50:52:void <init>(android.widget.ProgressBar) -> <init>
    147:148:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    152:152:android.graphics.Bitmap getSampleTile() -> getSampleTile
    55:69:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:120:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    129:143:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl -> androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl:
# {"id":"sourceFile","fileName":"AppCompatProgressBarHelper.java"}
    165:174:void transferLayerProperties(android.graphics.drawable.LayerDrawable,android.graphics.drawable.LayerDrawable,int) -> transferLayerProperties
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
# {"id":"sourceFile","fileName":"AppCompatRadioButton.java"}
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:92:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    250:257:void drawableStateChanged() -> drawableStateChanged
    120:123:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    99:102:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    200:201:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    228:229:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    146:148:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    171:173:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    313:313:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    356:356:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    266:268:void setAllCaps(boolean) -> setAllCaps
    234:238:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    242:246:void setBackgroundResource(int) -> setBackgroundResource
    107:111:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    115:116:void setButtonDrawable(int) -> setButtonDrawable
    283:287:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    293:297:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    272:273:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    261:262:void setFilters(android.text.InputFilter[]) -> setFilters
    185:188:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    213:216:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    133:136:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    158:161:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    336:338:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    376:378:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
# {"id":"sourceFile","fileName":"AppCompatRatingBar.java"}
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:57:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatReceiveContentHelper -> androidx.appcompat.widget.AppCompatReceiveContentHelper:
# {"id":"sourceFile","fileName":"AppCompatReceiveContentHelper.java"}
    85:113:boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent) -> maybeHandleDragEventViaPerformReceiveContent
    59:73:boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int) -> maybeHandleMenuActionViaPerformReceiveContent
    158:165:android.app.Activity tryGetActivity(android.view.View) -> tryGetActivity
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl -> androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl:
# {"id":"sourceFile","fileName":"AppCompatReceiveContentHelper.java"}
    123:134:boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDropForTextView
    140:144:boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity) -> onDropForView
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
# {"id":"sourceFile","fileName":"AppCompatSeekBar.java"}
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:68:void drawableStateChanged() -> drawableStateChanged
    72:74:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    59:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
# {"id":"sourceFile","fileName":"AppCompatSeekBarHelper.java"}
    36:44:void <init>(android.widget.SeekBar) -> <init>
    128:145:void applyTickMarkTint() -> applyTickMarkTint
    165:185:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:159:void drawableStateChanged() -> drawableStateChanged
    148:151:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:96:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    87:87:void <clinit>() -> <clinit>
    152:153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:169:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    188:189:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    114:249:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    248:249:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    249:310:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    566:606:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    559:563:void drawableStateChanged() -> drawableStateChanged
    381:384:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    355:358:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    400:403:int getDropDownWidth() -> getDropDownWidth
    611:611:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    336:339:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    317:317:android.content.Context getPopupContext() -> getPopupContext
    480:480:java.lang.CharSequence getPrompt() -> getPrompt
    524:525:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    553:554:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    427:432:void onDetachedFromWindow() -> onDetachedFromWindow
    444:453:void onMeasure(int,int) -> onMeasure
    633:659:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    625:628:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    436:439:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    457:466:boolean performClick() -> performClick
    82:82:void setAdapter(android.widget.Adapter) -> setAdapter
    412:423:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    493:497:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    485:489:void setBackgroundResource(int) -> setBackgroundResource
    365:371:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    346:351:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    391:396:void setDropDownWidth(int) -> setDropDownWidth
    322:327:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    331:332:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    471:476:void setPrompt(java.lang.CharSequence) -> setPrompt
    509:512:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    538:541:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    615:620:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    272:272:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    275:275:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    281:284:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    640:640:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    643:654:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$Api16Impl -> androidx.appcompat.widget.AppCompatSpinner$Api16Impl:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1177:1178:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
androidx.appcompat.widget.AppCompatSpinner$Api17Impl -> androidx.appcompat.widget.AppCompatSpinner$Api17Impl:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1147:1147:int getTextAlignment(android.view.View) -> getTextAlignment
    1157:1157:int getTextDirection(android.view.View) -> getTextDirection
    1152:1153:void setTextAlignment(android.view.View,int) -> setTextAlignment
    1162:1163:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.appcompat.widget.AppCompatSpinner$Api23Impl -> androidx.appcompat.widget.AppCompatSpinner$Api23Impl:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1133:1136:void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    864:864:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    872:876:void dismiss() -> dismiss
    943:943:android.graphics.drawable.Drawable getBackground() -> getBackground
    895:895:java.lang.CharSequence getHintText() -> getHintText
    953:953:int getHorizontalOffset() -> getHorizontalOffset
    948:948:int getVerticalOffset() -> getVerticalOffset
    880:880:boolean isShowing() -> isShowing
    919:924:void onClick(android.content.DialogInterface,int) -> onClick
    885:886:void setAdapter(android.widget.ListAdapter) -> setAdapter
    928:929:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    938:939:void setHorizontalOffset(int) -> setHorizontalOffset
    958:959:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    890:891:void setPromptText(java.lang.CharSequence) -> setPromptText
    933:934:void setVerticalOffset(int) -> setVerticalOffset
    900:908:void show(int,int) -> show
    908:915:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    711:731:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    784:788:boolean areAllItemsEnabled() -> areAllItemsEnabled
    735:735:int getCount() -> getCount
    755:756:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    740:740:java.lang.Object getItem(int) -> getItem
    745:745:long getItemId(int) -> getItemId
    808:808:int getItemViewType(int) -> getItemViewType
    750:750:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    813:813:int getViewTypeCount() -> getViewTypeCount
    761:761:boolean hasStableIds() -> hasStableIds
    818:818:boolean isEmpty() -> isEmpty
    798:802:boolean isEnabled(int) -> isEnabled
    766:769:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    773:776:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    971:992:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    968:968:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1012:1047:void computeContentWidth() -> computeContentWidth
    1002:1002:java.lang.CharSequence getHintText() -> getHintText
    1118:1118:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1108:1108:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    996:998:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1113:1114:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1008:1009:void setPromptText(java.lang.CharSequence) -> setPromptText
    1051:1102:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    981:981:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    984:990:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1077:1077:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1080:1089:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1092:1092:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1095:1099:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    679:679:void <clinit>() -> <clinit>
    665:666:void <init>(android.os.Parcelable) -> <init>
    669:671:void <init>(android.os.Parcel) -> <init>
    675:677:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    680:680:void <init>() -> <init>
    680:680:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    683:683:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    680:680:java.lang.Object[] newArray(int) -> newArray
    688:688:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
# {"id":"sourceFile","fileName":"AppCompatTextClassifierHelper.java"}
    43:45:void <init>(android.widget.TextView) -> <init>
    63:66:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    52:53:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl:
# {"id":"sourceFile","fileName":"AppCompatTextClassifierHelper.java"}
    78:83:android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView) -> getTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    75:83:void <init>(android.widget.TextView) -> <init>
    544:547:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    526:541:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    582:583:void autoSizeText() -> autoSizeText
    551:558:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    627:627:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    623:623:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    619:619:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    631:631:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    615:615:int getAutoSizeTextType() -> getAutoSizeTextType
    636:636:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    650:650:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    588:588:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    87:342:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    440:457:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    564:567:void onLayout(boolean,int,int,int,int) -> onLayout
    522:523:void onSetCompoundDrawables() -> onSetCompoundDrawables
    460:515:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    721:724:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    518:519:void setAllCaps(boolean) -> setAllCaps
    604:606:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    610:611:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    596:597:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    640:646:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    654:660:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    675:703:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    663:669:void setCompoundTints() -> setCompoundTints
    572:577:void setTextSize(int,float) -> setTextSize
    592:593:void setTextSizeInternal(int,float) -> setTextSizeInternal
    345:436:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    365:365:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    380:380:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    368:375:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    446:446:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    449:450:void run() -> run
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api17Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    793:793:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    788:789:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    782:783:void setTextLocale(android.widget.TextView,java.util.Locale) -> setTextLocale
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api24Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    770:770:android.os.LocaleList forLanguageTags(java.lang.String) -> forLanguageTags
    765:766:void setTextLocales(android.widget.TextView,android.os.LocaleList) -> setTextLocales
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    739:739:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    746:748:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    753:754:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    734:734:boolean setFontVariationSettings(android.widget.TextView,java.lang.String) -> setFontVariationSettings
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api28Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    818:818:android.graphics.Typeface create(android.graphics.Typeface,int,boolean) -> create
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    104:105:void <init>(android.content.Context) -> <init>
    108:109:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    95:128:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:85:int access$001(androidx.appcompat.widget.AppCompatTextView) -> access$001
    85:85:void access$1001(androidx.appcompat.widget.AppCompatTextView,int) -> access$1001
    85:85:int access$101(androidx.appcompat.widget.AppCompatTextView) -> access$101
    85:85:void access$1101(androidx.appcompat.widget.AppCompatTextView,int) -> access$1101
    85:85:int access$201(androidx.appcompat.widget.AppCompatTextView) -> access$201
    85:85:int[] access$301(androidx.appcompat.widget.AppCompatTextView) -> access$301
    85:85:int access$401(androidx.appcompat.widget.AppCompatTextView) -> access$401
    85:85:android.view.textclassifier.TextClassifier access$501(androidx.appcompat.widget.AppCompatTextView) -> access$501
    85:85:void access$601(androidx.appcompat.widget.AppCompatTextView,int,int,int,int) -> access$601
    85:85:void access$701(androidx.appcompat.widget.AppCompatTextView,int[],int) -> access$701
    85:85:void access$801(androidx.appcompat.widget.AppCompatTextView,int) -> access$801
    85:85:void access$901(androidx.appcompat.widget.AppCompatTextView,android.view.textclassifier.TextClassifier) -> access$901
    546:555:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    245:252:void drawableStateChanged() -> drawableStateChanged
    420:427:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    401:408:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    382:389:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    439:446:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    360:370:int getAutoSizeTextType() -> getAutoSizeTextType
    505:506:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    136:139:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    478:478:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    483:483:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    791:798:androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller() -> getSuperCaller
    182:183:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    210:211:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    698:698:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    741:741:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    559:560:java.lang.CharSequence getText() -> getText
    587:590:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    518:518:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    451:453:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    256:260:void onLayout(boolean,int,int,int,int) -> onLayout
    614:616:void onMeasure(int,int) -> onMeasure
    275:281:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    229:231:void setAllCaps(boolean) -> setAllCaps
    317:326:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    339:346:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    294:301:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    152:156:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    144:148:void setBackgroundResource(int) -> setBackgroundResource
    621:625:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    631:635:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    663:667:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    673:682:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    640:644:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    648:657:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    498:500:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    235:236:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    224:225:void setFilters(android.text.InputFilter[]) -> setFilters
    458:463:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    468:474:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    488:489:void setLineHeight(int) -> setLineHeight
    542:543:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    167:170:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    195:198:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    721:723:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    761:763:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    216:220:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    569:574:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    606:610:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    529:530:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    264:271:void setTextSize(int,float) -> setTextSize
    767:786:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextView$SuperCaller -> androidx.appcompat.widget.AppCompatTextView$SuperCaller:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
androidx.appcompat.widget.AppCompatTextView$SuperCallerApi26 -> androidx.appcompat.widget.AppCompatTextView$SuperCallerApi26:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    823:823:void <init>(androidx.appcompat.widget.AppCompatTextView) -> <init>
    826:826:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    831:831:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    836:836:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    841:841:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    846:846:int getAutoSizeTextType() -> getAutoSizeTextType
    851:851:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    857:859:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    863:864:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    868:869:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    877:877:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    880:880:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    873:874:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextView$SuperCallerApi28 -> androidx.appcompat.widget.AppCompatTextView$SuperCallerApi28:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    884:884:void <init>(androidx.appcompat.widget.AppCompatTextView) -> <init>
    888:889:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    893:894:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    66:81:void <clinit>() -> <clinit>
    89:164:void <init>(android.widget.TextView) -> <init>
    605:618:void autoSizeText() -> autoSizeText
    611:639:void autoSizeText() -> autoSizeText
    512:536:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    642:648:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    741:742:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    699:719:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    469:469:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    453:453:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    437:437:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    482:482:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    423:423:int getAutoSizeTextType() -> getAutoSizeTextType
    846:859:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    724:731:void initTempTextPaint(int) -> initTempTextPaint
    808:824:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    890:890:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    167:245:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    330:346:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    373:403:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    263:293:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    661:692:void setRawTextSize(float) -> setRawTextSize
    653:658:void setTextSizeInternal(int,float) -> setTextSizeInternal
    575:595:boolean setupAutoSizeText() -> setupAutoSizeText
    486:496:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    499:507:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    753:781:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    899:899:boolean supportsAutoSizeText() -> supportsAutoSizeText
    550:572:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    975:981:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint) -> createStaticLayoutForMeasuring
    963:963:int getMaxLines(android.widget.TextView) -> getMaxLines
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    951:951:boolean isInLayout(android.view.View) -> isInLayout
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    919:939:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl) -> createStaticLayoutForMeasuring
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    114:114:void <init>() -> <init>
    117:117:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    126:126:void <init>() -> <init>
    131:135:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    140:140:void <init>() -> <init>
    150:151:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    144:144:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$InternalSyntheticApiModelOutline$1$4bd0b8dbfc2142eeb6a8aadc70a04bbad08754921d4929d7f99fefe931b04677$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.TextDirectionHeuristic androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$InternalSyntheticApiModelOutline$1$76011127f8b33c40fb128d8179a05b6d9d5b6f231b8da4ffee0b264fabc202d3$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
# {"id":"sourceFile","fileName":"AppCompatToggleButton.java"}
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    162:169:void drawableStateChanged() -> drawableStateChanged
    183:186:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    128:129:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    156:157:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    238:238:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    281:281:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    191:193:void setAllCaps(boolean) -> setAllCaps
    98:102:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    90:94:void setBackgroundResource(int) -> setBackgroundResource
    208:212:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    218:222:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    197:198:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    173:174:void setFilters(android.text.InputFilter[]) -> setFilters
    113:116:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    141:144:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    261:263:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    301:303:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
# {"id":"sourceFile","fileName":"ButtonBarLayout.java"}
    50:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:161:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    186:186:boolean isStacked() -> isStacked
    79:153:void onMeasure(int,int) -> onMeasure
    68:75:void setAllowStacking(boolean) -> setAllowStacking
    165:183:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
    60:61:void <init>(android.content.Context) -> <init>
    64:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:212:void onAttachedToWindow() -> onAttachedToWindow
    216:220:void onDetachedFromWindow() -> onDetachedFromWindow
    101:174:void onMeasure(int,int) -> onMeasure
    82:83:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:97:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> androidx.appcompat.widget.ContentFrameLayout$OnAttachListener:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
androidx.appcompat.widget.DecorContentParent -> androidx.appcompat.widget.DecorContentParent:
# {"id":"sourceFile","fileName":"DecorContentParent.java"}
androidx.appcompat.widget.DecorToolbar -> androidx.appcompat.widget.DecorToolbar:
# {"id":"sourceFile","fileName":"DecorToolbar.java"}
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
# {"id":"sourceFile","fileName":"DialogTitle.java"}
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:82:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    50:53:void <clinit>() -> <clinit>
    107:109:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    88:100:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    149:159:void forceDrawableStateChange(android.graphics.drawable.Drawable) -> forceDrawableStateChange
    165:179:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    60:130:void <init>(android.content.Context,boolean) -> <init>
    650:664:void clearPressedItem() -> clearPressedItem
    566:568:void clickPressedItem(android.view.View,int) -> clickPressedItem
    217:223:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    589:596:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    205:213:void drawableStateChanged() -> drawableStateChanged
    183:183:boolean hasFocus() -> hasFocus
    163:163:boolean hasWindowFocus() -> hasWindowFocus
    173:173:boolean isFocused() -> isFocused
    153:153:boolean isInTouchMode() -> isInTouchMode
    309:386:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    495:497:void onDetachedFromWindow() -> onDetachedFromWindow
    506:558:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    447:490:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    227:236:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    629:647:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    610:625:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    599:605:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    578:579:void setListSelectionHidden(boolean) -> setListSelectionHidden
    667:711:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    188:200:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    390:393:void setSelectorEnabled(boolean) -> setSelectorEnabled
    134:137:boolean superIsSelectedChildViewEnabled() -> superIsSelectedChildViewEnabled
    143:148:void superSetSelectedChildViewEnabled(boolean) -> superSetSelectedChildViewEnabled
    714:714:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    582:586:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$Api21Impl -> androidx.appcompat.widget.DropDownListView$Api21Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    810:811:void drawableHotspotChanged(android.view.View,float,float) -> drawableHotspotChanged
androidx.appcompat.widget.DropDownListView$Api30Impl -> androidx.appcompat.widget.DropDownListView$Api30Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    751:765:void <clinit>() -> <clinit>
    776:776:boolean canPositionSelectorForHoveredItem() -> canPositionSelectorForHoveredItem
    791:799:void positionSelectorForHoveredItem(androidx.appcompat.widget.DropDownListView,int,android.view.View) -> positionSelectorForHoveredItem
androidx.appcompat.widget.DropDownListView$Api33Impl -> androidx.appcompat.widget.DropDownListView$Api33Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    867:867:boolean isSelectedChildViewEnabled(android.widget.AbsListView) -> isSelectedChildViewEnabled
    872:873:void setSelectedChildViewEnabled(android.widget.AbsListView,boolean) -> setSelectedChildViewEnabled
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    399:401:void <init>(android.graphics.drawable.Drawable) -> <init>
    417:420:void draw(android.graphics.Canvas) -> draw
    404:405:void setEnabled(boolean) -> setEnabled
    424:427:void setHotspot(float,float) -> setHotspot
    431:434:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    409:412:boolean setState(int[]) -> setState
    438:441:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$PreApi33Impl -> androidx.appcompat.widget.DropDownListView$PreApi33Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    820:830:void <clinit>() -> <clinit>
    837:845:boolean isSelectedChildViewEnabled(android.widget.AbsListView) -> isSelectedChildViewEnabled
    849:856:void setSelectedChildViewEnabled(android.widget.AbsListView,boolean) -> setSelectedChildViewEnabled
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    721:722:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    732:734:void cancel() -> cancel
    737:738:void post() -> post
    727:729:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
# {"id":"sourceFile","fileName":"FitWindowsFrameLayout.java"}
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
# {"id":"sourceFile","fileName":"FitWindowsLinearLayout.java"}
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
# {"id":"sourceFile","fileName":"FitWindowsViewGroup.java"}
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    66:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:249:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:284:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    157:158:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:197:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1781:1781:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    342:380:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    315:339:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    383:386:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    389:392:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1341:1360:void forceUniformHeight(int,int) -> forceUniformHeight
    919:938:void forceUniformWidth(int,int) -> forceUniformWidth
    61:61:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1764:1769:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1751:1751:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1774:1774:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    445:493:int getBaseline() -> getBaseline
    503:503:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1371:1371:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    240:240:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    288:288:int getDividerPadding() -> getDividerPadding
    298:298:int getDividerWidth() -> getDividerWidth
    1730:1730:int getGravity() -> getGravity
    1413:1413:int getLocationOffset(android.view.View) -> getLocationOffset
    1425:1425:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1695:1695:int getOrientation() -> getOrientation
    230:230:int getShowDividers() -> getShowDividers
    528:528:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    541:541:int getVirtualChildCount() -> getVirtualChildCount
    553:553:float getWeightSum() -> getWeightSum
    590:604:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1545:1666:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1450:1530:void layoutVertical(int,int,int,int) -> layoutVertical
    1401:1403:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    952:1319:void measureHorizontal(int,int) -> measureHorizontal
    1319:1335:void measureHorizontal(int,int) -> measureHorizontal
    1382:1382:int measureNullChild(int) -> measureNullChild
    619:900:void measureVertical(int,int) -> measureVertical
    900:915:void measureVertical(int,int) -> measureVertical
    303:312:void onDraw(android.graphics.Canvas) -> onDraw
    1786:1788:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1792:1794:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1430:1435:void onLayout(boolean,int,int,int,int) -> onLayout
    574:579:void onMeasure(int,int) -> onMeasure
    413:414:void setBaselineAligned(boolean) -> setBaselineAligned
    511:516:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1669:1670:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    251:264:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    276:277:void setDividerPadding(int) -> setDividerPadding
    1707:1719:void setGravity(int) -> setGravity
    1734:1739:void setHorizontalGravity(int) -> setHorizontalGravity
    440:441:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1678:1682:void setOrientation(int) -> setOrientation
    207:211:void setShowDividers(int) -> setShowDividers
    1742:1747:void setVerticalGravity(int) -> setVerticalGravity
    569:570:void setWeightSum(float) -> setWeightSum
    215:215:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    1805:1806:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1812:1813:void <init>(int,int) -> <init>
    1833:1834:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    87:112:void <clinit>() -> <clinit>
    227:228:void <init>(android.content.Context) -> <init>
    251:252:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    118:281:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1159:1332:int buildDropDown() -> buildDropDown
    849:856:void clearListSelection() -> clearListSelection
    953:953:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    775:780:void dismiss() -> dismiss
    463:463:android.view.View getAnchorView() -> getAnchorView
    426:426:android.graphics.drawable.Drawable getBackground() -> getBackground
    480:480:int getHorizontalOffset() -> getHorizontalOffset
    949:949:android.widget.ListView getListView() -> getListView
    1448:1460:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    898:901:java.lang.Object getSelectedItem() -> getSelectedItem
    924:927:long getSelectedItemId() -> getSelectedItemId
    911:914:int getSelectedItemPosition() -> getSelectedItemPosition
    937:940:android.view.View getSelectedView() -> getSelectedView
    496:499:int getVerticalOffset() -> getVerticalOffset
    548:548:int getWidth() -> getWidth
    871:871:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    348:348:boolean isModal() -> isModal
    863:863:boolean isShowing() -> isShowing
    792:799:void removePromptView() -> removePromptView
    290:303:void setAdapter(android.widget.ListAdapter) -> setAdapter
    473:474:void setAnchorView(android.view.View) -> setAnchorView
    444:445:void setAnimationStyle(int) -> setAnimationStyle
    435:436:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    568:575:void setContentWidth(int) -> setContentWidth
    541:542:void setDropDownGravity(int) -> setDropDownGravity
    520:521:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    489:490:void setHorizontalOffset(int) -> setHorizontalOffset
    814:815:void setInputMethodMode(int) -> setInputMethodMode
    338:340:void setModal(boolean) -> setModal
    788:789:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    622:623:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    633:634:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    1341:1343:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1434:1445:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    315:316:void setPromptPosition(int) -> setPromptPosition
    833:842:void setSelection(int) -> setSelection
    508:510:void setVerticalOffset(int) -> setVerticalOffset
    558:559:void setWidth(int) -> setWidth
    666:768:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1170:1170:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1174:1178:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1189:1189:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1194:1201:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1205:1205:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$Api24Impl -> androidx.appcompat.widget.ListPopupWindow$Api24Impl:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1491:1491:int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean) -> getMaxAvailableHeight
androidx.appcompat.widget.ListPopupWindow$Api29Impl -> androidx.appcompat.widget.ListPopupWindow$Api29Impl:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1473:1474:void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect) -> setEpicenterBounds
    1478:1479:void setIsClippedToScreen(android.widget.PopupWindow,boolean) -> setIsClippedToScreen
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1364:1365:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1369:1370:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1346:1347:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1351:1355:void onChanged() -> onChanged
    1359:1360:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1410:1411:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1417:1417:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1421:1426:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1389:1390:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1394:1405:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1374:1375:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1379:1385:void run() -> run
androidx.appcompat.widget.MenuItemHoverListener -> androidx.appcompat.widget.MenuItemHoverListener:
# {"id":"sourceFile","fileName":"MenuItemHoverListener.java"}
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    63:70:void <clinit>() -> <clinit>
    76:77:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    82:84:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    124:127:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    132:135:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    88:91:void setEnterTransition(java.lang.Object) -> setEnterTransition
    94:97:void setExitTransition(java.lang.Object) -> setExitTransition
    100:101:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    108:119:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$Api23Impl -> androidx.appcompat.widget.MenuPopupWindow$Api23Impl:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    269:270:void setEnterTransition(android.widget.PopupWindow,android.transition.Transition) -> setEnterTransition
    274:275:void setExitTransition(android.widget.PopupWindow,android.transition.Transition) -> setExitTransition
androidx.appcompat.widget.MenuPopupWindow$Api29Impl -> androidx.appcompat.widget.MenuPopupWindow$Api29Impl:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    286:287:void setTouchModal(android.widget.PopupWindow,boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    149:161:void <init>(android.content.Context,boolean) -> <init>
    140:140:boolean hasFocus() -> hasFocus
    140:140:boolean hasWindowFocus() -> hasWindowFocus
    140:140:boolean isFocused() -> isFocused
    140:140:boolean isInTouchMode() -> isInTouchMode
    140:140:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    140:140:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    203:244:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    173:197:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    140:140:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    164:165:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    140:140:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    255:255:int getLayoutDirection(android.content.res.Configuration) -> getLayoutDirection
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    87:117:void <clinit>() -> <clinit>
    63:123:void <init>() -> <init>
    340:351:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    407:416:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    499:512:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    172:172:long createCacheKey(android.util.TypedValue) -> createCacheKey
    177:200:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    477:481:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    97:102:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    319:336:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    141:160:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    486:495:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    383:394:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    398:402:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    379:379:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    109:115:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    515:516:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    234:315:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    163:169:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    355:363:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    132:134:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    205:230:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    441:473:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    368:368:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    421:422:void <init>(int) -> <init>
    433:436:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    425:425:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    429:429:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
# {"id":"sourceFile","fileName":"ResourcesWrapper.java"}
    50:52:void <init>(android.content.res.Resources) -> <init>
    209:209:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    194:194:boolean getBoolean(int) -> getBoolean
    183:183:int getColor(int) -> getColor
    189:189:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    272:272:android.content.res.Configuration getConfiguration() -> getConfiguration
    112:112:float getDimension(int) -> getDimension
    117:117:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    122:122:int getDimensionPixelSize(int) -> getDimensionPixelSize
    267:267:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    155:155:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    149:149:android.graphics.drawable.Drawable getDrawableCanonical(int) -> getDrawableCanonical
    165:165:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    171:171:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    127:127:float getFraction(int,int,int) -> getFraction
    277:277:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    102:102:int[] getIntArray(int) -> getIntArray
    199:199:int getInteger(int) -> getInteger
    204:204:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    177:177:android.graphics.Movie getMovie(int) -> getMovie
    77:77:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    82:82:java.lang.String getQuantityString(int,int) -> getQuantityString
    61:61:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    297:297:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    282:282:java.lang.String getResourceName(int) -> getResourceName
    287:287:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    292:292:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    66:66:java.lang.String getString(int) -> getString
    71:71:java.lang.String getString(int,java.lang.Object[]) -> getString
    97:97:java.lang.String[] getStringArray(int) -> getStringArray
    56:56:java.lang.CharSequence getText(int) -> getText
    87:87:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    92:92:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    235:236:void getValue(int,android.util.TypedValue,boolean) -> getValue
    248:249:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    242:243:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    214:214:android.content.res.XmlResourceParser getXml(int) -> getXml
    253:253:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    107:107:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    219:219:java.io.InputStream openRawResource(int) -> openRawResource
    224:224:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    229:229:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    309:310:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    303:304:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    259:263:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
# {"id":"sourceFile","fileName":"RtlSpacingHelper.java"}
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
# {"id":"sourceFile","fileName":"SearchView.java"}
    180:181:void <clinit>() -> <clinit>
    272:273:void <init>(android.content.Context) -> <init>
    276:277:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:1730:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1381:1388:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    1388:1402:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    505:510:void clearFocus() -> clearFocus
    1554:1577:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1673:1709:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1599:1654:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1584:1588:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1219:1220:void dismissSuggestions() -> dismissSuggestions
    1714:1720:void forceSuggestionQuery() -> forceSuggestionQuery
    862:867:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1105:1115:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    460:460:int getImeOptions() -> getImeOptions
    482:482:int getInputType() -> getInputType
    788:788:int getMaxWidth() -> getMaxWidth
    875:876:int getPreferredHeight() -> getPreferredHeight
    870:871:int getPreferredWidth() -> getPreferredWidth
    567:567:java.lang.CharSequence getQuery() -> getQuery
    628:635:java.lang.CharSequence getQueryHint() -> getQueryHint
    401:401:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    397:397:int getSuggestionRowLayout() -> getSuggestionRowLayout
    765:765:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    905:918:boolean hasVoiceSearch() -> hasVoiceSearch
    693:693:boolean isIconified() -> isIconified
    1723:1723:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    922:922:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1511:1521:void launchIntent(android.content.Intent) -> launchIntent
    1533:1536:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1494:1504:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1296:1301:void onActionViewCollapsed() -> onActionViewCollapsed
    1308:1315:void onActionViewExpanded() -> onActionViewExpanded
    1223:1240:void onCloseClicked() -> onCloseClicked
    976:979:void onDetachedFromWindow() -> onDetachedFromWindow
    1405:1410:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1416:1419:boolean onItemSelected(int) -> onItemSelected
    843:859:void onLayout(boolean,int,int,int,int) -> onLayout
    794:839:void onMeasure(int,int) -> onMeasure
    990:991:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1370:1378:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1362:1365:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1243:1249:void onSearchClicked() -> onSearchClicked
    1205:1216:void onSubmitQuery() -> onSubmitQuery
    1060:1099:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1191:1202:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1275:1282:void onTextFocusChanged() -> onTextFocusChanged
    1253:1272:void onVoiceClicked() -> onVoiceClicked
    1286:1289:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    957:958:void postUpdateFocusedState() -> postUpdateFocusedState
    488:499:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1461:1481:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    436:437:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    679:684:void setIconified(boolean) -> setIconified
    651:655:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    448:449:void setImeOptions(int) -> setImeOptions
    472:473:void setInputType(int) -> setInputType
    774:777:void setMaxWidth(int) -> setMaxWidth
    528:529:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    537:538:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    519:520:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    558:559:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    546:547:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    579:589:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1527:1530:void setQuery(java.lang.CharSequence) -> setQuery
    602:604:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    733:738:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    413:427:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    705:707:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    755:758:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    945:954:void updateCloseButton() -> updateCloseButton
    961:972:void updateFocusedState() -> updateFocusedState
    1119:1121:void updateQueryHint() -> updateQueryHint
    1127:1161:void updateSearchAutoComplete() -> updateSearchAutoComplete
    935:942:void updateSubmitArea() -> updateSubmitArea
    926:932:void updateSubmitButton(boolean) -> updateSubmitButton
    880:901:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1170:1176:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    183:183:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    186:187:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1730:1730:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1742:1742:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1732:1732:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1737:1738:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
# {"id":"sourceFile","fileName":"SearchView.java"}
    190:190:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    193:196:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
# {"id":"sourceFile","fileName":"SearchView.java"}
    338:338:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    341:344:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
# {"id":"sourceFile","fileName":"SearchView.java"}
    383:383:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    387:388:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
# {"id":"sourceFile","fileName":"SearchView.java"}
    993:993:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    996:1007:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1015:1015:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1019:1049:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1178:1178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1185:1186:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1424:1424:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1432:1433:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1436:1436:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1444:1445:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1454:1454:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$Api29Impl -> androidx.appcompat.widget.SearchView$Api29Impl:
# {"id":"sourceFile","fileName":"SearchView.java"}
    2137:2138:void refreshAutoCompleteResults(android.widget.AutoCompleteTextView) -> refreshAutoCompleteResults
    2132:2133:void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int) -> setInputMethodMode
androidx.appcompat.widget.SearchView$OnCloseListener -> androidx.appcompat.widget.SearchView$OnCloseListener:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnQueryTextListener -> androidx.appcompat.widget.SearchView$OnQueryTextListener:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnSuggestionListener -> androidx.appcompat.widget.SearchView$OnSuggestionListener:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
# {"id":"sourceFile","fileName":"SearchView.java"}
    2054:2084:void <init>() -> <init>
    2097:2104:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2087:2094:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2107:2114:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2117:2121:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1342:1342:void <clinit>() -> <clinit>
    1321:1322:void <init>(android.os.Parcelable) -> <init>
    1325:1327:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1337:1338:java.lang.String toString() -> toString
    1331:1333:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1342:1342:void <init>() -> <init>
    1342:1342:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1342:1342:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1345:1345:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1350:1350:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1342:1342:java.lang.Object[] newArray(int) -> newArray
    1355:1355:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1863:1864:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1851:1869:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1948:1948:boolean enoughToFilter() -> enoughToFilter
    2042:2050:void ensureImeVisible() -> ensureImeVisible
    1981:1991:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1893:1893:boolean isEmpty() -> isEmpty
    2000:2005:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1873:1877:void onFinishInflate() -> onFinishInflate
    1938:1940:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1953:1974:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1920:1934:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1912:1912:void performCompletion() -> performCompletion
    1902:1902:void replaceText(java.lang.CharSequence) -> replaceText
    2018:2039:void setImeVisibility(boolean) -> setImeVisibility
    1880:1881:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1885:1887:void setThreshold(int) -> setThreshold
    2009:2015:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1851:1851:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1854:1855:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1777:1784:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1795:1836:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1787:1791:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    73:104:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    273:323:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    215:235:void changeCursor(android.database.Cursor) -> changeCursor
    582:587:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    414:437:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    334:346:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    645:662:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    623:634:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    674:675:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    604:610:android.graphics.drawable.Drawable getDefaultIcon1() -> getDefaultIcon1
    549:570:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    561:575:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    697:728:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    506:538:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    472:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    361:369:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    373:377:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    735:776:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    679:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    449:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    133:133:boolean hasStableIds() -> hasStableIds
    242:248:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    179:182:void notifyDataSetChanged() -> notifyDataSetChanged
    187:190:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    327:331:void onClick(android.view.View) -> onClick
    144:167:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    116:117:void setQueryRefinement(int) -> setQueryRefinement
    387:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    351:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    591:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    193:206:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    262:268:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
# {"id":"sourceFile","fileName":"ThemeUtils.java"}
    41:53:void <clinit>() -> <clinit>
    162:176:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:96:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    96:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:114:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    114:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:148:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
# {"id":"sourceFile","fileName":"TintContextWrapper.java"}
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
# {"id":"sourceFile","fileName":"TintInfo.java"}
    28:28:void <init>() -> <init>
    35:39:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
# {"id":"sourceFile","fileName":"TintResources.java"}
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
# {"id":"sourceFile","fileName":"TintTypedArray.java"}
    68:71:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    159:159:boolean getBoolean(int,boolean) -> getBoolean
    171:171:int getColor(int,int) -> getColor
    175:185:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    193:193:float getDimension(int,float) -> getDimension
    197:197:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    201:201:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    81:87:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    91:97:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    167:167:float getFloat(int,float) -> getFloat
    120:127:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    163:163:int getInt(int,int) -> getInt
    189:189:int getInteger(int,int) -> getInteger
    209:209:int getLayoutDimension(int,int) -> getLayoutDimension
    217:217:int getResourceId(int,int) -> getResourceId
    151:151:java.lang.String getString(int) -> getString
    147:147:java.lang.CharSequence getText(int) -> getText
    221:221:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    77:77:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    241:241:boolean hasValue(int) -> hasValue
    55:55:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    60:61:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    65:65:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    253:254:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    262:263:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    194:383:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2385:2391:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2277:2303:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1641:1658:void addSystemView(android.view.View,boolean) -> addSystemView
    586:586:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2359:2359:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    799:804:void collapseActionView() -> collapseActionView
    667:670:void dismissPopupMenus() -> dismissPopupMenus
    1622:1638:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2422:2425:void ensureContentInsets() -> ensureContentInsets
    769:772:void ensureLogoView() -> ensureLogoView
    1236:1249:void ensureMenu() -> ensureMenu
    1252:1289:void ensureMenuView() -> ensureMenuView
    1601:1608:void ensureNavButtonView() -> ensureNavButtonView
    158:158:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2354:2354:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    158:158:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    158:158:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2336:2336:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2341:2348:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2306:2315:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2315:2315:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2226:2253:int getChildTop(android.view.View,int) -> getChildTop
    2258:2265:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1117:1117:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1163:1163:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1382:1382:int getContentInsetEnd() -> getContentInsetEnd
    1508:1510:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1426:1426:int getContentInsetLeft() -> getContentInsetLeft
    1447:1447:int getContentInsetRight() -> getContentInsetRight
    1361:1361:int getContentInsetStart() -> getContentInsetStart
    1464:1466:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1560:1567:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1580:1582:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1595:1597:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1546:1548:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2457:2464:java.util.ArrayList getCurrentMenuItems() -> getCurrentMenuItems
    2324:2326:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    726:726:android.graphics.drawable.Drawable getLogo() -> getLogo
    765:765:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1210:1211:android.view.Menu getMenu() -> getMenu
    1292:1292:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1618:1618:android.view.View getNavButtonView() -> getNavButtonView
    994:994:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1088:1088:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2449:2449:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1231:1232:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2453:2453:android.content.Context getPopupContext() -> getPopupContext
    444:444:int getPopupTheme() -> getPopupTheme
    870:870:java.lang.CharSequence getSubtitle() -> getSubtitle
    2442:2442:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    813:813:java.lang.CharSequence getTitle() -> getTitle
    545:545:int getTitleMarginBottom() -> getTitleMarginBottom
    522:522:int getTitleMarginEnd() -> getTitleMarginEnd
    476:476:int getTitleMarginStart() -> getTitleMarginStart
    499:499:int getTitleMarginTop() -> getTitleMarginTop
    2433:2433:android.widget.TextView getTitleTextView() -> getTitleTextView
    2330:2331:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2181:2196:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2365:2368:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    785:785:boolean hasExpandedActionView() -> hasExpandedActionView
    620:620:boolean hideOverflowMenu() -> hideOverflowMenu
    1305:1306:void inflateMenu(int) -> inflateMenu
    2513:2517:void invalidateMenu() -> invalidateMenu
    2394:2394:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    602:602:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    596:596:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2201:2209:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2214:2222:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1790:1807:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1765:1782:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1709:1711:void onAttachedToWindow() -> onAttachedToWindow
    2468:2475:void onCreateMenu() -> onCreateMenu
    1702:1705:void onDetachedFromWindow() -> onDetachedFromWindow
    1744:1760:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1963:2178:void onLayout(boolean,int,int,int,int) -> onLayout
    1829:1959:void onMeasure(int,int) -> onMeasure
    1674:1693:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    562:568:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1662:1669:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1720:1736:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1696:1698:void postShowOverflowMenu() -> postShowOverflowMenu
    2372:2382:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    399:405:void setBackInvokedCallbackEnabled(boolean) -> setBackInvokedCallbackEnabled
    1131:1132:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1145:1151:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1177:1178:void setCollapseIcon(int) -> setCollapseIcon
    1191:1197:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2404:2406:void setCollapsible(boolean) -> setCollapsible
    1526:1535:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1483:1492:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1339:1341:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    580:581:void setLogo(int) -> setLogo
    703:715:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    738:739:void setLogoDescription(int) -> setLogoDescription
    750:756:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    626:661:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    1008:1009:void setNavigationContentDescription(int) -> setNavigationContentDescription
    1022:1029:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    1046:1047:void setNavigationIcon(int) -> setNavigationIcon
    1064:1076:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1101:1103:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1317:1318:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1220:1222:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    426:434:void setPopupTheme(int) -> setPopupTheme
    881:882:void setSubtitle(int) -> setSubtitle
    892:916:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    934:938:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    967:968:void setSubtitleTextColor(int) -> setSubtitleTextColor
    976:980:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    825:826:void setTitle(int) -> setTitle
    837:861:void setTitle(java.lang.CharSequence) -> setTitle
    556:558:void setTitleMarginBottom(int) -> setTitleMarginBottom
    533:536:void setTitleMarginEnd(int) -> setTitleMarginEnd
    487:490:void setTitleMarginStart(int) -> setTitleMarginStart
    510:513:void setTitleMarginTop(int) -> setTitleMarginTop
    923:927:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    946:947:void setTitleTextColor(int) -> setTitleTextColor
    955:959:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1814:1824:boolean shouldCollapse() -> shouldCollapse
    2320:2320:boolean shouldLayout(android.view.View) -> shouldLayout
    611:611:boolean showOverflowMenu() -> showOverflowMenu
    2525:2547:void updateBackInvokedCallbackState() -> updateBackInvokedCallbackState
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.f$0 -> f$0
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.<init>(androidx.appcompat.widget.Toolbar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda1 -> androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9e812044a733917b2e0b0a51a5df731d94624bba79586e07f17ef43c5588bf30$0.f$0 -> f$0
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9e812044a733917b2e0b0a51a5df731d94624bba79586e07f17ef43c5588bf30$0.<init>(androidx.appcompat.widget.Toolbar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9e812044a733917b2e0b0a51a5df731d94624bba79586e07f17ef43c5588bf30$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    218:218:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    221:227:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    251:251:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    253:254:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    1258:1258:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1266:1267:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1274:1281:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.Toolbar$4 -> androidx.appcompat.widget.Toolbar$4:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    1631:1631:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1634:1635:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$Api33Impl -> androidx.appcompat.widget.Toolbar$Api33Impl:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2833:2833:android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View) -> findOnBackInvokedDispatcher
    2839:2839:android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable) -> newOnBackInvokedCallback
    2818:2821:void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> tryRegisterOnBackInvokedCallback
    2826:2828:void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> tryUnregisterOnBackInvokedCallback
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2674:2675:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2775:2791:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2735:2768:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2730:2730:boolean flagActionItems() -> flagActionItems
    2680:2684:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2726:2726:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2721:2721:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2694:2713:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2578:2582:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2578:2587:void <init>(int,int) -> <init>
    2578:2602:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2578:2606:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2578:2613:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2578:2617:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2620:2624:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> androidx.appcompat.widget.Toolbar$OnMenuItemClickListener:
# {"id":"sourceFile","fileName":"Toolbar.java"}
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2652:2652:void <clinit>() -> <clinit>
    2636:2639:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2642:2643:void <init>(android.os.Parcelable) -> <init>
    2647:2650:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2652:2652:void <init>() -> <init>
    2652:2652:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2652:2652:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2655:2655:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2660:2660:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2652:2652:java.lang.Object[] newArray(int) -> newArray
    2665:2665:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    338:338:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    378:379:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    383:383:int getDisplayOptions() -> getDisplayOptions
    461:461:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    358:358:boolean hideOverflowMenu() -> hideOverflowMenu
    289:290:void initIndeterminateProgress() -> initIndeterminateProgress
    284:285:void initProgress() -> initProgress
    348:348:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    343:343:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    451:452:void setCollapsible(boolean) -> setCollapsible
    543:550:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    388:421:void setDisplayOptions(int) -> setDisplayOptions
    425:437:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    457:457:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    304:305:void setIcon(int) -> setIcon
    309:311:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    315:316:void setLogo(int) -> setLogo
    320:322:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    368:374:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    363:364:void setMenuPrepared() -> setMenuPrepared
    623:625:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    629:630:void setNavigationContentDescription(int) -> setNavigationContentDescription
    596:598:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    276:280:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:267:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    664:665:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    569:572:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    353:353:boolean showOverflowMenu() -> showOverflowMenu
    633:640:void updateHomeAccessibility() -> updateHomeAccessibility
    614:619:void updateNavigationIcon() -> updateNavigationIcon
    325:334:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    572:573:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    589:590:void onAnimationCancel(android.view.View) -> onAnimationCancel
    582:585:void onAnimationEnd(android.view.View) -> onAnimationEnd
    577:578:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
# {"id":"sourceFile","fileName":"TooltipCompat.java"}
    46:51:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompat$Api26Impl -> androidx.appcompat.widget.TooltipCompat$Api26Impl:
# {"id":"sourceFile","fileName":"TooltipCompat.java"}
    64:65:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
# {"id":"sourceFile","fileName":"VectorEnabledTintResources.java"}
    39:39:void <clinit>() -> <clinit>
    56:58:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    37:37:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    37:37:boolean getBoolean(int) -> getBoolean
    37:37:int getColor(int) -> getColor
    37:37:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    37:37:android.content.res.Configuration getConfiguration() -> getConfiguration
    37:37:float getDimension(int) -> getDimension
    37:37:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    37:37:int getDimensionPixelSize(int) -> getDimensionPixelSize
    37:37:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    37:37:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    67:74:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    37:37:float getFraction(int,int,int) -> getFraction
    37:37:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    37:37:int[] getIntArray(int) -> getIntArray
    37:37:int getInteger(int) -> getInteger
    37:37:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    37:37:android.graphics.Movie getMovie(int) -> getMovie
    37:37:java.lang.String getQuantityString(int,int) -> getQuantityString
    37:37:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    37:37:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    37:37:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    37:37:java.lang.String getResourceName(int) -> getResourceName
    37:37:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    37:37:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    37:37:java.lang.String getString(int) -> getString
    37:37:java.lang.String getString(int,java.lang.Object[]) -> getString
    37:37:java.lang.String[] getStringArray(int) -> getStringArray
    37:37:java.lang.CharSequence getText(int) -> getText
    37:37:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    37:37:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    37:37:void getValue(int,android.util.TypedValue,boolean) -> getValue
    37:37:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    37:37:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    37:37:android.content.res.XmlResourceParser getXml(int) -> getXml
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    37:37:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    37:37:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    37:37:java.io.InputStream openRawResource(int) -> openRawResource
    37:37:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    37:37:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    37:37:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    37:37:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    37:37:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:161:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    157:157:void draw(android.graphics.Canvas) -> draw
    85:85:int getInflatedId() -> getInflatedId
    146:146:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    115:115:int getLayoutResource() -> getLayoutResource
    198:237:android.view.View inflate() -> inflate
    151:152:void onMeasure(int,int) -> onMeasure
    99:100:void setInflatedId(int) -> setInflatedId
    139:140:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    131:132:void setLayoutResource(int) -> setLayoutResource
    250:251:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    175:188:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> androidx.appcompat.widget.ViewStubCompat$OnInflateListener:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    48:62:void <clinit>() -> <clinit>
    75:82:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    67:67:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    89:104:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
    104:106:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    0:0:void $r8$lambda$660dvPX9TmFUAes_5pIFbpOEa8M(java.lang.Runnable) -> $r8$lambda$660dvPX9TmFUAes_5pIFbpOEa8M
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$B-NyukiANkmKkd3XkhAfbEit2Bs(java.lang.Runnable) -> $r8$lambda$B-NyukiANkmKkd3XkhAfbEit2Bs
      # {"id":"com.android.tools.r8.synthesized"}
    42:46:void <clinit>() -> <clinit>
    49:52:void <init>() -> <init>
    88:89:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    103:103:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    61:69:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    108:108:boolean isMainThread() -> isMainThread
    43:43:void lambda$static$0(java.lang.Runnable) -> lambda$static$0
    47:47:void lambda$static$1(java.lang.Runnable) -> lambda$static$1
    93:94:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1 -> androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    38:42:void <init>() -> <init>
    84:100:android.os.Handler createAsync(android.os.Looper) -> createAsync
    60:61:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    78:78:boolean isMainThread() -> isMainThread
    65:74:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    42:45:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    49:51:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl -> androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    111:111:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
# {"id":"sourceFile","fileName":"TaskExecutor.java"}
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
# {"id":"sourceFile","fileName":"FastSafeIterableMap.java"}
    36:38:void <init>() -> <init>
    79:82:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    69:69:boolean contains(java.lang.Object) -> contains
    44:44:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    49:54:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    59:61:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    36:44:void <init>() -> <init>
    154:156:java.util.Iterator descendingIterator() -> descendingIterator
    174:174:java.util.Map$Entry eldest() -> eldest
    188:208:boolean equals(java.lang.Object) -> equals
    49:56:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    213:217:int hashCode() -> hashCode
    143:145:java.util.Iterator iterator() -> iterator
    164:166:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    182:182:java.util.Map$Entry newest() -> newest
    78:89:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    69:74:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    101:126:java.lang.Object remove(java.lang.Object) -> remove
    133:133:int size() -> size
    222:232:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    289:290:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    299:299:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    294:294:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    306:307:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    316:316:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    311:311:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    380:383:void <init>(java.lang.Object,java.lang.Object) -> <init>
    410:417:boolean equals(java.lang.Object) -> equals
    388:388:java.lang.Object getKey() -> getKey
    394:394:java.lang.Object getValue() -> getValue
    422:422:int hashCode() -> hashCode
    399:399:java.lang.Object setValue(java.lang.Object) -> setValue
    404:404:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    327:330:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    343:346:boolean hasNext() -> hasNext
    323:323:java.lang.Object next() -> next
    351:357:java.util.Map$Entry next() -> next
    335:339:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    240:243:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    247:247:boolean hasNext() -> hasNext
    235:235:java.lang.Object next() -> next
    277:279:java.util.Map$Entry next() -> next
    269:272:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    253:265:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> androidx.arch.core.internal.SafeIterableMap$SupportRemove:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    368:368:void <init>() -> <init>
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
# {"id":"sourceFile","fileName":"CardView.java"}
    81:93:void <clinit>() -> <clinit>
    117:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:447:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
# {"id":"sourceFile","fileName":"CardView.java"}
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:454:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    468:471:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
# {"id":"sourceFile","fileName":"CardViewApi21Impl.java"}
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    47:47:void initStatic() -> initStatic
    31:38:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:104:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:109:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:114:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:79:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:54:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:43:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:99:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewDelegate -> androidx.cardview.widget.CardViewDelegate:
# {"id":"sourceFile","fileName":"CardViewDelegate.java"}
androidx.cardview.widget.CardViewImpl -> androidx.cardview.widget.CardViewImpl:
# {"id":"sourceFile","fileName":"CardViewImpl.java"}
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
# {"id":"sourceFile","fileName":"RoundRectDrawable.java"}
    47:62:void <init>(android.content.res.ColorStateList,float) -> <init>
    206:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:102:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    65:67:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:161:void setColor(android.content.res.ColorStateList) -> setColor
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:79:void setPadding(float,boolean,boolean) -> setPadding
    131:137:void setRadius(float) -> setRadius
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    105:117:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
# {"id":"sourceFile","fileName":"RoundRectDrawableWithShadow.java"}
    41:41:void <clinit>() -> <clinit>
    189:192:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    180:183:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
# {"id":"sourceFile","fileName":"ArraySet.java"}
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    359:402:boolean add(java.lang.Object) -> add
    719:724:boolean addAll(java.util.Collection) -> addAll
    160:196:void allocArrays(int) -> allocArrays
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    295:305:void ensureCapacity(int) -> ensureCapacity
    559:582:boolean equals(java.lang.Object) -> equals
    200:233:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:595:int hashCode() -> hashCode
    83:117:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:155:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    447:494:java.lang.Object removeAt(int) -> removeAt
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
# {"id":"sourceFile","fileName":"ArraySet.java"}
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:679:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:664:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:674:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
# {"id":"sourceFile","fileName":"ContainerHelpers.java"}
    20:22:void <clinit>() -> <clinit>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
# {"id":"sourceFile","fileName":"LongSparseArray.java"}
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    440:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.LongSparseArray clone() -> clone
    217:240:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    353:357:long keyAt(int) -> keyAt
    248:292:void put(long,java.lang.Object) -> put
    139:147:void remove(long) -> remove
    171:175:void removeAt(int) -> removeAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
# {"id":"sourceFile","fileName":"LruCache.java"}
    51:57:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    83:126:java.lang.Object get(java.lang.Object) -> get
    138:157:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    347:351:java.lang.String toString() -> toString
    171:191:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    32:32:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    41:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:59:java.lang.Object next() -> next
    64:71:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    77:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:94:java.util.Map$Entry next() -> next
    99:106:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
# {"id":"sourceFile","fileName":"SimpleArrayMap.java"}
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:282:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:303:void ensureCapacity(int) -> ensureCapacity
    681:735:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:490:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:626:java.lang.Object removeAt(int) -> removeAt
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
# {"id":"sourceFile","fileName":"SparseArrayCompat.java"}
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    460:487:void append(int,java.lang.Object) -> append
    444:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.SparseArrayCompat clone() -> clone
    230:253:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    419:427:int indexOfValue(java.lang.Object) -> indexOfValue
    361:365:int keyAt(int) -> keyAt
    261:305:void put(int,java.lang.Object) -> put
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.AbstractResolvableFuture:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    64:217:void <clinit>() -> <clinit>
    317:318:void <init>() -> <init>
    1026:1034:void addDoneString(java.lang.StringBuilder) -> addDoneString
    1034:1035:void addDoneString(java.lang.StringBuilder) -> addDoneString
    925:925:void afterDone() -> afterDone
    555:617:boolean cancel(boolean) -> cancel
    1195:1197:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    963:972:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> clearListeners
    871:910:void complete(androidx.concurrent.futures.AbstractResolvableFuture) -> complete
    1056:1067:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    359:456:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    470:506:java.lang.Object get() -> get
    513:524:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    852:863:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    857:865:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    633:633:void interruptTask() -> interruptTask
    536:537:boolean isCancelled() -> isCancelled
    530:531:boolean isDone() -> isDone
    1013:1021:java.lang.String pendingToString() -> pendingToString
    942:948:void releaseWaiters() -> releaseWaiters
    171:198:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> removeWaiter
    685:690:boolean set(java.lang.Object) -> set
    978:1002:java.lang.String toString() -> toString
    1044:1047:java.lang.String userObjectToString(java.lang.Object) -> userObjectToString
androidx.concurrent.futures.AbstractResolvableFuture$1 -> androidx.concurrent.futures.AbstractResolvableFuture$1:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    1069:1069:void <init>() -> <init>
    1069:1069:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.AbstractResolvableFuture$Cancellation:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    243:250:void <clinit>() -> <clinit>
    256:259:void <init>(boolean,java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.AbstractResolvableFuture$Failure:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.AbstractResolvableFuture$Listener:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    202:202:void <clinit>() -> <clinit>
    210:213:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    1105:1111:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1130:1130:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1135:1135:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1125:1125:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1120:1121:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1115:1116:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0 -> androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$InternalSyntheticBackportWithForwarding$2$58dd097c22a157c6fc915c3ca83711e3efdab037cd14fe4274f47b3cf6d48957$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    1146:1147:void <init>() -> <init>
    1172:1178:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1183:1189:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1161:1167:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1156:1157:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1151:1152:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.AbstractResolvableFuture$Waiter:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    121:121:void <clinit>() -> <clinit>
    132:133:void <init>(boolean) -> <init>
    135:138:void <init>() -> <init>
    143:144:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> setNext
    151:156:void unpark() -> unpark
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.ResolvableFuture:
# {"id":"sourceFile","fileName":"ResolvableFuture.java"}
    63:64:void <init>() -> <init>
    45:45:androidx.concurrent.futures.ResolvableFuture create() -> create
    50:50:boolean set(java.lang.Object) -> set
androidx.constraintlayout.helper.widget.Flow -> androidx.constraintlayout.helper.widget.Flow:
# {"id":"sourceFile","fileName":"Flow.java"}
    128:129:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    199:264:void init(android.util.AttributeSet) -> init
    149:150:void onMeasure(int,int) -> onMeasure
    161:171:void onMeasure(androidx.constraintlayout.solver.widgets.VirtualLayout,int,int) -> onMeasure
    143:144:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    414:416:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    394:396:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    424:426:void setFirstVerticalBias(float) -> setFirstVerticalBias
    404:406:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    439:441:void setHorizontalAlign(int) -> setHorizontalAlign
    374:376:void setHorizontalBias(float) -> setHorizontalBias
    465:467:void setHorizontalGap(int) -> setHorizontalGap
    350:352:void setHorizontalStyle(int) -> setHorizontalStyle
    485:487:void setMaxElementsWrap(int) -> setMaxElementsWrap
    272:274:void setOrientation(int) -> setOrientation
    282:284:void setPadding(int) -> setPadding
    322:324:void setPaddingBottom(int) -> setPaddingBottom
    292:294:void setPaddingLeft(int) -> setPaddingLeft
    312:314:void setPaddingRight(int) -> setPaddingRight
    302:304:void setPaddingTop(int) -> setPaddingTop
    455:457:void setVerticalAlign(int) -> setVerticalAlign
    384:386:void setVerticalBias(float) -> setVerticalBias
    475:477:void setVerticalGap(int) -> setVerticalGap
    364:366:void setVerticalStyle(int) -> setVerticalStyle
    336:338:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.motion.utils.Easing -> androidx.constraintlayout.motion.utils.Easing:
# {"id":"sourceFile","fileName":"Easing.java"}
    29:40:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    73:73:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
# {"id":"sourceFile","fileName":"Debug.java"}
    85:88:java.lang.String getName(android.view.View) -> getName
androidx.constraintlayout.solver.ArrayLinkedVariables -> androidx.constraintlayout.solver.ArrayLinkedVariables:
# {"id":"sourceFile","fileName":"ArrayLinkedVariables.java"}
    82:82:void <clinit>() -> <clinit>
    43:109:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    226:340:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    409:423:void clear() -> clear
    432:443:boolean contains(androidx.constraintlayout.solver.SolverVariable) -> contains
    500:506:void divideByAmount(float) -> divideByAmount
    593:602:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    509:509:int getCurrentSize() -> getCurrentSize
    558:566:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    576:584:float getVariableValue(int) -> getVariableValue
    485:491:void invert() -> invert
    118:214:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    369:402:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    633:642:java.lang.String toString() -> toString
    349:358:float use(androidx.constraintlayout.solver.ArrayRow,boolean) -> use
androidx.constraintlayout.solver.ArrayRow -> androidx.constraintlayout.solver.ArrayRow:
# {"id":"sourceFile","fileName":"ArrayRow.java"}
    26:55:void <init>() -> <init>
    55:55:void <init>() -> <init>
    26:60:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    349:351:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> addError
    670:683:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    178:179:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> addSingleError
    431:442:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> chooseSubject
    457:504:androidx.constraintlayout.solver.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.solver.LinearSystem) -> chooseSubjectInVariables
    645:648:void clear() -> clear
    303:345:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowCentering
    139:143:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> createRowDefinition
    356:358:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    375:379:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionRatio
    240:268:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> createRowEqualMatchDimensions
    147:154:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    158:174:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    185:203:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowGreaterThan
    214:232:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowLowerThan
    393:398:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowWithAngle
    415:420:void ensurePositiveConstant() -> ensurePositiveConstant
    687:687:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    640:640:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    63:63:boolean hasKeyVariable() -> hasKeyVariable
    135:135:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> hasVariable
    656:666:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> initFromRow
    559:559:boolean isEmpty() -> isEmpty
    532:532:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> isNew
    635:635:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> pickPivot
    590:629:androidx.constraintlayout.solver.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.solver.SolverVariable) -> pickPivotInVariables
    536:553:void pivot(androidx.constraintlayout.solver.SolverVariable) -> pivot
    128:132:void reset() -> reset
    75:124:java.lang.String toReadableString() -> toReadableString
    71:71:java.lang.String toString() -> toString
    573:587:void updateFromFinalVariable(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,boolean) -> updateFromFinalVariable
    564:570:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
    692:723:void updateFromSystem(androidx.constraintlayout.solver.LinearSystem) -> updateFromSystem
androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables -> androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables:
# {"id":"sourceFile","fileName":"ArrayRow.java"}
androidx.constraintlayout.solver.Cache -> androidx.constraintlayout.solver.Cache:
# {"id":"sourceFile","fileName":"Cache.java"}
    21:25:void <init>() -> <init>
androidx.constraintlayout.solver.LinearSystem -> androidx.constraintlayout.solver.LinearSystem:
# {"id":"sourceFile","fileName":"LinearSystem.java"}
    41:232:void <clinit>() -> <clinit>
    46:98:void <init>() -> <init>
    352:365:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1292:1310:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1178:1184:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addCentering
    517:591:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> addConstraint
    1205:1221:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addEquality
    1230:1260:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> addEquality
    1119:1124:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addGreaterBarrier
    1104:1113:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addGreaterThan
    1152:1157:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addLowerBarrier
    1137:1146:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addLowerThan
    1190:1196:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> addRatio
    594:616:void addRow(androidx.constraintlayout.solver.ArrayRow) -> addRow
    296:307:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> addSingleError
    934:938:void computeValues() -> computeValues
    330:343:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    273:284:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> createExtraVariable
    202:228:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    236:254:androidx.constraintlayout.solver.ArrayRow createRow() -> createRow
    1277:1278:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    258:269:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> createSlackVariable
    787:930:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> enforceBFS
    1061:1061:androidx.constraintlayout.solver.Cache getCache() -> getCache
    105:105:androidx.constraintlayout.solver.Metrics getMetrics() -> getMetrics
    391:395:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    129:140:void increaseTableSize() -> increaseTableSize
    424:456:void minimize() -> minimize
    463:489:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> minimizeGoal
    637:778:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> optimize
    146:163:void releaseRows() -> releaseRows
    169:195:void reset() -> reset
androidx.constraintlayout.solver.LinearSystem$Row -> androidx.constraintlayout.solver.LinearSystem$Row:
# {"id":"sourceFile","fileName":"LinearSystem.java"}
androidx.constraintlayout.solver.LinearSystem$ValuesRow -> androidx.constraintlayout.solver.LinearSystem$ValuesRow:
# {"id":"sourceFile","fileName":"LinearSystem.java"}
    83:85:void <init>(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.Cache) -> <init>
androidx.constraintlayout.solver.Metrics -> androidx.constraintlayout.solver.Metrics:
# {"id":"sourceFile","fileName":"Metrics.java"}
androidx.constraintlayout.solver.Pools$Pool -> androidx.constraintlayout.solver.Pools$Pool:
# {"id":"sourceFile","fileName":"Pools.java"}
androidx.constraintlayout.solver.Pools$SimplePool -> androidx.constraintlayout.solver.Pools$SimplePool:
# {"id":"sourceFile","fileName":"Pools.java"}
    96:101:void <init>(int) -> <init>
    106:113:java.lang.Object acquire() -> acquire
    123:128:boolean release(java.lang.Object) -> release
    133:148:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.solver.PriorityGoalRow -> androidx.constraintlayout.solver.PriorityGoalRow:
# {"id":"sourceFile","fileName":"PriorityGoalRow.java"}
    29:162:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    25:25:void access$000(androidx.constraintlayout.solver.PriorityGoalRow,androidx.constraintlayout.solver.SolverVariable) -> access$000
    191:195:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    198:222:void addToGoal(androidx.constraintlayout.solver.SolverVariable) -> addToGoal
    153:155:void clear() -> clear
    168:186:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    225:235:void removeGoal(androidx.constraintlayout.solver.SolverVariable) -> removeGoal
    260:267:java.lang.String toString() -> toString
    239:256:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.solver.PriorityGoalRow$1 -> androidx.constraintlayout.solver.PriorityGoalRow$1:
# {"id":"sourceFile","fileName":"PriorityGoalRow.java"}
    209:209:void <init>(androidx.constraintlayout.solver.PriorityGoalRow) -> <init>
    209:209:int compare(java.lang.Object,java.lang.Object) -> compare
    212:212:int compare(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> compare
androidx.constraintlayout.solver.PriorityGoalRow$GoalVariableAccessor -> androidx.constraintlayout.solver.PriorityGoalRow$GoalVariableAccessor:
# {"id":"sourceFile","fileName":"PriorityGoalRow.java"}
    39:41:void <init>(androidx.constraintlayout.solver.PriorityGoalRow,androidx.constraintlayout.solver.PriorityGoalRow) -> <init>
    48:77:boolean addToGoal(androidx.constraintlayout.solver.SolverVariable,float) -> addToGoal
    130:131:int compareTo(java.lang.Object) -> compareTo
    44:45:void init(androidx.constraintlayout.solver.SolverVariable) -> init
    91:100:boolean isNegative() -> isNegative
    104:116:boolean isSmallerThan(androidx.constraintlayout.solver.SolverVariable) -> isSmallerThan
    135:136:void reset() -> reset
    139:146:java.lang.String toString() -> toString
androidx.constraintlayout.solver.SolverVariable -> androidx.constraintlayout.solver.SolverVariable:
# {"id":"sourceFile","fileName":"SolverVariable.java"}
    44:48:void <clinit>() -> <clinit>
    53:169:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    175:186:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> addToRow
    96:97:void increaseErrorId() -> increaseErrorId
    192:203:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> removeFromRow
    231:250:void reset() -> reset
    221:228:void setFinalValue(androidx.constraintlayout.solver.LinearSystem,float) -> setFinalValue
    263:267:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> setType
    274:284:java.lang.String toString() -> toString
    212:218:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.solver.SolverVariable$Type -> androidx.constraintlayout.solver.SolverVariable$Type:
# {"id":"sourceFile","fileName":"SolverVariable.java"}
    72:92:void <clinit>() -> <clinit>
    72:72:void <init>(java.lang.String,int) -> <init>
    72:72:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    72:72:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.SolverVariableValues -> androidx.constraintlayout.solver.SolverVariableValues:
# {"id":"sourceFile","fileName":"SolverVariableValues.java"}
    28:28:void <clinit>() -> <clinit>
    29:50:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    410:423:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    216:236:void addToHashMap(androidx.constraintlayout.solver.SolverVariable,int) -> addToHashMap
    289:296:void addVariable(int,androidx.constraintlayout.solver.SolverVariable,float) -> addVariable
    180:196:void clear() -> clear
    94:94:boolean contains(androidx.constraintlayout.solver.SolverVariable) -> contains
    481:490:void divideByAmount(float) -> divideByAmount
    299:304:int findEmptySlot() -> findEmptySlot
    125:129:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    54:54:int getCurrentSize() -> getCurrentSize
    59:73:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    78:89:float getVariableValue(int) -> getVariableValue
    199:210:void increaseSize() -> increaseSize
    99:120:int indexOf(androidx.constraintlayout.solver.SolverVariable) -> indexOf
    308:327:void insertVariable(int,androidx.constraintlayout.solver.SolverVariable,float) -> insertVariable
    468:477:void invert() -> invert
    334:369:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    381:402:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    260:286:void removeFromHashMap(androidx.constraintlayout.solver.SolverVariable) -> removeFromHashMap
    148:172:java.lang.String toString() -> toString
    427:463:float use(androidx.constraintlayout.solver.ArrayRow,boolean) -> use
androidx.constraintlayout.solver.widgets.Barrier -> androidx.constraintlayout.solver.widgets.Barrier:
# {"id":"sourceFile","fileName":"Barrier.java"}
    29:39:void <init>() -> <init>
    104:188:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    43:43:boolean allowedInBarrier() -> allowedInBarrier
    54:54:boolean allowsGoneWidget() -> allowsGoneWidget
    46:46:int getBarrierType() -> getBarrierType
    195:195:int getMargin() -> getMargin
    80:88:void markWidgets() -> markWidgets
    52:52:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    49:50:void setBarrierType(int) -> setBarrierType
    191:192:void setMargin(int) -> setMargin
    67:76:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.Chain -> androidx.constraintlayout.solver.widgets.Chain:
# {"id":"sourceFile","fileName":"Chain.java"}
    46:66:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int) -> applyChainConstraints
    80:278:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
    278:345:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
    345:397:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
    397:447:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.solver.widgets.ChainHead -> androidx.constraintlayout.solver.widgets.ChainHead:
# {"id":"sourceFile","fileName":"ChainHead.java"}
    42:67:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    234:238:void define() -> define
    84:199:void defineChainProperties() -> defineChainProperties
    77:77:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> androidx.constraintlayout.solver.widgets.ConstraintAnchor:
# {"id":"sourceFile","fileName":"ConstraintAnchor.java"}
    34:101:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    178:196:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,boolean) -> connect
    207:207:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> connect
    137:144:int getMargin() -> getMargin
    450:470:androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite() -> getOpposite
    124:124:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> getOwner
    107:107:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> getSolverVariable
    151:151:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> getTarget
    130:130:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> getType
    43:52:boolean hasCenteredDependents() -> hasCenteredDependents
    215:215:boolean isConnected() -> isConnected
    224:263:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isValidConnection
    157:165:void reset() -> reset
    113:118:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> resetSolverVariable
    336:339:void setGoneMargin(int) -> setGoneMargin
    370:370:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$1:
# {"id":"sourceFile","fileName":"ConstraintAnchor.java"}
    235:235:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type:
# {"id":"sourceFile","fileName":"ConstraintAnchor.java"}
    58:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    58:58:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget -> androidx.constraintlayout.solver.widgets.ConstraintWidget:
# {"id":"sourceFile","fileName":"ConstraintWidget.java"}
    252:252:void <clinit>() -> <clinit>
    59:369:void <init>() -> <init>
    415:423:void addAnchors() -> addAnchors
    2253:2253:boolean addFirst() -> addFirst
    1986:2062:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    2062:2246:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    1423:1423:boolean allowedInBarrier() -> allowedInBarrier
    2349:2496:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    2477:2496:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    2496:2625:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    2496:2721:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    1454:1457:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> connect
    1484:1652:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int) -> connect
    496:499:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    592:599:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> createObjectVariables
    1749:1777:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    877:877:int getBaselineDistance() -> getBaselineDistance
    853:858:float getBiasPercent(int) -> getBiasPercent
    794:794:int getBottom() -> getBottom
    887:887:java.lang.Object getCompanionWidget() -> getCompanionWidget
    543:543:java.lang.String getDebugName() -> getDebugName
    1805:1810:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1124:1124:float getDimensionRatio() -> getDimensionRatio
    1133:1133:int getDimensionRatioSide() -> getDimensionRatioSide
    701:704:int getHeight() -> getHeight
    832:832:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    1396:1396:int getHorizontalChainStyle() -> getHorizontalChainStyle
    1786:1786:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    801:808:int getHorizontalMargin() -> getHorizontalMargin
    714:719:int getLength(int) -> getLength
    139:139:int getMaxHeight() -> getMaxHeight
    143:143:int getMaxWidth() -> getMaxWidth
    758:758:int getMinHeight() -> getMinHeight
    749:749:int getMinWidth() -> getMinWidth
    1871:1880:androidx.constraintlayout.solver.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    440:440:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> getParent
    1852:1861:androidx.constraintlayout.solver.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    785:785:int getRight() -> getRight
    72:77:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun getRun(int) -> getRun
    842:842:float getVerticalBiasPercent() -> getVerticalBiasPercent
    1416:1416:int getVerticalChainStyle() -> getVerticalChainStyle
    1795:1795:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    815:822:int getVerticalMargin() -> getVerticalMargin
    534:534:int getVisibility() -> getVisibility
    653:656:int getWidth() -> getWidth
    629:632:int getX() -> getX
    641:644:int getY() -> getY
    868:868:boolean hasBaseline() -> hasBaseline
    1441:1444:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    1962:1963:boolean isChainHead(int) -> isChainHead
    1838:1842:boolean isInHorizontalChain() -> isInHorizontalChain
    179:179:boolean isInPlaceholder() -> isInPlaceholder
    1919:1923:boolean isInVerticalChain() -> isInVerticalChain
    299:358:void reset() -> reset
    1729:1740:void resetAnchors() -> resetAnchors
    401:409:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
    1322:1324:void setBaselineDistance(int) -> setBaselineDistance
    1333:1334:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    550:551:void setDebugName(java.lang.String) -> setDebugName
    1052:1106:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    1208:1241:void setFrame(int,int,int,int) -> setFrame
    171:172:void setHasBaseline(boolean) -> setHasBaseline
    990:994:void setHeight(int) -> setHeight
    1143:1144:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1386:1387:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1265:1270:void setHorizontalDimension(int,int) -> setHorizontalDimension
    1820:1821:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1019:1026:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1367:1368:void setHorizontalWeight(float) -> setHorizontalWeight
    187:188:void setInBarrier(int,boolean) -> setInBarrier
    183:184:void setInPlaceholder(boolean) -> setInPlaceholder
    135:136:void setInVirtualLayout(boolean) -> setInVirtualLayout
    151:152:void setMaxHeight(int) -> setMaxHeight
    147:148:void setMaxWidth(int) -> setMaxWidth
    1175:1180:void setMinHeight(int) -> setMinHeight
    1162:1167:void setMinWidth(int) -> setMinWidth
    924:926:void setOrigin(int,int) -> setOrigin
    449:450:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> setParent
    1153:1154:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1406:1407:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1279:1284:void setVerticalDimension(int,int) -> setVerticalDimension
    1829:1830:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1037:1044:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1376:1377:void setVerticalWeight(float) -> setVerticalWeight
    525:526:void setVisibility(int) -> setVisibility
    978:982:void setWidth(int) -> setWidth
    905:906:void setX(int) -> setX
    914:915:void setY(int) -> setY
    2266:2320:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    608:608:java.lang.String toString() -> toString
    2858:2914:void updateFromRuns(boolean,boolean) -> updateFromRuns
    2729:2756:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.ConstraintWidget$1 -> androidx.constraintlayout.solver.widgets.ConstraintWidget$1:
# {"id":"sourceFile","fileName":"ConstraintWidget.java"}
    946:2378:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour:
# {"id":"sourceFile","fileName":"ConstraintWidget.java"}
    193:194:void <clinit>() -> <clinit>
    193:193:void <init>(java.lang.String,int) -> <init>
    193:193:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    193:193:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
# {"id":"sourceFile","fileName":"ConstraintWidgetContainer.java"}
    46:265:void <init>() -> <init>
    693:699:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> addChain
    280:341:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> addChildrenToSolver
    708:714:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addHorizontalChain
    723:729:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addVerticalChain
    70:70:boolean directMeasure(boolean) -> directMeasure
    89:89:boolean directMeasureSetup(boolean) -> directMeasureSetup
    93:93:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    133:133:androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    217:217:int getOptimizationLevel() -> getOptimizationLevel
    625:625:boolean handlesInternalConstraints() -> handlesInternalConstraints
    58:59:void invalidateGraph() -> invalidateGraph
    65:66:void invalidateMeasures() -> invalidateMeasures
    262:262:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    399:399:boolean isRtl() -> isRtl
    255:255:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    418:601:void layout() -> layout
    601:617:void layout() -> layout
    115:117:long measure(int,int,int,int,int,int,int,int,int) -> measure
    227:227:boolean optimizeFor(int) -> optimizeFor
    242:249:void reset() -> reset
    682:684:void resetChains() -> resetChains
    128:130:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    207:209:void setOptimizationLevel(int) -> setOptimizationLevel
    390:391:void setRtl(boolean) -> setRtl
    350:357:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> updateChildrenFromSolver
    361:367:void updateFromRuns(boolean,boolean) -> updateFromRuns
    122:123:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.solver.widgets.Flow -> androidx.constraintlayout.solver.widgets.Flow:
# {"id":"sourceFile","fileName":"Flow.java"}
    32:80:void <init>() -> <init>
    32:32:int access$000(androidx.constraintlayout.solver.widgets.Flow) -> access$000
    32:32:int access$100(androidx.constraintlayout.solver.widgets.Flow) -> access$100
    32:32:int access$1000(androidx.constraintlayout.solver.widgets.Flow) -> access$1000
    32:32:float access$1100(androidx.constraintlayout.solver.widgets.Flow) -> access$1100
    32:32:int access$1200(androidx.constraintlayout.solver.widgets.Flow) -> access$1200
    32:32:float access$1300(androidx.constraintlayout.solver.widgets.Flow) -> access$1300
    32:32:float access$1400(androidx.constraintlayout.solver.widgets.Flow) -> access$1400
    32:32:int access$1500(androidx.constraintlayout.solver.widgets.Flow) -> access$1500
    32:32:float access$1600(androidx.constraintlayout.solver.widgets.Flow) -> access$1600
    32:32:int access$1700(androidx.constraintlayout.solver.widgets.Flow) -> access$1700
    32:32:float access$1800(androidx.constraintlayout.solver.widgets.Flow) -> access$1800
    32:32:int access$1900(androidx.constraintlayout.solver.widgets.Flow) -> access$1900
    32:32:int access$200(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> access$200
    32:32:int access$300(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> access$300
    32:32:int access$400(androidx.constraintlayout.solver.widgets.Flow) -> access$400
    32:32:androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow) -> access$500
    32:32:int access$600(androidx.constraintlayout.solver.widgets.Flow) -> access$600
    32:32:int access$700(androidx.constraintlayout.solver.widgets.Flow) -> access$700
    32:32:int access$800(androidx.constraintlayout.solver.widgets.Flow) -> access$800
    32:32:float access$900(androidx.constraintlayout.solver.widgets.Flow) -> access$900
    1215:1238:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    1119:1202:void createAlignedConstraints(boolean) -> createAlignedConstraints
    199:217:int getWidgetHeight(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> getWidgetHeight
    177:195:int getWidgetWidth(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> getWidgetWidth
    225:325:void measure(int,int,int,int) -> measure
    965:1116:void measureAligned(androidx.constraintlayout.solver.widgets.ConstraintWidget[],int,int,int,int[]) -> measureAligned
    776:914:void measureChainWrap(androidx.constraintlayout.solver.widgets.ConstraintWidget[],int,int,int,int[]) -> measureChainWrap
    929:950:void measureNoWrap(androidx.constraintlayout.solver.widgets.ConstraintWidget[],int,int,int,int[]) -> measureNoWrap
    146:146:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    122:122:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    148:148:void setFirstVerticalBias(float) -> setFirstVerticalBias
    124:124:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    155:156:void setHorizontalAlign(int) -> setHorizontalAlign
    139:140:void setHorizontalBias(float) -> setHorizontalBias
    166:166:void setHorizontalGap(int) -> setHorizontalGap
    131:132:void setHorizontalStyle(int) -> setHorizontalStyle
    150:150:void setLastHorizontalBias(float) -> setLastHorizontalBias
    126:126:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    152:152:void setLastVerticalBias(float) -> setLastVerticalBias
    128:128:void setLastVerticalStyle(int) -> setLastVerticalStyle
    170:170:void setMaxElementsWrap(int) -> setMaxElementsWrap
    119:120:void setOrientation(int) -> setOrientation
    159:160:void setVerticalAlign(int) -> setVerticalAlign
    143:144:void setVerticalBias(float) -> setVerticalBias
    168:168:void setVerticalGap(int) -> setVerticalGap
    135:136:void setVerticalStyle(int) -> setVerticalStyle
    163:164:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.solver.widgets.Flow$WidgetsList -> androidx.constraintlayout.solver.widgets.Flow$WidgetsList:
# {"id":"sourceFile","fileName":"Flow.java"}
    332:364:void <init>(androidx.constraintlayout.solver.widgets.Flow,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> <init>
    331:331:androidx.constraintlayout.solver.widgets.ConstraintWidget access$2000(androidx.constraintlayout.solver.widgets.Flow$WidgetsList) -> access$2000
    409:445:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    383:390:void clear() -> clear
    448:690:void createConstraints(boolean,int,boolean) -> createConstraints
    402:405:int getHeight() -> getHeight
    395:398:int getWidth() -> getWidth
    693:718:void measureMatchConstraints(int) -> measureMatchConstraints
    721:759:void recomputeDimensions() -> recomputeDimensions
    392:392:void setStartIndex(int) -> setStartIndex
    370:380:void setup(int,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,int) -> setup
androidx.constraintlayout.solver.widgets.Guideline -> androidx.constraintlayout.solver.widgets.Guideline:
# {"id":"sourceFile","fileName":"Guideline.java"}
    39:54:void <init>() -> <init>
    199:233:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    68:68:boolean allowedInBarrier() -> allowedInBarrier
    126:148:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    117:117:int getOrientation() -> getOrientation
    184:184:int getRelativeBegin() -> getRelativeBegin
    188:188:int getRelativeEnd() -> getRelativeEnd
    180:180:float getRelativePercent() -> getRelativePercent
    164:169:void setGuideBegin(int) -> setGuideBegin
    172:177:void setGuideEnd(int) -> setGuideEnd
    156:161:void setGuidePercent(float) -> setGuidePercent
    85:100:void setOrientation(int) -> setOrientation
    237:252:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.Guideline$1 -> androidx.constraintlayout.solver.widgets.Guideline$1:
# {"id":"sourceFile","fileName":"Guideline.java"}
    126:126:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.Helper -> androidx.constraintlayout.solver.widgets.Helper:
# {"id":"sourceFile","fileName":"Helper.java"}
androidx.constraintlayout.solver.widgets.HelperWidget -> androidx.constraintlayout.solver.widgets.HelperWidget:
# {"id":"sourceFile","fileName":"HelperWidget.java"}
    9:11:void <init>() -> <init>
    24:32:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    49:51:void removeAllIds() -> removeAllIds
    16:16:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.Optimizer -> androidx.constraintlayout.solver.widgets.Optimizer:
# {"id":"sourceFile","fileName":"Optimizer.java"}
    51:51:void <clinit>() -> <clinit>
    64:96:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> checkMatchParent
    99:99:boolean enabled(int,int) -> enabled
androidx.constraintlayout.solver.widgets.VirtualLayout -> androidx.constraintlayout.solver.widgets.VirtualLayout:
# {"id":"sourceFile","fileName":"VirtualLayout.java"}
    26:202:void <init>() -> <init>
    72:81:void applyRtl(boolean) -> applyRtl
    130:136:void captureWidgets() -> captureWidgets
    143:143:int getMeasuredHeight() -> getMeasuredHeight
    139:139:int getMeasuredWidth() -> getMeasuredWidth
    98:98:int getPaddingBottom() -> getPaddingBottom
    100:100:int getPaddingLeft() -> getPaddingLeft
    102:102:int getPaddingRight() -> getPaddingRight
    96:96:int getPaddingTop() -> getPaddingTop
    207:220:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    152:199:boolean measureChildren() -> measureChildren
    113:113:boolean needSolverPass() -> needSolverPass
    109:110:void needsCallbackFromSolver(boolean) -> needsCallbackFromSolver
    147:149:void setMeasure(int,int) -> setMeasure
    48:54:void setPadding(int) -> setPadding
    93:94:void setPaddingBottom(int) -> setPaddingBottom
    63:64:void setPaddingEnd(int) -> setPaddingEnd
    67:69:void setPaddingLeft(int) -> setPaddingLeft
    88:90:void setPaddingRight(int) -> setPaddingRight
    57:60:void setPaddingStart(int) -> setPaddingStart
    84:85:void setPaddingTop(int) -> setPaddingTop
    126:127:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.WidgetContainer -> androidx.constraintlayout.solver.widgets.WidgetContainer:
# {"id":"sourceFile","fileName":"WidgetContainer.java"}
    26:36:void <init>() -> <init>
    72:78:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    98:100:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> remove
    181:182:void removeAllChildren() -> removeAllChildren
    62:64:void reset() -> reset
    172:178:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency:
# {"id":"sourceFile","fileName":"BaselineDimensionDependency.java"}
    22:23:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure:
# {"id":"sourceFile","fileName":"BasicMeasure.java"}
    50:76:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    403:432:boolean measure(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> measure
    79:111:void measureChildren(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> measureChildren
    119:135:void solveLinearSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,java.lang.String,int,int) -> solveLinearSystem
    156:245:long solverMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    245:391:long solverMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    54:66:void updateHierarchy(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure:
# {"id":"sourceFile","fileName":"BasicMeasure.java"}
    440:440:void <init>() -> <init>
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer:
# {"id":"sourceFile","fileName":"BasicMeasure.java"}
androidx.constraintlayout.solver.widgets.analyzer.ChainRun -> androidx.constraintlayout.solver.widgets.analyzer.ChainRun:
# {"id":"sourceFile","fileName":"ChainRun.java"}
    32:39:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> <init>
    523:580:void apply() -> apply
    494:498:void applyToWidget() -> applyToWidget
    77:103:void build() -> build
    108:112:void clear() -> clear
    501:507:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    511:517:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    65:73:long getWrapDimension() -> getWrapDimension
    54:61:boolean supportsWrapComputation() -> supportsWrapComputation
    43:49:java.lang.String toString() -> toString
    122:291:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
    123:491:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.Dependency -> androidx.constraintlayout.solver.widgets.analyzer.Dependency:
# {"id":"sourceFile","fileName":"Dependency.java"}
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph:
# {"id":"sourceFile","fileName":"DependencyGraph.java"}
    44:625:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    711:757:void applyGroup(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.solver.widgets.analyzer.RunGroup) -> applyGroup
    383:560:boolean basicMeasureWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    629:639:void buildGraph() -> buildGraph
    642:697:void buildGraph(java.util.ArrayList) -> buildGraph
    64:71:int computeWrap(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrap
    109:226:boolean directMeasure(boolean) -> directMeasure
    230:259:boolean directMeasureSetup(boolean) -> directMeasureSetup
    263:356:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    760:786:void findGroup(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    615:616:void invalidateGraph() -> invalidateGraph
    622:623:void invalidateMeasures() -> invalidateMeasures
    371:380:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    564:609:void measureWidgets() -> measureWidgets
    60:61:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode:
# {"id":"sourceFile","fileName":"DependencyNode.java"}
    23:41:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    100:104:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> addDependency
    119:125:void clear() -> clear
    50:59:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:97:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type:
# {"id":"sourceFile","fileName":"DependencyNode.java"}
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency:
# {"id":"sourceFile","fileName":"DimensionDependency.java"}
    24:30:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    33:41:void resolve(int) -> resolve
androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference:
# {"id":"sourceFile","fileName":"GuidelineReference.java"}
    25:29:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    48:50:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    69:108:void apply() -> apply
    112:118:void applyToWidget() -> applyToWidget
    33:34:void clear() -> clear
    44:44:boolean supportsWrapComputation() -> supportsWrapComputation
    54:65:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HelperReferences -> androidx.constraintlayout.solver.widgets.analyzer.HelperReferences:
# {"id":"sourceFile","fileName":"HelperReferences.java"}
    24:25:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    44:46:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    50:118:void apply() -> apply
    144:154:void applyToWidget() -> applyToWidget
    29:31:void clear() -> clear
    40:40:boolean supportsWrapComputation() -> supportsWrapComputation
    122:141:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun:
# {"id":"sourceFile","fileName":"HorizontalWidgetRun.java"}
    37:37:void <clinit>() -> <clinit>
    40:44:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    83:268:void apply() -> apply
    548:551:void applyToWidget() -> applyToWidget
    53:58:void clear() -> clear
    271:301:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:68:void reset() -> reset
    72:78:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    305:545:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1:
# {"id":"sourceFile","fileName":"HorizontalWidgetRun.java"}
    305:305:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.RunGroup -> androidx.constraintlayout.solver.widgets.analyzer.RunGroup:
# {"id":"sourceFile","fileName":"RunGroup.java"}
    33:49:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int) -> <init>
    52:54:void add(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> add
    121:170:long computeWrapSize(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    170:182:long computeWrapSize(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    89:117:long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:85:long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun:
# {"id":"sourceFile","fileName":"VerticalWidgetRun.java"}
    34:43:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    200:421:void apply() -> apply
    424:427:void applyToWidget() -> applyToWidget
    52:58:void clear() -> clear
    62:70:void reset() -> reset
    74:80:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    85:196:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1:
# {"id":"sourceFile","fileName":"VerticalWidgetRun.java"}
    85:85:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun:
# {"id":"sourceFile","fileName":"WidgetRun.java"}
    34:45:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    280:283:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int) -> addTarget
    286:292:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency) -> addTarget
    233:254:int getLimitedDimension(int,int) -> getLimitedDimension
    95:123:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> getTarget
    258:276:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> getTarget
    295:298:long getWrapDimension() -> getWrapDimension
    301:301:boolean isResolved() -> isResolved
    171:220:void resolveDimension(int,int) -> resolveDimension
    127:168:void updateRunCenter(androidx.constraintlayout.solver.widgets.analyzer.Dependency,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> updateRunCenter
    228:228:void updateRunEnd(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> updateRunEnd
    224:224:void updateRunStart(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> updateRunStart
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1:
# {"id":"sourceFile","fileName":"WidgetRun.java"}
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType:
# {"id":"sourceFile","fileName":"WidgetRun.java"}
    303:303:void <clinit>() -> <clinit>
    303:303:void <init>(java.lang.String,int) -> <init>
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
# {"id":"sourceFile","fileName":"Barrier.java"}
    118:120:void <init>(android.content.Context) -> <init>
    123:125:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:219:boolean allowsGoneWidget() -> allowsGoneWidget
    239:239:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:212:void init(android.util.AttributeSet) -> init
    184:185:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    215:216:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    228:231:void setDpMargin(int) -> setDpMargin
    248:249:void setMargin(int) -> setMargin
    147:148:void setType(int) -> setType
    151:180:void updateType(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
# {"id":"sourceFile","fileName":"ConstraintAttribute.java"}
    211:215:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object) -> <init>
    217:222:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    250:274:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    399:445:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    278:328:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    225:246:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
# {"id":"sourceFile","fileName":"ConstraintAttribute.java"}
    88:88:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
# {"id":"sourceFile","fileName":"ConstraintAttribute.java"}
    51:58:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
# {"id":"sourceFile","fileName":"ConstraintHelper.java"}
    48:82:void <init>(android.content.Context) -> <init>
    48:88:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    241:261:void addID(java.lang.String) -> addID
    192:200:void addRscID(int) -> addRscID
    369:384:void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeatures
    390:394:void applyLayoutFeatures() -> applyLayoutFeatures
    269:306:int findId(java.lang.String) -> findId
    318:340:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    173:173:int[] getReferencedIds() -> getReferencedIds
    100:111:void init(android.util.AttributeSet) -> init
    115:119:void onAttachedToWindow() -> onAttachedToWindow
    208:208:void onDraw(android.graphics.Canvas) -> onDraw
    215:220:void onMeasure(int,int) -> onMeasure
    347:362:void setIds(java.lang.String) -> setIds
    181:186:void setReferencedIds(int[]) -> setReferencedIds
    462:462:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    470:470:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    478:478:void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreDraw
    403:429:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    227:235:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    493:1488:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    493:1488:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    481:481:java.util.ArrayList access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    936:940:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1217:1446:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1847:1847:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1873:1962:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3151:3153:void forceLayout() -> forceLayout
    481:481:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1831:1831:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    481:481:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1823:1823:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1839:1839:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    552:558:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1088:1088:int getMaxHeight() -> getMaxHeight
    1078:1078:int getMaxWidth() -> getMaxWidth
    1041:1041:int getMinHeight() -> getMinHeight
    1031:1031:int getMinWidth() -> getMinWidth
    1815:1815:int getOptimizationLevel() -> getOptimizationLevel
    1633:1642:int getPaddingWidth() -> getPaddingWidth
    1449:1462:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1865:1865:android.view.View getViewById(int) -> getViewById
    1472:1475:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    878:920:void init(android.util.AttributeSet,int,int) -> init
    1621:1623:boolean isRtl() -> isRtl
    3156:3164:void markHierarchyDirty() -> markHierarchyDirty
    1738:1779:void onLayout(boolean,int,int,int,int) -> onLayout
    1585:1618:void onMeasure(int,int) -> onMeasure
    958:981:void onViewAdded(android.view.View) -> onViewAdded
    988:996:void onViewRemoved(android.view.View) -> onViewRemoved
    928:929:void parseLayoutDescription(int) -> parseLayoutDescription
    947:951:void removeView(android.view.View) -> removeView
    3145:3147:void requestLayout() -> requestLayout
    1549:1578:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1500:1534:void resolveSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1109:1209:void setChildrenConstraints() -> setChildrenConstraints
    1856:1857:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    534:546:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    587:590:void setId(int) -> setId
    1063:1068:void setMaxHeight(int) -> setMaxHeight
    1050:1055:void setMaxWidth(int) -> setMaxWidth
    1017:1022:void setMinHeight(int) -> setMinHeight
    1004:1009:void setMinWidth(int) -> setMinWidth
    1965:1969:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    1804:1806:void setOptimizationLevel(int) -> setOptimizationLevel
    1647:1713:void setSelfDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    3173:3173:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1092:1105:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    660:660:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    2091:2949:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2091:3000:void <init>(int,int) -> <init>
    2091:3004:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3012:3127:void resolveLayoutDirection(int) -> resolveLayoutDirection
    2952:2996:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    2540:2594:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    617:619:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    609:615:void captureLayoutInfos(int,int,int,int,int,int) -> captureLayoutInfos
    857:872:void didMeasures() -> didMeasures
    625:699:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure) -> measure
    699:809:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure) -> measure
    809:853:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
# {"id":"sourceFile","fileName":"ConstraintLayoutStates.java"}
    42:51:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:344:void load(android.content.Context,int) -> load
    347:374:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    133:134:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
# {"id":"sourceFile","fileName":"ConstraintLayoutStates.java"}
    141:168:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:172:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
# {"id":"sourceFile","fileName":"ConstraintLayoutStates.java"}
    186:251:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    220:400:void <clinit>() -> <clinit>
    74:223:void <init>() -> <init>
    74:74:int access$100(android.content.res.TypedArray,int,int) -> access$100
    74:74:int[] access$200() -> access$200
    1585:1588:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> applyTo
    1662:1775:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    1478:1479:void clone(android.content.Context,int) -> clone
    1499:1549:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    2712:2716:void constrainCircle(int,int,int,float) -> constrainCircle
    3750:3782:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    3417:3421:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    3241:3244:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> get
    3276:3309:void load(android.content.Context,int) -> load
    3318:3406:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    3409:3413:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    3425:3747:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateConstraint
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1256:1263:void <init>() -> <init>
    1256:1256:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1401:1467:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1256:1256:java.lang.Object clone() -> clone
    1297:1304:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    1336:1398:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    654:768:void <clinit>() -> <clinit>
    517:581:void <init>() -> <init>
    584:652:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    771:971:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1198:1213:void <clinit>() -> <clinit>
    1179:1186:void <init>() -> <init>
    1189:1196:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1216:1249:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1139:1144:void <init>() -> <init>
    1147:1152:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1155:1173:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1057:1082:void <clinit>() -> <clinit>
    1026:1039:void <init>() -> <init>
    1042:1055:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1085:1133:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintsChangedListener -> androidx.constraintlayout.widget.ConstraintsChangedListener:
# {"id":"sourceFile","fileName":"ConstraintsChangedListener.java"}
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
# {"id":"sourceFile","fileName":"Guideline.java"}
    55:57:void <init>(android.content.Context) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    93:94:void onMeasure(int,int) -> onMeasure
    102:105:void setGuidelineBegin(int) -> setGuidelineBegin
    113:116:void setGuidelineEnd(int) -> setGuidelineEnd
    123:126:void setGuidelinePercent(float) -> setGuidelinePercent
    79:79:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.VirtualLayout -> androidx.constraintlayout.widget.VirtualLayout:
# {"id":"sourceFile","fileName":"VirtualLayout.java"}
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:61:void init(android.util.AttributeSet) -> init
    72:98:void onAttachedToWindow() -> onAttachedToWindow
    114:116:void setElevation(float) -> setElevation
    105:107:void setVisibility(int) -> setVisibility
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    118:152:void <clinit>() -> <clinit>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:255:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:160:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1615:1627:void addPreDrawListener() -> addPreDrawListener
    1760:1760:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1281:1286:int clamp(int,int,int) -> clamp
    1066:1078:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    854:875:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1523:1535:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1253:1277:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    332:345:void drawableStateChanged() -> drawableStateChanged
    1584:1601:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1755:1755:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1740:1740:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1745:1750:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    979:988:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1547:1552:java.util.List getDependencies(android.view.View) -> getDependencies
    1576:1577:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1566:1571:java.util.List getDependents(android.view.View) -> getDependents
    732:733:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1090:1096:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    992:1063:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    600:610:int getKeyline(int) -> getKeyline
    965:967:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    401:401:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2017:2017:int getNestedScrollAxes() -> getNestedScrollAxes
    654:685:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    327:327:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    742:742:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    737:737:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    444:457:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1607:1607:boolean hasDependencies(android.view.View) -> hasDependencies
    1704:1709:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1709:1710:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1193:1217:void layoutChild(android.view.View,int) -> layoutChild
    1106:1116:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1130:1183:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1413:1491:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1653:1692:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    264:279:void onAttachedToWindow() -> onAttachedToWindow
    1307:1409:void onChildViewsChanged(int) -> onChildViewsChanged
    283:293:void onDetachedFromWindow() -> onDetachedFromWindow
    926:934:void onDraw(android.graphics.Canvas) -> onDraw
    532:545:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    906:922:void onLayout(boolean,int,int,int,int) -> onLayout
    889:901:void onLayoutChild(android.view.View,int) -> onLayoutChild
    767:850:void onMeasure(int,int) -> onMeasure
    760:762:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1962:1986:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1992:2012:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1913:1914:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1919:1957:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1852:1854:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1859:1861:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1868:1909:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1796:1797:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1802:1819:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3241:3264:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3269:3287:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1765:1765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1771:1791:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1823:1824:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1829:1847:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    551:587:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    615:649:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    461:527:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    689:722:void prepareChildren() -> prepareChildren
    953:955:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:166:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1634:1641:void removePreDrawListener() -> removePreDrawListener
    3293:3301:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    592:597:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    412:437:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    1247:1247:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    1225:1231:int resolveGravity(int) -> resolveGravity
    1239:1239:int resolveKeylineGravity(int) -> resolveKeylineGravity
    938:940:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1494:1500:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1503:1509:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    259:260:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    302:318:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    380:381:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    369:370:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    354:360:void setVisibility(int) -> setVisibility
    384:393:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3305:3329:void setupForInsets() -> setupForInsets
    349:349:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$$ExternalSyntheticApiModelOutline0 -> androidx.coordinatorlayout.widget.CoordinatorLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.coordinatorlayout.widget.CoordinatorLayout$$InternalSyntheticApiModelOutline$1$f6dcace6decf12b06be2bc9b49299cd0c53491d5a28b623a9096bfd229a98271$0.m(androidx.coordinatorlayout.widget.CoordinatorLayout,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3312:3312:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3316:3316:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2091:2092:void <init>() -> <init>
    2102:2103:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2229:2229:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2796:2796:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2195:2195:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2213:2213:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2256:2256:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2716:2716:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    2114:2114:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2286:2286:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2305:2305:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2124:2124:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2151:2151:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2359:2359:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2330:2330:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2668:2668:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2696:2696:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2599:2599:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2633:2636:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2527:2527:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2540:2544:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2583:2587:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2443:2443:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2469:2473:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2738:2738:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2756:2756:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2778:2778:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2398:2398:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2426:2430:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2484:2484:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2509:2512:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2175:2175:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3218:3219:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3223:3226:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3230:3235:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2809:2870:void <init>(int,int) -> <init>
    2809:2905:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2809:2909:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2809:2913:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2809:2917:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3003:3003:boolean checkAnchorChanged() -> checkAnchorChanged
    3100:3102:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    3014:3017:boolean didBlockInteraction() -> didBlockInteraction
    3125:3133:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2926:2926:int getAnchorId() -> getAnchorId
    2952:2952:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    3079:3079:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2995:2995:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3033:3038:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    3069:3075:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    3087:3088:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    3054:3055:void resetNestedScroll(int) -> resetNestedScroll
    3050:3051:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3141:3178:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2965:2980:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    3083:3084:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2987:2988:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    3058:3066:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3210:3213:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3186:3203:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2020:2020:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2023:2024:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3373:3373:void <clinit>() -> <clinit>
    3335:3348:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3351:3352:void <init>(android.os.Parcelable) -> <init>
    3356:3371:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3374:3374:void <init>() -> <init>
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3377:3377:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3382:3382:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object[] newArray(int) -> newArray
    3387:3387:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2031:2031:void <init>() -> <init>
    2031:2031:int compare(java.lang.Object,java.lang.Object) -> compare
    2034:2041:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
# {"id":"sourceFile","fileName":"DirectedAcyclicGraph.java"}
    39:44:void <init>() -> <init>
    76:89:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:57:void addNode(java.lang.Object) -> addNode
    143:150:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:194:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:209:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:215:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
# {"id":"sourceFile","fileName":"ViewGroupUtils.java"}
    35:36:void <clinit>() -> <clinit>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    0:0:void $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg(android.app.Activity) -> $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg
      # {"id":"com.android.tools.r8.synthesized"}
    299:304:void finishAffinity(android.app.Activity) -> finishAffinity
    672:676:void lambda$recreate$0(android.app.Activity) -> lambda$recreate$0
    663:678:void recreate(android.app.Activity) -> recreate
    518:579:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    245:250:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    282:289:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0 -> androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.Activity androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.f$0 -> f$0
    0:0:void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.<init>(android.app.Activity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ActivityCompat$Api16Impl -> androidx.core.app.ActivityCompat$Api16Impl:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    822:823:void finishAffinity(android.app.Activity) -> finishAffinity
    809:810:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    816:818:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.core.app.ActivityCompat$Api23Impl -> androidx.core.app.ActivityCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    903:905:void onSharedElementsReady(java.lang.Object) -> onSharedElementsReady
    893:894:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    898:898:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
# {"id":"sourceFile","fileName":"ActivityOptionsCompat.java"}
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    91:100:void <clinit>() -> <clinit>
    378:380:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:362:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    316:325:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    302:311:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:352:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:372:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:297:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:159:boolean recreate(android.app.Activity) -> recreate
    159:171:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:147:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:167:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:292:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    183:196:void <init>(android.app.Activity) -> <init>
    200:200:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    241:248:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:228:void onActivityPaused(android.app.Activity) -> onActivityPaused
    214:214:void onActivityResumed(android.app.Activity) -> onActivityResumed
    232:232:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    207:210:void onActivityStarted(android.app.Activity) -> onActivityStarted
    237:237:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    201:216:int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String) -> checkOrNoteProxyOp
    178:180:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    78:79:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api23Impl -> androidx.core.app.AppOpsManagerCompat$Api23Impl:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    271:271:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    276:276:int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOp
    282:282:int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    266:266:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api29Impl -> androidx.core.app.AppOpsManagerCompat$Api29Impl:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    242:246:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String) -> checkOpNoThrow
    254:254:java.lang.String getOpPackageName(android.content.Context) -> getOpPackageName
    233:233:android.app.AppOpsManager getSystemService(android.content.Context) -> getSystemService
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    51:66:void <init>() -> <init>
    140:144:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    131:135:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    88:90:void onCreate(android.os.Bundle) -> onCreate
    95:97:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    126:126:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
# {"id":"sourceFile","fileName":"CoreComponentFactory.java"}
    39:39:void <init>() -> <init>
    80:86:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.MultiWindowModeChangedInfo -> androidx.core.app.MultiWindowModeChangedInfo:
# {"id":"sourceFile","fileName":"MultiWindowModeChangedInfo.java"}
    54:57:void <init>(boolean,android.content.res.Configuration) -> <init>
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
# {"id":"sourceFile","fileName":"NavUtils.java"}
    131:152:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    197:207:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    222:225:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    242:280:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    110:117:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    62:63:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NavUtils$Api16Impl -> androidx.core.app.NavUtils$Api16Impl:
# {"id":"sourceFile","fileName":"NavUtils.java"}
    305:305:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    300:300:boolean navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    295:295:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
# {"id":"sourceFile","fileName":"NotificationManagerCompat.java"}
    105:114:void <clinit>() -> <clinit>
    164:168:void <init>(android.content.Context) -> <init>
    235:236:boolean areNotificationsEnabled() -> areNotificationsEnabled
    161:161:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
androidx.core.app.PictureInPictureModeChangedInfo -> androidx.core.app.PictureInPictureModeChangedInfo:
# {"id":"sourceFile","fileName":"PictureInPictureModeChangedInfo.java"}
    54:57:void <init>(boolean,android.content.res.Configuration) -> <init>
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
# {"id":"sourceFile","fileName":"RemoteActionCompat.java"}
    105:105:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
# {"id":"sourceFile","fileName":"SharedElementCallback.java"}
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
# {"id":"sourceFile","fileName":"TaskStackBuilder.java"}
    81:86:void <init>(android.content.Context) -> <init>
    123:124:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    161:179:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    204:215:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    97:97:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    260:260:java.util.Iterator iterator() -> iterator
    272:273:void startActivities() -> startActivities
    287:300:void startActivities(android.os.Bundle) -> startActivities
androidx.core.app.TaskStackBuilder$SupportParentable -> androidx.core.app.TaskStackBuilder$SupportParentable:
# {"id":"sourceFile","fileName":"TaskStackBuilder.java"}
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    172:175:void <clinit>() -> <clinit>
    594:601:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    577:578:int getColor(android.content.Context,int) -> getColor
    558:558:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    521:522:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    290:295:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    973:974:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    978:979:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1022:1022:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    1012:1012:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    1017:1017:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1034:1034:int getColor(android.content.Context,int) -> getColor
    1039:1039:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    1044:1044:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
# {"id":"sourceFile","fileName":"PermissionChecker.java"}
    98:128:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    143:144:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.CamColor -> androidx.core.content.res.CamColor:
# {"id":"sourceFile","fileName":"CamColor.java"}
    128:138:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    290:295:float distance(androidx.core.content.res.CamColor) -> distance
    483:534:androidx.core.content.res.CamColor findCamByJ(float,float,float) -> findCamByJ
    160:160:androidx.core.content.res.CamColor fromColor(int) -> fromColor
    171:242:androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions) -> fromColorInViewingConditions
    253:253:androidx.core.content.res.CamColor fromJch(float,float,float) -> fromJch
    264:280:androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions) -> fromJchInFrame
    116:116:float getAStar() -> getAStar
    123:123:float getBStar() -> getBStar
    63:63:float getChroma() -> getChroma
    57:57:float getHue() -> getHue
    69:69:float getJ() -> getJ
    109:109:float getJStar() -> getJStar
    149:149:int toColor(float,float,float) -> toColor
    414:471:int toColor(float,float,float,androidx.core.content.res.ViewingConditions) -> toColor
    308:310:int viewed(androidx.core.content.res.ViewingConditions) -> viewed
    310:354:int viewed(androidx.core.content.res.ViewingConditions) -> viewed
    301:301:int viewedInSrgb() -> viewedInSrgb
androidx.core.content.res.CamUtils -> androidx.core.content.res.CamUtils:
# {"id":"sourceFile","fileName":"CamUtils.java"}
    52:73:void <clinit>() -> <clinit>
    80:101:int intFromLStar(float) -> intFromLStar
    111:111:float lStarFromInt(int) -> lStarFromInt
    115:123:float lStarFromY(float) -> lStarFromY
    106:106:float lerp(float,float,float) -> lerp
    158:163:float linearized(int) -> linearized
    137:145:float[] xyzFromInt(int) -> xyzFromInt
    127:132:float yFromInt(int) -> yFromInt
    149:153:float yFromLStar(float) -> yFromLStar
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
# {"id":"sourceFile","fileName":"ColorStateListInflaterCompat.java"}
    53:53:void <clinit>() -> <clinit>
    92:104:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    119:125:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    224:229:android.util.TypedValue getTypedValue() -> getTypedValue
    71:76:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    134:212:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    216:218:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    242:255:int modulateColorAlpha(int,float,float) -> modulateColorAlpha
    234:235:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
# {"id":"sourceFile","fileName":"ComplexColorCompat.java"}
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    257:258:int getType(android.content.res.TypedArray,int) -> getType
    186:194:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    276:300:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    298:300:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    300:301:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    199:205:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    211:251:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    315:343:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    348:359:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    306:310:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$Api21Impl -> androidx.core.content.res.FontResourcesParserCompat$Api21Impl:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    372:372:int getType(android.content.res.TypedArray,int) -> getType
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    171:173:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    176:176:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    131:138:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    141:141:java.lang.String getFileName() -> getFileName
    161:161:int getResourceId() -> getResourceId
    157:157:int getTtcIndex() -> getTtcIndex
    153:153:java.lang.String getVariationSettings() -> getVariationSettings
    145:145:int getWeight() -> getWeight
    149:149:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    88:93:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    105:105:int getFetchStrategy() -> getFetchStrategy
    101:101:androidx.core.provider.FontRequest getRequest() -> getRequest
    115:115:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    109:109:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    202:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
# {"id":"sourceFile","fileName":"GrowingArrayUtils.java"}
    42:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:62:int[] append(int[],int,int) -> append
    175:175:int growSize(int) -> growSize
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    75:80:void <clinit>() -> <clinit>
    296:305:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList,android.content.res.Resources$Theme) -> addColorStateListToCache
    272:289:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    436:439:android.graphics.Typeface getCachedFont(android.content.Context,int) -> getCachedFont
    230:244:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    136:137:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    169:170:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    408:411:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    523:531:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    543:546:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    316:321:android.util.TypedValue getTypedValue() -> getTypedValue
    256:266:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    308:310:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    568:576:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    600:656:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    653:656:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    654:656:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    601:663:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$Api21Impl -> androidx.core.content.res.ResourcesCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    705:705:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    711:711:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
androidx.core.content.res.ResourcesCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    693:693:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    688:688:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    355:359:void <init>(android.content.res.ColorStateList,android.content.res.Configuration,android.content.res.Resources$Theme) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    328:331:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    335:339:boolean equals(java.lang.Object) -> equals
    344:344:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    0:0:void $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig
      # {"id":"com.android.tools.r8.synthesized"}
    446:446:void <init>() -> <init>
    490:491:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    478:479:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    497:497:android.os.Handler getHandler(android.os.Handler) -> getHandler
    490:490:void lambda$callbackFailAsync$1(int) -> lambda$callbackFailAsync$1
    478:478:void lambda$callbackSuccessAsync$0(android.graphics.Typeface) -> lambda$callbackSuccessAsync$0
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$0 -> f$0
    android.graphics.Typeface androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$1 -> f$1
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$0 -> f$0
    int androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$1 -> f$1
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    753:758:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    778:778:void <clinit>() -> <clinit>
    785:804:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    768:769:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
# {"id":"sourceFile","fileName":"TypedArrayUtils.java"}
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ViewingConditions -> androidx.core.content.res.ViewingConditions:
# {"id":"sourceFile","fileName":"ViewingConditions.java"}
    53:56:void <clinit>() -> <clinit>
    112:123:void <init>(float,float,float,float,float,float,float[],float,float,float) -> <init>
    71:71:float getAw() -> getAw
    87:87:float getC() -> getC
    100:100:float getFl() -> getFl
    104:104:float getFlRoot() -> getFlRoot
    75:75:float getN() -> getN
    79:79:float getNbb() -> getNbb
    91:91:float getNc() -> getNc
    83:83:float getNcb() -> getNcb
    96:96:float[] getRgbD() -> getRgbD
    108:108:float getZ() -> getZ
    130:191:androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean) -> make
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
# {"id":"sourceFile","fileName":"ColorUtils.java"}
    46:46:void <clinit>() -> <clinit>
    457:471:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    557:568:int XYZToColor(double,double,double) -> XYZToColor
    628:633:int blendARGB(int,int,float) -> blendARGB
    158:161:double calculateLuminance(int) -> calculateLuminance
    434:435:void colorToXYZ(int,double[]) -> colorToXYZ
    144:144:int compositeAlpha(int,int) -> compositeAlpha
    54:65:int compositeColors(int,int) -> compositeColors
    148:149:int compositeComponent(int,int,int,int,int) -> compositeComponent
    605:605:int constrain(int,int,int) -> constrain
    697:702:double[] getTempDouble3Array() -> getTempDouble3Array
    378:381:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
# {"id":"sourceFile","fileName":"Insets.java"}
    37:37:void <clinit>() -> <clinit>
    44:49:void <init>(int,int,int,int) -> <init>
    144:154:boolean equals(java.lang.Object) -> equals
    159:163:int hashCode() -> hashCode
    116:117:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    64:67:androidx.core.graphics.Insets of(int,int,int,int) -> of
    78:78:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    192:192:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    202:202:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    169:169:java.lang.String toString() -> toString
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline0 -> androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$2$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$0.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline1 -> androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$2$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$1.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline2 -> androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$2$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$2.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline3 -> androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$2$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$3.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.Insets$Api29Impl:
# {"id":"sourceFile","fileName":"Insets.java"}
    213:213:android.graphics.Insets of(int,int,int,int) -> of
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
# {"id":"sourceFile","fileName":"PaintCompat.java"}
    42:42:void <clinit>() -> <clinit>
    53:54:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
androidx.core.graphics.PaintCompat$Api23Impl -> androidx.core.graphics.PaintCompat$Api23Impl:
# {"id":"sourceFile","fileName":"PaintCompat.java"}
    183:183:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
# {"id":"sourceFile","fileName":"PathParser.java"}
    190:191:void addNode(java.util.ArrayList,char,float[]) -> addNode
    137:151:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    54:65:float[] copyOfRange(float[],int,int) -> copyOfRange
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:186:int nextStart(java.lang.String,int) -> nextStart
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
# {"id":"sourceFile","fileName":"PathParser.java"}
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
# {"id":"sourceFile","fileName":"PathParser.java"}
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
    50:69:void <clinit>() -> <clinit>
    285:297:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    255:255:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    152:191:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    223:229:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int,int) -> createFromResourcesFontFile
    110:120:java.lang.String createResourceUid(android.content.res.Resources,int,java.lang.String,int,int) -> createResourceUid
    83:83:android.graphics.Typeface findFromCache(android.content.res.Resources,int,java.lang.String,int,int) -> findFromCache
    131:134:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
    371:373:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    384:387:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    377:380:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi21Impl.java"}
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:196:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    188:196:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    177:197:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    190:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    68:97:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi26Impl.java"}
    74:108:void <init>() -> <init>
    194:196:void abortCreation(java.lang.Object) -> abortCreation
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:246:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    237:246:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    246:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:185:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:352:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi28Impl.java"}
    38:38:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:67:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi29Impl.java"}
    44:44:void <init>() -> <init>
    131:158:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    89:109:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    92:121:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    169:179:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    53:69:android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int) -> findBaseFont
    75:75:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    48:49:int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle) -> getMatchScore
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    45:52:void <init>() -> <init>
    223:238:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    231:238:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    232:239:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    62:64:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    69:81:java.lang.Object findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    104:104:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    104:104:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    104:104:int getWeight(java.lang.Object) -> getWeight
    107:107:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    104:104:boolean isItalic(java.lang.Object) -> isItalic
    112:112:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor -> androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
# {"id":"sourceFile","fileName":"TypefaceCompatUtil.java"}
    193:200:void closeQuietly(java.io.Closeable) -> closeQuietly
    154:169:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    166:169:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    169:170:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    178:183:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    183:184:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    71:87:java.io.File getTempFile(android.content.Context) -> getTempFile
    112:123:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    113:123:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    123:124:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    221:236:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.TypefaceCompatUtil$Api19Impl -> androidx.core.graphics.TypefaceCompatUtil$Api19Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatUtil.java"}
    249:249:android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal) -> openFileDescriptor
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    192:195:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    202:203:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    229:260:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    180:181:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    217:218:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    401:402:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    276:281:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    97:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    64:65:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    80:83:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    112:115:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    125:128:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    363:364:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    137:142:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    151:156:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    165:170:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    343:346:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    316:317:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.DrawableCompat$Api19Impl -> androidx.core.graphics.drawable.DrawableCompat$Api19Impl:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    450:450:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    456:456:android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int) -> getChild
    461:461:android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable) -> getDrawable
    445:445:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    440:441:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
androidx.core.graphics.drawable.DrawableCompat$Api21Impl -> androidx.core.graphics.drawable.DrawableCompat$Api21Impl:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    493:494:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    498:498:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    503:503:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    510:511:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    473:474:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    515:516:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    478:479:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    483:484:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    488:489:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.DrawableCompat$Api23Impl -> androidx.core.graphics.drawable.DrawableCompat$Api23Impl:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    532:532:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    527:527:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    213:213:void <clinit>() -> <clinit>
    157:377:void <init>() -> <init>
    433:439:int getResId() -> getResId
    406:420:java.lang.String getResPackage() -> getResPackage
    478:484:android.net.Uri getUri() -> getUri
    666:682:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    888:927:void onPostParceling() -> onPostParceling
    851:884:void onPreParceling(boolean) -> onPreParceling
    809:846:java.lang.String toString() -> toString
    930:937:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$Api23Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1231:1244:int getResId(java.lang.Object) -> getResId
    1184:1197:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1260:1273:android.net.Uri getUri(java.lang.Object) -> getUri
    1342:1342:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context) -> loadDrawable
    1281:1337:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context) -> toIcon
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$Api26Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1098:1098:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> createAdaptiveIconDrawable
    1103:1103:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$Api28Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1080:1080:int getResId(java.lang.Object) -> getResId
    1070:1070:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1075:1075:int getType(java.lang.Object) -> getType
    1085:1085:android.net.Uri getUri(java.lang.Object) -> getUri
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$Api30Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1115:1115:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    11:11:void <init>() -> <init>
    14:24:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:55:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.WrappedDrawable -> androidx.core.graphics.drawable.WrappedDrawable:
# {"id":"sourceFile","fileName":"WrappedDrawable.java"}
androidx.core.internal.view.SupportMenu -> androidx.core.internal.view.SupportMenu:
# {"id":"sourceFile","fileName":"SupportMenu.java"}
androidx.core.internal.view.SupportMenuItem -> androidx.core.internal.view.SupportMenuItem:
# {"id":"sourceFile","fileName":"SupportMenuItem.java"}
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
# {"id":"sourceFile","fileName":"MathUtils.java"}
    208:213:float clamp(float,float,float) -> clamp
    250:255:int clamp(int,int,int) -> clamp
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
# {"id":"sourceFile","fileName":"BuildCompat.java"}
    54:62:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String) -> isAtLeastPreReleaseCodename
    160:160:boolean isAtLeastR() -> isAtLeastR
    209:211:boolean isAtLeastT() -> isAtLeastT
androidx.core.os.BundleApi18ImplKt -> androidx.core.os.BundleApi18ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    114:114:void <init>() -> <init>
    118:118:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.os.BundleApi21ImplKt -> androidx.core.os.BundleApi21ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    121:121:void <init>() -> <init>
    125:125:void putSize(android.os.Bundle,java.lang.String,android.util.Size) -> putSize
    129:129:void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF) -> putSizeF
androidx.core.os.BundleKt -> androidx.core.os.BundleKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    34:107:android.os.Bundle bundleOf(kotlin.Pair[]) -> bundleOf
    107:107:android.os.Bundle bundleOf(kotlin.Pair[]) -> bundleOf
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
# {"id":"sourceFile","fileName":"CancellationSignal.java"}
    39:40:void <init>() -> <init>
    71:89:void cancel() -> cancel
    89:93:void cancel() -> cancel
    79:94:void cancel() -> cancel
    48:50:boolean isCanceled() -> isCanceled
    113:125:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    155:162:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.CancellationSignal$Api16Impl -> androidx.core.os.CancellationSignal$Api16Impl:
# {"id":"sourceFile","fileName":"CancellationSignal.java"}
    182:183:void cancel(java.lang.Object) -> cancel
    187:187:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
androidx.core.os.CancellationSignal$OnCancelListener -> androidx.core.os.CancellationSignal$OnCancelListener:
# {"id":"sourceFile","fileName":"CancellationSignal.java"}
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
# {"id":"sourceFile","fileName":"LocaleListCompat.java"}
    37:37:void <clinit>() -> <clinit>
    41:43:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    76:77:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    319:319:boolean equals(java.lang.Object) -> equals
    162:172:androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String) -> forLanguageTags
    90:90:java.util.Locale get(int) -> get
    149:149:androidx.core.os.LocaleListCompat getEmptyLocaleList() -> getEmptyLocaleList
    324:324:int hashCode() -> hashCode
    100:100:boolean isEmpty() -> isEmpty
    108:108:int size() -> size
    129:129:java.lang.String toLanguageTags() -> toLanguageTags
    330:330:java.lang.String toString() -> toString
    58:58:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> wrap
androidx.core.os.LocaleListCompat$Api21Impl -> androidx.core.os.LocaleListCompat$Api21Impl:
# {"id":"sourceFile","fileName":"LocaleListCompat.java"}
    299:299:void <clinit>() -> <clinit>
    313:313:java.util.Locale forLanguageTag(java.lang.String) -> forLanguageTag
    303:308:boolean isPseudoLocale(java.util.Locale) -> isPseudoLocale
    271:296:boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale) -> matchesLanguageAndScript
androidx.core.os.LocaleListCompat$Api24Impl -> androidx.core.os.LocaleListCompat$Api24Impl:
# {"id":"sourceFile","fileName":"LocaleListCompat.java"}
    341:341:android.os.LocaleList createLocaleList(java.util.Locale[]) -> createLocaleList
    346:346:android.os.LocaleList getAdjustedDefault() -> getAdjustedDefault
    351:351:android.os.LocaleList getDefault() -> getDefault
androidx.core.os.LocaleListInterface -> androidx.core.os.LocaleListInterface:
# {"id":"sourceFile","fileName":"LocaleListInterface.java"}
androidx.core.os.LocaleListPlatformWrapper -> androidx.core.os.LocaleListPlatformWrapper:
# {"id":"sourceFile","fileName":"LocaleListPlatformWrapper.java"}
    31:33:void <init>(java.lang.Object) -> <init>
    62:62:boolean equals(java.lang.Object) -> equals
    42:42:java.util.Locale get(int) -> get
    37:37:java.lang.Object getLocaleList() -> getLocaleList
    67:67:int hashCode() -> hashCode
    47:47:boolean isEmpty() -> isEmpty
    52:52:int size() -> size
    77:77:java.lang.String toLanguageTags() -> toLanguageTags
    72:72:java.lang.String toString() -> toString
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
# {"id":"sourceFile","fileName":"TraceCompat.java"}
    53:69:void <clinit>() -> <clinit>
    108:111:void beginSection(java.lang.String) -> beginSection
    121:124:void endSection() -> endSection
androidx.core.os.TraceCompat$Api18Impl -> androidx.core.os.TraceCompat$Api18Impl:
# {"id":"sourceFile","fileName":"TraceCompat.java"}
    225:226:void beginSection(java.lang.String) -> beginSection
    230:231:void endSection() -> endSection
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    40:43:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:74:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:85:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:61:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:59:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:72:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
# {"id":"sourceFile","fileName":"CalleeHandler.java"}
    36:41:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    0:0:int $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo(byte[],byte[]) -> $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo
      # {"id":"com.android.tools.r8.synthesized"}
    197:197:void <clinit>() -> <clinit>
    223:227:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    211:219:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    55:63:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    77:106:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    198:206:int lambda$static$0(byte[],byte[]) -> lambda$static$0
    120:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$$ExternalSyntheticLambda0 -> androidx.core.provider.FontProvider$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.provider.FontProvider$$InternalSyntheticLambda$1$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.provider.FontProvider$$InternalSyntheticLambda$1$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.provider.FontProvider$Api16Impl -> androidx.core.provider.FontProvider$Api16Impl:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    241:241:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object) -> query
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
# {"id":"sourceFile","fileName":"FontRequest.java"}
    57:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    58:72:void <clinit>() -> <clinit>
    227:227:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    269:293:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    238:262:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:223:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:134:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    174:178:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    194:194:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    194:194:java.lang.Object call() -> call
    198:200:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    206:206:void <init>(java.lang.String) -> <init>
    206:206:void accept(java.lang.Object) -> accept
    210:220:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    301:304:void <init>(int) -> <init>
    307:310:void <init>(android.graphics.Typeface) -> <init>
    314:314:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    76:76:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    102:102:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    390:393:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    292:298:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    478:478:void <init>() -> <init>
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    82:94:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:58:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    164:167:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    178:180:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:186:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    135:139:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:157:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:155:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
# {"id":"sourceFile","fileName":"BidiFormatter.java"}
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
# {"id":"sourceFile","fileName":"BidiFormatter.java"}
    139:141:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:170:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
# {"id":"sourceFile","fileName":"BidiFormatter.java"}
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:862:byte dirTypeBackward() -> dirTypeBackward
    816:832:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:728:int getEntryDir() -> getEntryDir
    744:792:int getExitDir() -> getExitDir
    944:956:byte skipEntityBackward() -> skipEntityBackward
    929:930:byte skipEntityForward() -> skipEntityForward
    901:920:byte skipTagBackward() -> skipTagBackward
    872:888:byte skipTagForward() -> skipTagForward
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
# {"id":"sourceFile","fileName":"ICUCompat.java"}
    40:61:void <clinit>() -> <clinit>
    88:90:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.ICUCompat$Api24Impl -> androidx.core.text.ICUCompat$Api24Impl:
# {"id":"sourceFile","fileName":"ICUCompat.java"}
    165:165:android.icu.util.ULocale addLikelySubtags(java.lang.Object) -> addLikelySubtags
    160:160:android.icu.util.ULocale forLocale(java.util.Locale) -> forLocale
    170:170:java.lang.String getScript(java.lang.Object) -> getScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    196:210:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    213:219:void <init>(android.text.PrecomputedText$Params) -> <init>
    331:346:boolean equals(java.lang.Object) -> equals
    274:321:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    252:252:int getBreakStrategy() -> getBreakStrategy
    264:264:int getHyphenationFrequency() -> getHyphenationFrequency
    240:240:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    227:227:android.text.TextPaint getTextPaint() -> getTextPaint
    351:355:int hashCode() -> hashCode
    378:399:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.TextPaint androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$0.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline1 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.TextDirectionHeuristic androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$1.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline2 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$2.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline3 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$3.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline4 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$0.m(android.text.PrecomputedText$Params$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline5 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$1.m(android.text.PrecomputedText$Params$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline6 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$2.m(android.text.PrecomputedText$Params$Builder,android.text.TextDirectionHeuristic) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline7 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$3.m(android.text.PrecomputedText$Params$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline8 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$7$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$0.m(android.text.TextPaint) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    116:129:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:146:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:164:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:182:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextDirectionHeuristicCompat -> androidx.core.text.TextDirectionHeuristicCompat:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicCompat.java"}
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    33:68:void <clinit>() -> <clinit>
    79:86:int isRtlText(int) -> isRtlText
    91:102:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
# {"id":"sourceFile","fileName":"TextUtilsCompat.java"}
    35:35:void <clinit>() -> <clinit>
    92:93:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.text.TextUtilsCompat$Api17Impl -> androidx.core.text.TextUtilsCompat$Api17Impl:
# {"id":"sourceFile","fileName":"TextUtilsCompat.java"}
    143:143:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.Consumer -> androidx.core.util.Consumer:
# {"id":"sourceFile","fileName":"Consumer.java"}
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
# {"id":"sourceFile","fileName":"DebugUtils.java"}
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
# {"id":"sourceFile","fileName":"ObjectsCompat.java"}
    54:55:boolean equals(java.lang.Object,java.lang.Object) -> equals
    96:97:int hash(java.lang.Object[]) -> hash
    159:160:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
androidx.core.util.ObjectsCompat$Api19Impl -> androidx.core.util.ObjectsCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ObjectsCompat.java"}
    171:171:boolean equals(java.lang.Object,java.lang.Object) -> equals
    176:176:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
# {"id":"sourceFile","fileName":"Pair.java"}
androidx.core.util.Pools$Pool -> androidx.core.util.Pools$Pool:
# {"id":"sourceFile","fileName":"Pools.java"}
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
# {"id":"sourceFile","fileName":"Pools.java"}
    94:99:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:124:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
# {"id":"sourceFile","fileName":"Pools.java"}
    143:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
# {"id":"sourceFile","fileName":"Preconditions.java"}
    37:40:void checkArgument(boolean) -> checkArgument
    51:54:void checkArgument(boolean,java.lang.Object) -> checkArgument
    245:255:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    208:212:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    224:228:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    190:195:int checkFlagsArgument(int,int) -> checkFlagsArgument
    136:139:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    153:156:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    168:171:void checkState(boolean,java.lang.String) -> checkState
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    135:135:void <clinit>() -> <clinit>
    144:145:void <init>() -> <init>
    151:154:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    329:335:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    411:413:java.util.List getActionList(android.view.View) -> getActionList
    160:160:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    397:406:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    265:266:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    285:287:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    244:245:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    310:310:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    359:375:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    380:393:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    178:179:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    201:202:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    68:70:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    75:75:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    123:126:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    80:81:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    86:97:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    101:102:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    107:107:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    131:131:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    112:113:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    117:118:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$Api16Impl -> androidx.core.view.AccessibilityDelegateCompat$Api16Impl:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    425:425:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    431:431:boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
    135:137:void <init>(android.content.Context) -> <init>
    313:315:void reset() -> reset
    290:291:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
androidx.core.view.ActionProvider$SubUiVisibilityListener -> androidx.core.view.ActionProvider$SubUiVisibilityListener:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
androidx.core.view.ActionProvider$VisibilityListener -> androidx.core.view.ActionProvider$VisibilityListener:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    151:153:void <init>(androidx.core.view.ContentInfoCompat$Compat) -> <init>
    142:145:java.lang.String flagsToString(int) -> flagsToString
    196:196:android.content.ClipData getClip() -> getClip
    213:213:int getFlags() -> getFlags
    205:205:int getSource() -> getSource
    106:114:java.lang.String sourceToString(int) -> sourceToString
    182:182:android.view.ContentInfo toContentInfo() -> toContentInfo
    167:167:androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo) -> toContentInfoCompat
    188:188:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ContentInfoCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo androidx.core.view.ContentInfoCompat$$InternalSyntheticApiModelOutline$1$4f7b48e3a4cd49533a8068912450a1fa92878e6f99f5b6981d716c890701104f$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    517:523:void <init>(android.content.ClipData,int) -> <init>
    592:592:androidx.core.view.ContentInfoCompat build() -> build
    583:584:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    558:559:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    571:572:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompat -> androidx.core.view.ContentInfoCompat$BuilderCompat:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    668:670:void <init>(android.content.ClipData,int) -> <init>
    704:704:androidx.core.view.ContentInfoCompat build() -> build
    698:699:void setExtras(android.os.Bundle) -> setExtras
    688:689:void setFlags(int) -> setFlags
    693:694:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$1$3bc1660159d81e26cf63e5fc74aac032046fefd8fccac9f5865700fde4996424$0.m(android.view.ContentInfo$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$1$dafd072194ec4197845d9786223d9dc30bd25efd65a79b57445e409cbd3e7107$0.m(android.view.ContentInfo$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$2$1d9d2ad6e4da531f16af947280438658a516139f84a26232f8adb98e05cf1d5d$0.m(android.view.ContentInfo$Builder,android.os.Bundle) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$2$a9170f138ee3e057999d712963c512aa029438eba362b138d0010117498c3421$0.m(android.view.ContentInfo$Builder,android.net.Uri) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$7$4b13573966f84996e6c030ce4d15f96e408aa543c2fb9c2ccffc65198071f2ff$0.m(android.content.ClipData,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompatImpl -> androidx.core.view.ContentInfoCompat$BuilderCompatImpl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    618:621:void <init>(android.content.ClipData,int) -> <init>
    659:659:androidx.core.view.ContentInfoCompat build() -> build
    653:654:void setExtras(android.os.Bundle) -> setExtras
    643:644:void setFlags(int) -> setFlags
    648:649:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$Compat -> androidx.core.view.ContentInfoCompat$Compat:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
androidx.core.view.ContentInfoCompat$Compat31Impl -> androidx.core.view.ContentInfoCompat$Compat31Impl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    446:448:void <init>(android.view.ContentInfo) -> <init>
    459:459:android.content.ClipData getClip() -> getClip
    471:471:int getFlags() -> getFlags
    465:465:int getSource() -> getSource
    453:453:android.view.ContentInfo getWrapped() -> getWrapped
    489:489:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.content.ClipData androidx.core.view.ContentInfoCompat$Compat31Impl$$InternalSyntheticApiModelOutline$1$369f13d7419cf036bec9ef6d7236efc35387a21a6d08f82fe727fee658710189$0.m(android.view.ContentInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.ContentInfoCompat$Compat31Impl$$InternalSyntheticApiModelOutline$1$ef970f20e0cfa67ecfa0368d0465008ea4bd078e48ca1576f418aa6304e5d689$0.m(android.view.ContentInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.ContentInfoCompat$Compat31Impl$$InternalSyntheticApiModelOutline$1$f1863533b38de5528ccee698ee59416a4b1953fb5ce2c4e0e697d9a62c6937fb$0.m(android.view.ContentInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$CompatImpl -> androidx.core.view.ContentInfoCompat$CompatImpl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    383:390:void <init>(androidx.core.view.ContentInfoCompat$BuilderCompatImpl) -> <init>
    401:401:android.content.ClipData getClip() -> getClip
    413:413:int getFlags() -> getFlags
    407:407:int getSource() -> getSource
    395:395:android.view.ContentInfo getWrapped() -> getWrapped
    431:436:java.lang.String toString() -> toString
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
# {"id":"sourceFile","fileName":"DisplayCutoutCompat.java"}
    112:114:void <init>(android.view.DisplayCutout) -> <init>
    191:198:boolean equals(java.lang.Object) -> equals
    127:130:int getSafeInsetBottom() -> getSafeInsetBottom
    136:139:int getSafeInsetLeft() -> getSafeInsetLeft
    145:148:int getSafeInsetRight() -> getSafeInsetRight
    118:121:int getSafeInsetTop() -> getSafeInsetTop
    203:203:int hashCode() -> hashCode
    209:209:java.lang.String toString() -> toString
    213:213:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout) -> wrap
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.DisplayCutoutCompat$$InternalSyntheticApiModelOutline$2$5995697582f938161ab89c8390e62ddcc8be8764d4286173706240625ed8d046$0.m(android.view.DisplayCutout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.DisplayCutoutCompat$Api28Impl:
# {"id":"sourceFile","fileName":"DisplayCutoutCompat.java"}
    229:229:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List) -> createDisplayCutout
    254:254:java.util.List getBoundingRects(android.view.DisplayCutout) -> getBoundingRects
    239:239:int getSafeInsetBottom(android.view.DisplayCutout) -> getSafeInsetBottom
    244:244:int getSafeInsetLeft(android.view.DisplayCutout) -> getSafeInsetLeft
    249:249:int getSafeInsetRight(android.view.DisplayCutout) -> getSafeInsetRight
    234:234:int getSafeInsetTop(android.view.DisplayCutout) -> getSafeInsetTop
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
# {"id":"sourceFile","fileName":"GravityCompat.java"}
    68:73:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    150:151:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.GravityCompat$Api17Impl -> androidx.core.view.GravityCompat$Api17Impl:
# {"id":"sourceFile","fileName":"GravityCompat.java"}
    170:171:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    176:177:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    181:182:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
# {"id":"sourceFile","fileName":"KeyEventDispatcher.java"}
    47:50:void <clinit>() -> <clinit>
    98:117:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    121:144:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    168:181:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    64:64:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    82:94:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    149:164:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.KeyEventDispatcher$Component -> androidx.core.view.KeyEventDispatcher$Component:
# {"id":"sourceFile","fileName":"KeyEventDispatcher.java"}
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
# {"id":"sourceFile","fileName":"LayoutInflaterCompat.java"}
    141:154:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
# {"id":"sourceFile","fileName":"MarginLayoutParamsCompat.java"}
    66:67:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    47:48:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    104:109:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    85:90:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MarginLayoutParamsCompat$Api17Impl -> androidx.core.view.MarginLayoutParamsCompat$Api17Impl:
# {"id":"sourceFile","fileName":"MarginLayoutParamsCompat.java"}
    208:208:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    188:188:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    183:183:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    203:203:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    220:221:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    214:215:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    198:199:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    193:194:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuHostHelper -> androidx.core.view.MenuHostHelper:
# {"id":"sourceFile","fileName":"MenuHostHelper.java"}
    56:68:void <init>(java.lang.Runnable) -> <init>
    92:95:void onCreateMenu(android.view.Menu,android.view.MenuInflater) -> onCreateMenu
    121:124:void onMenuClosed(android.view.Menu) -> onMenuClosed
    106:111:boolean onMenuItemSelected(android.view.MenuItem) -> onMenuItemSelected
    79:82:void onPrepareMenu(android.view.Menu) -> onPrepareMenu
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
# {"id":"sourceFile","fileName":"MenuItemCompat.java"}
    214:219:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    487:493:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    331:336:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    531:537:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    567:573:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    437:443:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    363:368:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$Api26Impl -> androidx.core.view.MenuItemCompat$Api26Impl:
# {"id":"sourceFile","fileName":"MenuItemCompat.java"}
    647:647:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    609:609:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    657:657:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    667:667:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    636:636:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    619:619:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    642:642:android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    604:604:android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    652:652:android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    662:662:android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    631:631:android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    625:625:android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    614:614:android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuProvider -> androidx.core.view.MenuProvider:
# {"id":"sourceFile","fileName":"MenuProvider.java"}
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
# {"id":"sourceFile","fileName":"MotionEventCompat.java"}
    555:555:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChild -> androidx.core.view.NestedScrollingChild:
# {"id":"sourceFile","fileName":"NestedScrollingChild.java"}
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
# {"id":"sourceFile","fileName":"NestedScrollingChildHelper.java"}
    56:58:void <init>(android.view.View) -> <init>
    348:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:375:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    404:410:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParent2 -> androidx.core.view.NestedScrollingParent2:
# {"id":"sourceFile","fileName":"NestedScrollingParent2.java"}
androidx.core.view.NestedScrollingParent3 -> androidx.core.view.NestedScrollingParent3:
# {"id":"sourceFile","fileName":"NestedScrollingParent3.java"}
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
# {"id":"sourceFile","fileName":"NestedScrollingParentHelper.java"}
    50:51:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    114:119:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OnApplyWindowInsetsListener -> androidx.core.view.OnApplyWindowInsetsListener:
# {"id":"sourceFile","fileName":"OnApplyWindowInsetsListener.java"}
androidx.core.view.OnReceiveContentListener -> androidx.core.view.OnReceiveContentListener:
# {"id":"sourceFile","fileName":"OnReceiveContentListener.java"}
androidx.core.view.OnReceiveContentViewBehavior -> androidx.core.view.OnReceiveContentViewBehavior:
# {"id":"sourceFile","fileName":"OnReceiveContentViewBehavior.java"}
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
# {"id":"sourceFile","fileName":"OneShotPreDrawListener.java"}
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:65:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:86:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    0:0:androidx.core.view.ContentInfoCompat $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg(androidx.core.view.ContentInfoCompat) -> $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg
      # {"id":"com.android.tools.r8.synthesized"}
    477:4541:void <clinit>() -> <clinit>
    4386:4386:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1234:1240:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1328:1335:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    2082:2090:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    2663:2664:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2584:2594:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    4184:4187:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4176:4179:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    939:944:void ensureAccessibilityDelegateCompat(android.view.View) -> ensureAccessibilityDelegateCompat
    4084:4085:int generateViewId() -> generateViewId
    928:935:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    948:951:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    959:980:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1799:1800:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4302:4302:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1364:1370:java.util.List getActionList(android.view.View) -> getActionList
    1278:1298:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    3011:3012:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    3058:3059:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3739:3740:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3861:3862:android.view.Display getDisplay(android.view.View) -> getDisplay
    2366:2367:float getElevation(android.view.View) -> getElevation
    2851:2854:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2497:2498:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1107:1108:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    788:789:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1620:1621:int getLayoutDirection(android.view.View) -> getLayoutDirection
    2048:2049:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2012:2013:int getMinimumWidth(android.view.View) -> getMinimumWidth
    2808:2811:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    1866:1867:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1850:1851:int getPaddingStart(android.view.View) -> getPaddingStart
    2641:2642:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    1407:1407:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2423:2424:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2440:2441:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3586:3587:float getZ(android.view.View) -> getZ
    914:914:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3761:3762:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2970:2971:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    993:994:boolean hasTransientState(android.view.View) -> hasTransientState
    4365:4366:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3749:3750:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3555:3556:boolean isLaidOut(android.view.View) -> isLaidOut
    3137:3138:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2983:2984:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4227:4228:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    2858:2858:androidx.core.view.ContentInfoCompat lambda$static$0(androidx.core.view.ContentInfoCompat) -> lambda$static$0
    4481:4520:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3664:3692:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3616:3644:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2556:2566:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    700:701:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4306:4306:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1208:1209:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2834:2847:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1022:1027:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1062:1067:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1085:1090:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1345:1350:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1353:1360:void removeActionWithId(int,android.view.View) -> removeActionWithId
    1319:1324:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2451:2456:void requestApplyInsets(android.view.View) -> requestApplyInsets
    529:533:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4232:4232:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    730:735:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4382:4383:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1835:1838:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    4275:4283:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2996:3001:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    3028:3047:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    3076:3095:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3724:3727:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2355:2358:void setElevation(android.view.View,float) -> setElevation
    1007:1010:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1135:1147:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    832:835:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    1561:1564:void setLabelFor(android.view.View,int) -> setLabelFor
    2536:2539:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1887:1892:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    4208:4209:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3813:3816:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2401:2409:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4523:4539:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    2719:2720:void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setWindowInsetsAnimationCallback
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3178:3183:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.core.view.ContentInfoCompat androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4233:4233:void <init>(int,java.lang.Class,int) -> <init>
    4233:4233:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4238:4238:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4233:4233:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4244:4245:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4233:4233:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4249:4249:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4307:4307:void <init>(int,java.lang.Class,int,int) -> <init>
    4307:4307:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4312:4312:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4307:4307:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4318:4319:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4307:4307:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4323:4323:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4330:4330:void <init>(int,java.lang.Class,int,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4342:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4387:4387:void <init>(int,java.lang.Class,int) -> <init>
    4387:4387:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4392:4392:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4387:4387:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4398:4399:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4387:4387:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4403:4403:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4544:4546:void <init>() -> <init>
    4572:4577:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4588:4596:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4551:4556:void onGlobalLayout() -> onGlobalLayout
    4562:4563:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4568:4568:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4600:4601:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4581:4584:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4605:4607:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4416:4418:void <init>(int,java.lang.Class,int) -> <init>
    4421:4427:void <init>(int,java.lang.Class,int,int) -> <init>
    4473:4475:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4460:4460:boolean extrasAvailable() -> extrasAvailable
    4456:4456:boolean frameworkAvailable() -> frameworkAvailable
    4444:4452:java.lang.Object get(android.view.View) -> get
    4430:4440:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api15Impl -> androidx.core.view.ViewCompat$Api15Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5257:5257:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
androidx.core.view.ViewCompat$Api16Impl -> androidx.core.view.ViewCompat$Api16Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5411:5411:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    5441:5441:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    5401:5401:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    5426:5426:int getMinimumHeight(android.view.View) -> getMinimumHeight
    5421:5421:int getMinimumWidth(android.view.View) -> getMinimumWidth
    5416:5416:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    5431:5431:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    5451:5451:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    5371:5371:boolean hasTransientState(android.view.View) -> hasTransientState
    5446:5446:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    5381:5382:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    5386:5387:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    5391:5392:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    5396:5397:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    5462:5463:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    5436:5437:void requestFitSystemWindows(android.view.View) -> requestFitSystemWindows
    5456:5457:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    5376:5377:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    5406:5407:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
androidx.core.view.ViewCompat$Api17Impl -> androidx.core.view.ViewCompat$Api17Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5314:5314:int generateViewId() -> generateViewId
    5309:5309:android.view.Display getDisplay(android.view.View) -> getDisplay
    5319:5319:int getLabelFor(android.view.View) -> getLabelFor
    5334:5334:int getLayoutDirection(android.view.View) -> getLayoutDirection
    5349:5349:int getPaddingEnd(android.view.View) -> getPaddingEnd
    5344:5344:int getPaddingStart(android.view.View) -> getPaddingStart
    5359:5359:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    5324:5325:void setLabelFor(android.view.View,int) -> setLabelFor
    5329:5330:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    5339:5340:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    5354:5355:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
androidx.core.view.ViewCompat$Api18Impl -> androidx.core.view.ViewCompat$Api18Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5202:5202:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    5192:5192:boolean isInLayout(android.view.View) -> isInLayout
    5197:5198:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
androidx.core.view.ViewCompat$Api19Impl -> androidx.core.view.ViewCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5229:5229:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    5219:5219:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    5214:5214:boolean isLaidOut(android.view.View) -> isLaidOut
    5224:5224:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    5245:5246:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    5234:5235:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    5239:5240:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.ViewCompat$Api20Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5564:5564:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets) -> dispatchApplyWindowInsets
    5559:5559:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    5554:5555:void requestApplyInsets(android.view.View) -> requestApplyInsets
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4886:4892:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4811:4817:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4897:4897:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    4903:4903:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    5006:5006:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    4999:4999:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    4958:4958:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    4963:4963:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    4943:4943:float getElevation(android.view.View) -> getElevation
    4805:4805:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4948:4948:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    4928:4928:float getTranslationZ(android.view.View) -> getTranslationZ
    4908:4908:float getZ(android.view.View) -> getZ
    4993:4993:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    4938:4938:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    4978:4978:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    4953:4954:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    4968:4969:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    4918:4919:void setElevation(android.view.View,float) -> setElevation
    4973:4974:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    4826:4875:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    4933:4934:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4923:4924:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4913:4914:void setZ(android.view.View,float) -> setZ
    4983:4983:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    4988:4989:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4840:4841:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4846:4872:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5018:5026:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    5041:5041:int getScrollIndicators(android.view.View) -> getScrollIndicators
    5031:5032:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    5036:5037:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
androidx.core.view.ViewCompat$Api26Impl -> androidx.core.view.ViewCompat$Api26Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5155:5156:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    5170:5170:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    5118:5118:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    5165:5165:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    5138:5138:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    5180:5180:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    5128:5128:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    5149:5149:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    5160:5160:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    5108:5109:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    5143:5144:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    5175:5176:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    5133:5134:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    5123:5124:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    5113:5114:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.ViewCompat$Api28Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5514:5526:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    5480:5480:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    5496:5496:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    5501:5501:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    5533:5543:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    5475:5475:java.lang.Object requireViewById(android.view.View,int) -> requireViewById
    5491:5492:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    5486:5487:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    5506:5507:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5061:5061:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    5071:5071:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    5055:5057:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    5066:5067:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.ViewCompat$Api30Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5096:5096:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    5091:5092:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
androidx.core.view.ViewCompat$Api31Impl -> androidx.core.view.ViewCompat$Api31Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    2878:2878:java.lang.String[] getReceiveContentMimeTypes(android.view.View) -> getReceiveContentMimeTypes
    2885:2894:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    2867:2873:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter -> androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    2905:2907:void <init>(androidx.core.view.OnReceiveContentListener) -> <init>
    2912:2921:android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo) -> onReceiveContent
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4614:4614:void <clinit>() -> <clinit>
    4610:4629:void <init>() -> <init>
    4639:4645:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4649:4663:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4668:4685:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4632:4635:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4727:4737:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4694:4722:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4767:4792:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    42:50:void <clinit>() -> <clinit>
    84:85:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    101:102:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    146:152:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewConfigurationCompat$Api26Impl -> androidx.core.view.ViewConfigurationCompat$Api26Impl:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    166:166:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration) -> getScaledHorizontalScrollFactor
    171:171:float getScaledVerticalScrollFactor(android.view.ViewConfiguration) -> getScaledVerticalScrollFactor
androidx.core.view.ViewConfigurationCompat$Api28Impl -> androidx.core.view.ViewConfigurationCompat$Api28Impl:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    183:183:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    189:189:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
# {"id":"sourceFile","fileName":"ViewGroupCompat.java"}
    159:160:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewGroupCompat$Api21Impl -> androidx.core.view.ViewGroupCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ViewGroupCompat.java"}
    227:227:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    222:222:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    217:218:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewGroupKt -> androidx.core.view.ViewGroupKt:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    103:105:kotlin.sequences.Sequence getChildren(android.view.ViewGroup) -> getChildren
    117:124:kotlin.sequences.Sequence getDescendants(android.view.ViewGroup) -> getDescendants
    89:94:java.util.Iterator iterator(android.view.ViewGroup) -> iterator
androidx.core.view.ViewGroupKt$children$1 -> androidx.core.view.ViewGroupKt$children$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    103:103:void <init>(android.view.ViewGroup) -> <init>
    104:104:java.util.Iterator iterator() -> iterator
androidx.core.view.ViewGroupKt$descendants$1 -> androidx.core.view.ViewGroupKt$descendants$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    117:124:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    55:56:void androidx.core.view.ViewGroupKt.forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1) -> invokeSuspend
    55:56:java.lang.Object invokeSuspend(java.lang.Object):118 -> invokeSuspend
    117:119:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    117:121:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    120:123:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    55:58:void androidx.core.view.ViewGroupKt.forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1) -> invokeSuspend
    55:58:java.lang.Object invokeSuspend(java.lang.Object):118 -> invokeSuspend
    124:124:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.core.view.ViewGroupKt$iterator$1 -> androidx.core.view.ViewGroupKt$iterator$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    89:89:void <init>(android.view.ViewGroup) -> <init>
    91:91:boolean hasNext() -> hasNext
    89:89:java.lang.Object next() -> next
    92:92:android.view.View next() -> next
    93:93:void remove() -> remove
androidx.core.view.ViewKt -> androidx.core.view.ViewKt:
# {"id":"sourceFile","fileName":"View.kt"}
    413:418:kotlin.sequences.Sequence getAllViews(android.view.View) -> getAllViews
androidx.core.view.ViewKt$allViews$1 -> androidx.core.view.ViewKt$allViews$1:
# {"id":"sourceFile","fileName":"View.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    413:418:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    418:418:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
# {"id":"sourceFile","fileName":"ViewParentCompat.java"}
    427:438:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    464:475:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    387:403:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    332:361:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    250:268:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    209:227:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    285:301:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewParentCompat$Api21Impl -> androidx.core.view.ViewParentCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ViewParentCompat.java"}
    558:558:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    563:563:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    552:553:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    547:548:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    536:537:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    531:531:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    541:542:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    0:0:void $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc
      # {"id":"com.android.tools.r8.synthesized"}
    38:47:void <init>(android.view.View) -> <init>
    148:151:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    493:496:void cancel() -> cancel
    252:255:long getDuration() -> getDuration
    830:830:void lambda$setUpdateListener$0(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> lambda$setUpdateListener$0
    132:135:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    270:273:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    778:786:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    790:810:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    305:308:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    826:836:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    687:690:void start() -> start
    196:199:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewPropertyAnimatorUpdateListener androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$0 -> f$0
    android.view.View androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$1 -> f$1
    0:0:void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.<init>(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    791:791:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    794:795:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    799:800:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    804:805:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    914:914:android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener) -> setUpdateListener
androidx.core.view.ViewPropertyAnimatorListener -> androidx.core.view.ViewPropertyAnimatorListener:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorListener.java"}
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorListenerAdapter.java"}
    29:29:void <init>() -> <init>
    51:51:void onAnimationCancel(android.view.View) -> onAnimationCancel
    36:36:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorUpdateListener -> androidx.core.view.ViewPropertyAnimatorUpdateListener:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorUpdateListener.java"}
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
# {"id":"sourceFile","fileName":"WindowCompat.java"}
    135:135:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View) -> getInsetsController
    118:123:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api16Impl -> androidx.core.view.WindowCompat$Api16Impl:
# {"id":"sourceFile","fileName":"WindowCompat.java"}
    147:156:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api30Impl -> androidx.core.view.WindowCompat$Api30Impl:
# {"id":"sourceFile","fileName":"WindowCompat.java"}
    168:169:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowInsetsAnimationCompat -> androidx.core.view.WindowInsetsAnimationCompat:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    74:82:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    86:90:void <init>(android.view.WindowInsetsAnimation) -> <init>
    168:168:long getDurationMillis() -> getDurationMillis
    148:148:float getInterpolatedFraction() -> getInterpolatedFraction
    97:97:int getTypeMask() -> getTypeMask
    524:530:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    184:185:void setFraction(float) -> setFraction
    329:329:androidx.core.view.WindowInsetsAnimationCompat toWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> toWindowInsetsAnimationCompat
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat -> androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    220:223:void <init>(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> <init>
    226:229:void <init>(android.view.WindowInsetsAnimation$Bounds) -> <init>
    252:252:androidx.core.graphics.Insets getLowerBound() -> getLowerBound
    276:276:androidx.core.graphics.Insets getUpperBound() -> getUpperBound
    312:312:android.view.WindowInsetsAnimation$Bounds toBounds() -> toBounds
    322:322:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat toBoundsCompat(android.view.WindowInsetsAnimation$Bounds) -> toBoundsCompat
    303:303:java.lang.String toString() -> toString
androidx.core.view.WindowInsetsAnimationCompat$Callback -> androidx.core.view.WindowInsetsAnimationCompat$Callback:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    371:373:void <init>(int) -> <init>
    396:396:int getDispatchMode() -> getDispatchMode
androidx.core.view.WindowInsetsAnimationCompat$Impl -> androidx.core.view.WindowInsetsAnimationCompat$Impl:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    541:545:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    568:568:long getDurationMillis() -> getDurationMillis
    556:559:float getInterpolatedFraction() -> getInterpolatedFraction
    548:548:int getTypeMask() -> getTypeMask
    576:577:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl21 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    589:590:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    648:655:int buildAnimationMask(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat) -> buildAnimationMask
    628:642:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat computeAnimationBounds(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int) -> computeAnimationBounds
    621:621:android.view.View$OnApplyWindowInsetsListener createProxyListener(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> createProxyListener
    888:902:void dispatchOnEnd(android.view.View,androidx.core.view.WindowInsetsAnimationCompat) -> dispatchOnEnd
    827:845:void dispatchOnPrepare(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,android.view.WindowInsets,boolean) -> dispatchOnPrepare
    869:884:void dispatchOnProgress(android.view.View,androidx.core.view.WindowInsetsCompat,java.util.List) -> dispatchOnProgress
    850:864:void dispatchOnStart(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> dispatchOnStart
    819:822:android.view.WindowInsets forwardToViewIfNeeded(android.view.View,android.view.WindowInsets) -> forwardToViewIfNeeded
    906:912:androidx.core.view.WindowInsetsAnimationCompat$Callback getCallback(android.view.View) -> getCallback
    662:682:androidx.core.view.WindowInsetsCompat interpolateInsets(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,float,int) -> interpolateInsets
    595:616:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    699:707:void <init>(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    712:807:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    772:772:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int,android.view.View) -> <init>
    775:783:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    786:786:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,android.view.View) -> <init>
    790:792:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    798:798:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat,android.animation.ValueAnimator) -> <init>
    801:803:void run() -> run
androidx.core.view.WindowInsetsAnimationCompat$Impl30 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    923:925:void <init>(android.view.WindowInsetsAnimation) -> <init>
    928:929:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    1043:1044:android.view.WindowInsetsAnimation$Bounds createPlatformBounds(androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> createPlatformBounds
    944:944:long getDurationMillis() -> getDurationMillis
    1054:1054:androidx.core.graphics.Insets getHigherBounds(android.view.WindowInsetsAnimation$Bounds) -> getHigherBounds
    959:959:float getInterpolatedFraction() -> getInterpolatedFraction
    1049:1049:androidx.core.graphics.Insets getLowerBounds(android.view.WindowInsetsAnimation$Bounds) -> getLowerBounds
    933:933:int getTypeMask() -> getTypeMask
    1036:1038:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    954:955:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$1$17c7d213e9f3a9aea2450fd0928d9fb76412126ce09df20f7b8e0f3b60be2269$0.m(android.view.WindowInsetsAnimation) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:float androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$1$1b5b633e4b069e19303c51950df1f4f65db540512803d07d94fb6edc61dfa268$0.m(android.view.WindowInsetsAnimation) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$1$4a7922602dbb309ace1e8eb029e25cb5704d24ac67d1cba0c249cbdd92d54f4f$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$1$55796e6725b8cc07f8deeb2f05ea9876c7384018dac28e87eb08057988a9211a$0.m(android.view.WindowInsetsAnimation) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$1$cc857fd733e0d99981c286fa71dce9dc21e8cf4f4794ba5ea9b2d8aace5789a3$0.m(android.view.WindowInsetsAnimation,float) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$2$2ef8c5fc9b2808393ada55dc1acd4524499ebcd7bc0cd27d997e5d457e0e3276$0.m(android.view.WindowInsetsAnimation$Bounds) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$2$e40bffc71123361e7f61e44f06bcfe18c31085df95c91c9c45dd31153d4b9195$0.m(android.view.WindowInsetsAnimation$Bounds) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsetsAnimation androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$7$422d911a0c39c6778d3efad07840be5d9dc3f95cfa6a0876a0a7937847e76b86$0.m(int,android.view.animation.Interpolator,long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline8 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsetsAnimation$Bounds androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$7$78b824afbe8831e69f1a146113fdbae390fb1203c2ad9a041875809b54939465$0.m(android.graphics.Insets,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline9 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsAnimationCompat$Impl30$$InternalSyntheticApiModelOutline$7$78b824afbe8831e69f1a146113fdbae390fb1203c2ad9a041875809b54939465$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    968:974:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    980:986:androidx.core.view.WindowInsetsAnimationCompat getWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> getWindowInsetsAnimationCompat
    1029:1031:void onEnd(android.view.WindowInsetsAnimation) -> onEnd
    991:992:void onPrepare(android.view.WindowInsetsAnimation) -> onPrepare
    1008:1024:android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List) -> onProgress
    999:1001:android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds) -> onStart
    999:1001:android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds) -> onStart
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsetsAnimation androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback$$InternalSyntheticApiModelOutline$2$963ad2c56bc20647b3351249786fdec455707f2662d1c597946c31b383c0c146$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:float androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback$$InternalSyntheticApiModelOutline$2$963ad2c56bc20647b3351249786fdec455707f2662d1c597946c31b383c0c146$1.m(android.view.WindowInsetsAnimation) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    78:83:void <clinit>() -> <clinit>
    88:102:void <init>(android.view.WindowInsets) -> <init>
    109:131:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    318:318:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2114:2115:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    718:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    730:730:int hashCode() -> hashCode
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1337:1344:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    286:286:boolean isConsumed() -> isConsumed
    339:341:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    1706:1707:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2110:2111:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2106:2107:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1804:1805:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:175:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    2133:2144:void <clinit>() -> <clinit>
    2150:2176:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1399:1409:void <init>() -> <init>
    1416:1426:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1613:1613:androidx.core.view.WindowInsetsCompat build() -> build
    1524:1525:androidx.core.view.WindowInsetsCompat$Builder setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1587:1588:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1442:1443:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1623:1624:void <init>() -> <init>
    1626:1628:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1672:1696:void applyInsetTypes() -> applyInsetTypes
    1644:1653:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1634:1634:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1632:1632:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1636:1636:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1712:1715:void <clinit>() -> <clinit>
    1720:1722:void <init>() -> <init>
    1725:1727:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1745:1750:androidx.core.view.WindowInsetsCompat build() -> build
    1761:1799:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1739:1740:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1731:1735:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1812:1814:void <init>() -> <init>
    1817:1822:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1857:1861:androidx.core.view.WindowInsetsCompat build() -> build
    1836:1837:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1846:1847:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1831:1832:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1826:1827:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1841:1842:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$59943e04c37930a0531d4f6494ed649568ab127f92ede377b1f504d2dcd54863$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$9d187abb3bbc9745a880878a21bef611d92809b2198c7b753440a50ba682397e$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$a7bac0df715b28c98a7dcfbd576701be30c0b9593556f6a2c1e40d1cb3582ae7$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$e2db7d8c486f2bd0b97fa630bde348b860e908278df8e0203f613641cfeefcc4$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$e9cf16e04656d3d7361528f4e1263ec758c19a703cd1553ad658eb1456381f1b$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$ee8cb0ef857f0d92636e84006869a5dab776eec7bf08e3331dcf284032d49109$0.m(android.view.WindowInsets$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$7$a11ad5c9cc549f75dd7923508d73cc514cb5aa1277eb5f6155c086e9e4374653$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$7$a11ad5c9cc549f75dd7923508d73cc514cb5aa1277eb5f6155c086e9e4374653$1.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1868:1869:void <init>() -> <init>
    1872:1873:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1877:1881:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl30$$InternalSyntheticApiModelOutline$1$3499d6110ec46cbfedbc47732ecce06d0ba82821c206f5227adffbffa697589e$0.m(android.view.WindowInsets$Builder,int,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    747:751:void <clinit>() -> <clinit>
    755:757:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    784:784:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    774:774:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    769:769:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    864:864:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    867:867:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    840:847:boolean equals(java.lang.Object) -> equals
    779:779:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    822:822:androidx.core.graphics.Insets getInsets(int) -> getInsets
    806:806:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    794:794:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    800:800:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    789:789:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    812:812:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    853:854:int hashCode() -> hashCode
    817:817:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    764:764:boolean isConsumed() -> isConsumed
    760:760:boolean isRound() -> isRound
    870:870:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    861:861:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    858:858:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    873:873:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    879:879:void <clinit>() -> <clinit>
    892:900:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:904:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1111:1116:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1086:1088:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1187:1189:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:947:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    953:1042:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    1102:1105:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1064:1071:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1126:1159:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1078:1081:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1171:1183:void loadReflectionField() -> loadReflectionField
    1164:1165:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1097:1098:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1092:1093:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1195:1199:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1195:1204:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1214:1214:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1220:1220:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1226:1233:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1208:1208:boolean isConsumed() -> isConsumed
    1238:1239:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1246:1247:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1250:1251:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1262:1262:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1267:1272:boolean equals(java.lang.Object) -> equals
    1256:1256:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1277:1277:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.DisplayCutout androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$1ac87aafd592b5506d107ed040b16d853d1a131cdb8856d2e13ed11b9a207052$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$9207719b7ce5d8db03f418025a4671b26e9b85828127b36d45b1560d40c7fc23$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1284:1290:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1284:1294:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1308:1312:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1299:1302:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1318:1321:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1327:1327:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1333:1333:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$463f5d2e905bee7a94c5e1e784176828b7f74fb1bd3f21ce4d1229a6ccfdd624$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$8f53c81c8f092140ac3e804e5c1bbe674a9a15bae1dde5747b904aef74c08e69$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$a095b61c286ceceac8def73d5e6718b1c88d3a7c271856e1785f04ff68e4f101$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$f664a1d55d0eb033fb74a33efb760cefd4a66acac9fd2d520010b680a8b11057$0.m(android.view.WindowInsets,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1350:1350:void <clinit>() -> <clinit>
    1353:1354:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1357:1358:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1387:1387:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1363:1364:androidx.core.graphics.Insets getInsets(int) -> getInsets
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$1$7c95e3cf87277cc9e90a5ee20212fa74552db1fed9bbd019afd18ee3ae455fac$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$1$f14b93863108dc0e407f09f9bde286f72e692d6f9a2448abe9587c9d544bc2bf$0.m(android.view.WindowInsets,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1949:1949:int ime() -> ime
    2026:2046:int indexOf(int) -> indexOf
    1979:1979:int mandatorySystemGestures() -> mandatorySystemGestures
    2011:2011:int systemBars() -> systemBars
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    2070:2101:int toPlatformType(int) -> toPlatformType
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$2.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$3.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$4.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$5.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$6.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$7.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.WindowInsetsControllerCompat:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    100:112:void <init>(android.view.Window,android.view.View) -> <init>
    217:218:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    193:194:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.WindowInsetsControllerCompat$Impl:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    348:350:void <init>() -> <init>
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.WindowInsetsControllerCompat$Impl20:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    403:406:void <init>(android.view.Window,android.view.View) -> <init>
    488:492:void setSystemUiFlag(int) -> setSystemUiFlag
    502:503:void setWindowFlag(int) -> setWindowFlag
    495:499:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
    506:507:void unsetWindowFlag(int) -> unsetWindowFlag
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.WindowInsetsControllerCompat$Impl23:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    554:555:void <init>(android.view.Window,android.view.View) -> <init>
    565:572:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.WindowInsetsControllerCompat$Impl26:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    579:580:void <init>(android.view.Window,android.view.View) -> <init>
    590:597:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.WindowInsetsControllerCompat$Impl30:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    613:615:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    605:621:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    682:699:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    655:672:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    803:807:void setSystemUiFlag(int) -> setSystemUiFlag
    796:800:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$1$d6fb3db9c12ac2c8a355cda7e3de6180a104013a10776c246d439dbb950c3f8b$0.m(android.view.WindowInsetsController,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsetsController androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$1$e51a200b697bfb4d6155e4ad6744e47698f53e8b6d3d57e5cc6e876a3b3d93d4$0.m(android.view.Window) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
# {"id":"sourceFile","fileName":"AccessibilityClickableSpanCompat.java"}
    55:59:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:72:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
# {"id":"sourceFile","fileName":"AccessibilityEventCompat.java"}
    381:382:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    360:363:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl:
# {"id":"sourceFile","fileName":"AccessibilityEventCompat.java"}
    463:463:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    458:459:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
    170:171:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    186:187:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
    286:286:boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListenerWrapper
    294:294:boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListenerWrapper
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
    199:201:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    210:218:boolean equals(java.lang.Object) -> equals
    205:205:int hashCode() -> hashCode
    223:224:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    1782:1782:void <clinit>() -> <clinit>
    1317:1813:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    2111:2112:void addAction(int) -> addAction
    2144:2147:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    2038:2041:void addChild(android.view.View,int) -> addChild
    2864:2879:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    4337:4360:boolean equals(java.lang.Object) -> equals
    2115:2124:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    3287:3300:java.util.List getActionList() -> getActionList
    4442:4526:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    2096:2096:int getActions() -> getActions
    2341:2342:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2373:2374:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1988:1988:int getChildCount() -> getChildCount
    2802:2802:java.lang.CharSequence getClassName() -> getClassName
    2901:2905:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2962:2962:java.lang.CharSequence getContentDescription() -> getContentDescription
    3618:3619:android.os.Bundle getExtras() -> getExtras
    2778:2778:java.lang.CharSequence getPackageName() -> getPackageName
    2826:2840:java.lang.CharSequence getText() -> getText
    3022:3025:java.lang.String getUniqueId() -> getUniqueId
    3091:3092:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2922:2922:boolean hasSpans() -> hasSpans
    4332:4332:int hashCode() -> hashCode
    2397:2397:boolean isCheckable() -> isCheckable
    2421:2421:boolean isChecked() -> isChecked
    2579:2579:boolean isClickable() -> isClickable
    2627:2627:boolean isEnabled() -> isEnabled
    2445:2445:boolean isFocusable() -> isFocusable
    2469:2469:boolean isFocused() -> isFocused
    2603:2603:boolean isLongClickable() -> isLongClickable
    2651:2651:boolean isPassword() -> isPassword
    2675:2675:boolean isScrollable() -> isScrollable
    2555:2555:boolean isSelected() -> isSelected
    4127:4128:boolean isShowingHintText() -> isShowingHintText
    1850:1850:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1878:1878:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1889:1889:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2206:2207:boolean performAction(int,android.os.Bundle) -> performAction
    3058:3059:void recycle() -> recycle
    2544:2547:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4426:4433:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2364:2365:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2388:2389:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2412:2413:void setCheckable(boolean) -> setCheckable
    2436:2437:void setChecked(boolean) -> setChecked
    2817:2818:void setClassName(java.lang.CharSequence) -> setClassName
    2594:2595:void setClickable(boolean) -> setClickable
    3195:3201:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3204:3209:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2992:2993:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2642:2643:void setEnabled(boolean) -> setEnabled
    3414:3417:void setError(java.lang.CharSequence) -> setError
    2460:2461:void setFocusable(boolean) -> setFocusable
    2484:2485:void setFocused(boolean) -> setFocused
    4184:4189:void setHeading(boolean) -> setHeading
    3393:3398:void setHintText(java.lang.CharSequence) -> setHintText
    3439:3442:void setLabelFor(android.view.View) -> setLabelFor
    3715:3718:void setMaxTextLength(int) -> setMaxTextLength
    2793:2794:void setPackageName(java.lang.CharSequence) -> setPackageName
    4060:4065:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2294:2297:void setParent(android.view.View) -> setParent
    2321:2326:void setParent(android.view.View,int) -> setParent
    4112:4117:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2690:2691:void setScrollable(boolean) -> setScrollable
    4147:4152:void setShowingHintText(boolean) -> setShowingHintText
    1925:1930:void setSource(android.view.View,int) -> setSource
    3007:3012:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2856:2857:void setText(java.lang.CharSequence) -> setText
    3876:3879:void setTraversalAfter(android.view.View) -> setTraversalAfter
    2513:2516:void setVisibleToUser(boolean) -> setVisibleToUser
    4367:4422:java.lang.String toString() -> toString
    1829:1829:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1822:1822:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$4d38159007d0b31eda46da8085292a0315e0f0fbdefb2f40a583a39f67825376$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$68f45127f60fc20923c2801f8c2a0854389ae7292b2f5c3f1ae90ffae2d9457f$0.m(android.view.accessibility.AccessibilityNodeInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$8d12ce1004cec7cc3110efed7cdf52738f26796c558e4eabb0bcd23b154c19e1$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$bb9fd610a63e02320be8d299acf7b4380bf37d6c12d8cd670fe3ab5c7e6f4dfe$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$d7f0b69eabd3b8255e511b271003f9cf6c4e31c2bb69b88140c248916e27199c$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    111:653:void <clinit>() -> <clinit>
    673:674:void <init>(int,java.lang.CharSequence) -> <init>
    687:688:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    691:692:void <init>(java.lang.Object) -> <init>
    696:697:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    701:710:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    773:773:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    784:799:boolean equals(java.lang.Object) -> equals
    718:719:int getId() -> getId
    732:733:java.lang.CharSequence getLabel() -> getLabel
    779:779:int hashCode() -> hashCode
    748:764:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$10.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline10 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$8.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline11 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$9.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$11.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$2.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$3.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$4.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$5.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline8 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$6.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline9 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$7.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    873:875:void <init>(java.lang.Object) -> <init>
    843:844:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    997:999:void <init>(java.lang.Object) -> <init>
    964:965:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    120:130:void <init>() -> <init>
    138:140:void <init>(java.lang.Object) -> <init>
    254:254:void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
    174:174:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    213:213:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    230:230:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    147:147:java.lang.Object getProvider() -> getProvider
    192:192:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    39:41:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:68:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    81:82:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    98:99:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:106:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
    515:518:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    565:568:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    145:148:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
    805:805:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    815:815:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    810:811:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    820:821:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
    792:793:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand -> androidx.core.view.accessibility.AccessibilityViewCommand:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
# {"id":"sourceFile","fileName":"PathInterpolatorCompat.java"}
    53:54:android.view.animation.Interpolator create(android.graphics.Path) -> create
    88:89:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl -> androidx.core.view.animation.PathInterpolatorCompat$Api21Impl:
# {"id":"sourceFile","fileName":"PathInterpolatorCompat.java"}
    102:102:android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path) -> createPathInterpolator
    107:107:android.view.animation.PathInterpolator createPathInterpolator(float,float) -> createPathInterpolator
    113:113:android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float) -> createPathInterpolator
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
# {"id":"sourceFile","fileName":"EditorInfoCompat.java"}
    93:93:void <clinit>() -> <clinit>
    461:467:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    472:474:boolean isPasswordInputType(int) -> isPasswordInputType
    160:169:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    237:270:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    214:219:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    485:494:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    291:341:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl -> androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl:
# {"id":"sourceFile","fileName":"EditorInfoCompat.java"}
    536:537:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    0:0:boolean $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw
      # {"id":"com.android.tools.r8.synthesized"}
    360:361:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListenerUsingPerformReceiveContent(android.view.View) -> createOnCommitContentListenerUsingPerformReceiveContent
    272:279:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    347:349:android.view.inputmethod.InputConnection createWrapper(android.view.View,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> createWrapper
    362:388:boolean lambda$createOnCommitContentListenerUsingPerformReceiveContent$0(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> lambda$createOnCommitContentListenerUsingPerformReceiveContent$0
androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda0 -> androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.f$0 -> f$0
    0:0:void androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    279:279:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    284:288:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener -> androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    175:177:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    184:184:android.net.Uri getContentUri() -> getContentUri
    194:194:android.content.ClipDescription getDescription() -> getDescription
    202:202:android.net.Uri getLinkUri() -> getLinkUri
    249:250:void requestPermission() -> requestPermission
    236:236:java.lang.Object unwrap() -> unwrap
    217:223:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    107:109:void <init>(java.lang.Object) -> <init>
    119:119:android.net.Uri getContentUri() -> getContentUri
    125:125:android.content.ClipDescription getDescription() -> getDescription
    137:137:java.lang.Object getInputContentInfo() -> getInputContentInfo
    131:131:android.net.Uri getLinkUri() -> getLinkUri
    142:143:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    195:195:void <clinit>() -> <clinit>
    138:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    756:762:void <init>() -> <init>
    831:843:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:728:void run() -> run
androidx.core.widget.CheckedTextViewCompat -> androidx.core.widget.CheckedTextViewCompat:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    121:122:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
    56:61:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    91:96:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CheckedTextViewCompat$Api16Impl -> androidx.core.widget.CheckedTextViewCompat$Api16Impl:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    163:163:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
androidx.core.widget.CheckedTextViewCompat$Api21Impl -> androidx.core.widget.CheckedTextViewCompat$Api21Impl:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    136:137:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    146:147:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
# {"id":"sourceFile","fileName":"CompoundButtonCompat.java"}
    125:126:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    73:74:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    109:110:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    59:64:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    95:100:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api21Impl -> androidx.core.widget.CompoundButtonCompat$Api21Impl:
# {"id":"sourceFile","fileName":"CompoundButtonCompat.java"}
    163:163:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    173:173:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    158:159:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    168:169:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api23Impl -> androidx.core.widget.CompoundButtonCompat$Api23Impl:
# {"id":"sourceFile","fileName":"CompoundButtonCompat.java"}
    185:185:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    69:73:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    90:93:float getDistance(android.widget.EdgeEffect) -> getDistance
    197:202:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    245:249:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.EdgeEffectCompat$Api21Impl -> androidx.core.widget.EdgeEffectCompat$Api21Impl:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    349:350:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.EdgeEffectCompat$Api31Impl:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    311:313:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    334:336:float getDistance(android.widget.EdgeEffect) -> getDistance
    324:327:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
# {"id":"sourceFile","fileName":"ImageViewCompat.java"}
    39:40:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    76:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    52:69:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    90:107:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ImageViewCompat$Api21Impl -> androidx.core.widget.ImageViewCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ImageViewCompat.java"}
    120:120:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    130:130:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    125:126:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    135:136:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
# {"id":"sourceFile","fileName":"ListViewAutoScrollHelper.java"}
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:83:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
# {"id":"sourceFile","fileName":"ListViewCompat.java"}
    39:57:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.ListViewCompat$Api19Impl -> androidx.core.widget.ListViewCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ListViewCompat.java"}
    108:108:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    103:104:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    90:210:void <clinit>() -> <clinit>
    226:227:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:257:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1899:1901:void abortAnimatedScroll() -> abortAnimatedScroll
    514:519:void addView(android.view.View) -> addView
    523:528:void addView(android.view.View,int) -> addView
    532:537:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    541:546:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1517:1563:boolean arrowScroll(int) -> arrowScroll
    1224:1226:boolean canOverScroll() -> canOverScroll
    565:572:boolean canScroll() -> canScroll
    2261:2287:int clamp(int,int,int) -> clamp
    1762:1762:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1755:1755:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1748:1748:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1798:1852:void computeScroll() -> computeScroll
    1951:2012:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1741:1741:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1734:1734:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1710:1727:int computeVerticalScrollRange() -> computeVerticalScrollRange
    1070:1089:int consumeFlingInVerticalStretch(int) -> consumeFlingInVerticalStretch
    663:663:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    340:340:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    345:345:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    295:295:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    335:335:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    264:266:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    328:328:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1592:1599:void doScrollY(int) -> doScrollY
    2209:2258:void draw(android.graphics.Canvas) -> draw
    1107:1123:boolean edgeEffectFling(int) -> edgeEffectFling
    2175:2182:void endDrag() -> endDrag
    675:713:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1338:1399:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    2163:2172:void fling(int) -> fling
    1453:1469:boolean fullScroll(int) -> fullScroll
    477:490:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    498:498:int getMaxScrollAmount() -> getMaxScrollAmount
    450:450:int getNestedScrollAxes() -> getNestedScrollAxes
    1310:1318:int getScrollRange() -> getScrollRange
    1099:1103:float getSplineFlingDistance(int) -> getSplineFlingDistance
    462:472:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1230:1241:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    282:282:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    322:322:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    717:725:boolean inChild(int,int) -> inChild
    729:734:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    502:510:void initScrollView() -> initScrollView
    737:740:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    307:307:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1571:1571:boolean isOffScreen(android.view.View) -> isOffScreen
    2147:2152:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1579:1583:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1768:1779:void measureChild(android.view.View,int,int) -> measureChild
    1784:1793:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    2118:2121:void onAttachedToWindow() -> onAttachedToWindow
    1168:1217:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    770:866:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2080:2114:void onLayout(boolean,int,int,int,int) -> onLayout
    627:658:void onMeasure(int,int) -> onMeasure
    435:440:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    445:445:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    399:400:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    429:430:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    353:354:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    393:394:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    424:425:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    380:382:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    413:414:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    357:367:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1247:1248:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    2040:2059:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2292:2301:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2306:2309:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    618:623:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1151:1164:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    2125:2141:void onSizeChanged(int,int,int,int) -> onSizeChanged
    374:374:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    407:407:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    386:388:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    418:419:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    871:1037:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1256:1306:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1415:1437:boolean pageScroll(int) -> pageScroll
    743:747:void recycleVelocityTracker() -> recycleVelocityTracker
    1866:1885:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    2017:2024:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2066:2069:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    751:755:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    2074:2076:void requestLayout() -> requestLayout
    1889:1896:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1485:1506:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    2192:2205:void scrollTo(int,int) -> scrollTo
    1909:1919:void scrollToChild(android.view.View) -> scrollToChild
    1930:1939:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    595:599:void setFillViewport(boolean) -> setFillViewport
    302:303:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    558:559:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    613:614:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    1050:1058:boolean shouldAbsorb(android.widget.EdgeEffect,int) -> shouldAbsorb
    457:457:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1608:1609:void smoothScrollBy(int,int) -> smoothScrollBy
    1631:1653:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1686:1687:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1699:1700:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    272:272:boolean startNestedScroll(int,int) -> startNestedScroll
    312:312:boolean startNestedScroll(int) -> startNestedScroll
    1138:1147:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    277:278:void stopNestedScroll(int) -> stopNestedScroll
    317:318:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2352:2352:void <init>() -> <init>
    2424:2433:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2399:2420:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2355:2394:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$Api21Impl -> androidx.core.widget.NestedScrollView$Api21Impl:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2444:2444:boolean getClipToPadding(android.view.ViewGroup) -> getClipToPadding
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> androidx.core.widget.NestedScrollView$OnScrollChangeListener:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2338:2338:void <clinit>() -> <clinit>
    2316:2317:void <init>(android.os.Parcelable) -> <init>
    2320:2322:void <init>(android.os.Parcel) -> <init>
    2333:2334:java.lang.String toString() -> toString
    2326:2328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2339:2339:void <init>() -> <init>
    2339:2339:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2342:2342:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2339:2339:java.lang.Object[] newArray(int) -> newArray
    2347:2347:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    93:113:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    157:178:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    70:83:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api19Impl -> androidx.core.widget.PopupWindowCompat$Api19Impl:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    247:248:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api23Impl -> androidx.core.widget.PopupWindowCompat$Api23Impl:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    224:224:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    234:234:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    219:220:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    229:230:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    300:301:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    794:794:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    804:804:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    990:1007:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    933:981:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    841:853:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1020:1026:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1054:1061:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    154:162:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    719:744:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    764:785:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    822:830:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    910:921:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    288:293:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    868:895:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    546:549:android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> unwrapCustomSelectionActionModeCallback
    524:534:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$Api16Impl -> androidx.core.widget.TextViewCompat$Api16Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1148:1148:boolean getIncludeFontPadding(android.widget.TextView) -> getIncludeFontPadding
    1138:1138:int getMaxLines(android.widget.TextView) -> getMaxLines
    1143:1143:int getMinLines(android.widget.TextView) -> getMinLines
androidx.core.widget.TextViewCompat$Api17Impl -> androidx.core.widget.TextViewCompat$Api17Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1111:1111:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    1094:1094:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1126:1126:int getTextDirection(android.view.View) -> getTextDirection
    1121:1121:java.util.Locale getTextLocale(android.widget.TextView) -> getTextLocale
    1089:1090:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    1100:1101:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1106:1107:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1116:1117:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.core.widget.TextViewCompat$Api23Impl -> androidx.core.widget.TextViewCompat$Api23Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1234:1234:int getBreakStrategy(android.widget.TextView) -> getBreakStrategy
    1259:1259:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1254:1254:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    1244:1244:int getHyphenationFrequency(android.widget.TextView) -> getHyphenationFrequency
    1239:1240:void setBreakStrategy(android.widget.TextView,int) -> setBreakStrategy
    1264:1265:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1269:1270:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    1249:1250:void setHyphenationFrequency(android.widget.TextView,int) -> setHyphenationFrequency
androidx.core.widget.TextViewCompat$Api24Impl -> androidx.core.widget.TextViewCompat$Api24Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1281:1281:android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale) -> getInstance
androidx.core.widget.TextViewCompat$Api28Impl -> androidx.core.widget.TextViewCompat$Api28Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1221:1221:java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols) -> getDigitStrings
    1216:1216:android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1211:1212:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    569:573:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    697:697:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    685:687:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    656:668:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    598:598:android.view.ActionMode$Callback getWrappedCallback() -> getWrappedCallback
    691:693:boolean isEditable(android.widget.TextView) -> isEditable
    672:679:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    588:588:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    577:577:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    593:594:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    582:583:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    602:625:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
    625:651:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
# {"id":"sourceFile","fileName":"TextViewOnReceiveContentListener.java"}
    49:49:void <init>() -> <init>
    94:95:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:89:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:109:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
# {"id":"sourceFile","fileName":"TextViewOnReceiveContentListener.java"}
    117:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.core.widget.TintableCompoundButton -> androidx.core.widget.TintableCompoundButton:
# {"id":"sourceFile","fileName":"TintableCompoundButton.java"}
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:275:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    469:473:void onContentChanged() -> onContentChanged
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> androidx.cursoradapter.widget.CursorFilter$CursorFilterClient:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
# {"id":"sourceFile","fileName":"ResourceCursorAdapter.java"}
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.poolingcontainer.PoolingContainer -> androidx.customview.poolingcontainer.PoolingContainer:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
    121:122:void <clinit>() -> <clinit>
    104:156:void callPoolingContainerOnRelease(android.view.View) -> callPoolingContainerOnRelease
    116:158:void callPoolingContainerOnReleaseForChildren(android.view.ViewGroup) -> callPoolingContainerOnReleaseForChildren
    144:150:androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View) -> getPoolingContainerListenerHolder
    81:82:void setPoolingContainer(android.view.View,boolean) -> setPoolingContainer
androidx.customview.poolingcontainer.PoolingContainerListener -> androidx.customview.poolingcontainer.PoolingContainerListener:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
androidx.customview.poolingcontainer.PoolingContainerListenerHolder -> androidx.customview.poolingcontainer.PoolingContainerListenerHolder:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
    124:125:void <init>() -> <init>
    136:139:void onRelease() -> onRelease
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:41:void <init>() -> <init>
    48:53:void <init>(android.os.Parcelable) -> <init>
    70:73:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    82:82:int describeContents() -> describeContents
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:88:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    100:347:void <clinit>() -> <clinit>
    104:153:void <init>(android.view.View) -> <init>
    1001:1008:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1053:1063:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    483:483:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    639:643:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    679:704:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    655:657:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    793:894:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    736:752:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:199:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:438:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    452:473:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    935:955:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    309:317:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    721:725:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    662:666:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    757:761:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1135:1135:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1123:1123:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    898:902:boolean performAction(int,int,android.os.Bundle) -> performAction
    911:921:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    907:907:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    971:990:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1019:1042:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    507:517:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    614:626:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    1245:1246:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1252:1254:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1264:1269:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1259:1259:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    326:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    283:283:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    297:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    343:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    370:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    398:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    423:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$BoundsAdapter -> androidx.customview.widget.FocusStrategy$BoundsAdapter:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
androidx.customview.widget.FocusStrategy$CollectionAdapter -> androidx.customview.widget.FocusStrategy$CollectionAdapter:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
    95:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    334:334:void <clinit>() -> <clinit>
    120:405:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    540:547:void cancel() -> cancel
    500:509:void captureChildView(android.view.View,int) -> captureChildView
    1305:1318:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1332:1345:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    699:702:int clampMag(int,int,int) -> clampMag
    716:719:float clampMag(float,float,float) -> clampMag
    819:830:void clearMotionHistory() -> clearMotionHistory
    833:844:void clearMotionHistory(int) -> clearMotionHistory
    667:685:int computeAxisDuration(int,int,int) -> computeAxisDuration
    646:663:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    764:798:boolean continueSettling(boolean) -> continueSettling
    357:357:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    371:373:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    808:816:void dispatchViewReleased(float,float) -> dispatchViewReleased
    723:725:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1453:1472:void dragTo(int,int,int,int) -> dragTo
    847:874:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1516:1524:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    626:642:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    1528:1535:int getEdgesTouched(int,int) -> getEdgesTouched
    532:532:int getTouchSlop() -> getTouchSlop
    1484:1484:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    913:913:boolean isPointerDown(int) -> isPointerDown
    1539:1545:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1497:1503:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1126:1281:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1442:1450:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1284:1302:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    877:882:void saveInitialMotion(float,float,int) -> saveInitialMotion
    885:897:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    917:925:void setDragState(int) -> setDragState
    606:613:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    992:1116:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    581:591:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    937:946:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    334:334:void <init>() -> <init>
    337:338:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    342:342:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    345:346:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    154:154:void <init>() -> <init>
    257:257:int getOrderedChildIndex(int) -> getOrderedChildIndex
    268:268:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    279:279:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    248:248:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    234:234:boolean onEdgeLock(int) -> onEdgeLock
    222:222:void onEdgeTouched(int,int) -> onEdgeTouched
    189:189:void onViewCaptured(android.view.View,int) -> onViewCaptured
androidx.databinding.BaseObservable -> androidx.databinding.BaseObservable:
# {"id":"sourceFile","fileName":"BaseObservable.java"}
androidx.databinding.DataBinderMapper -> androidx.databinding.DataBinderMapper:
# {"id":"sourceFile","fileName":"DataBinderMapper.java"}
    32:32:void <init>() -> <init>
androidx.databinding.MergedDataBinderMapper -> androidx.databinding.MergedDataBinderMapper:
# {"id":"sourceFile","fileName":"MergedDataBinderMapper.java"}
    37:48:void <init>() -> <init>
androidx.databinding.ViewDataBinding -> androidx.databinding.ViewDataBinding:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
androidx.databinding.ViewDataBinding$OnStartListener -> androidx.databinding.ViewDataBinding$OnStartListener:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
    1704:1708:void onStart() -> onStart
androidx.emoji2.text.ConcurrencyHelpers -> androidx.emoji2.text.ConcurrencyHelpers:
# {"id":"sourceFile","fileName":"ConcurrencyHelpers.java"}
    0:0:java.lang.Thread $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A(java.lang.String,java.lang.Runnable) -> $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A
      # {"id":"com.android.tools.r8.synthesized"}
    56:70:java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String) -> createBackgroundPriorityExecutor
    57:59:java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable) -> lambda$createBackgroundPriorityExecutor$0
    77:80:android.os.Handler mainHandlerAsync() -> mainHandlerAsync
androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0 -> androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.f$0 -> f$0
    0:0:void androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Thread androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl -> androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl:
# {"id":"sourceFile","fileName":"ConcurrencyHelpers.java"}
    105:105:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Handler androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl$$InternalSyntheticApiModelOutline$1$aea1171c25830ad1d1566c1c98d89d291079b80ef4fdd225a319b3c1b7beea93$0.m(android.os.Looper) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.DefaultEmojiCompatConfig -> androidx.emoji2.text.DefaultEmojiCompatConfig:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    97:98:androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context) -> create
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    119:121:void <init>(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper) -> <init>
    142:145:androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest) -> configOrNull
    234:238:java.util.List convertToByteArray(android.content.pm.Signature[]) -> convertToByteArray
    130:130:androidx.emoji2.text.EmojiCompat$Config create(android.content.Context) -> create
    219:225:androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager) -> generateFontRequestFrom
    246:249:androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi() -> getHelperForApi
    201:201:boolean hasFlagSystem(android.content.pm.ProviderInfo) -> hasFlagSystem
    183:192:android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager) -> queryDefaultInstalledContentProvider
    159:170:androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context) -> queryForDefaultFontRequest
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    262:262:void <init>() -> <init>
    270:272:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    302:302:void <init>() -> <init>
    315:315:android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo) -> getProviderInfo
    309:309:java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int) -> queryIntentContentProviders
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    325:325:void <init>() -> <init>
    338:340:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultGlyphChecker -> androidx.emoji2.text.DefaultGlyphChecker:
# {"id":"sourceFile","fileName":"DefaultGlyphChecker.java"}
    46:46:void <clinit>() -> <clinit>
    53:56:void <init>() -> <init>
    84:87:java.lang.StringBuilder getStringBuilder() -> getStringBuilder
    68:80:boolean hasGlyph(java.lang.CharSequence,int,int,int) -> hasGlyph
androidx.emoji2.text.EmojiCompat -> androidx.emoji2.text.EmojiCompat:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    349:350:void <clinit>() -> <clinit>
    459:478:void <init>(androidx.emoji2.text.EmojiCompat$Config) -> <init>
    111:111:androidx.emoji2.text.EmojiCompat$GlyphChecker access$000(androidx.emoji2.text.EmojiCompat) -> access$000
    648:652:androidx.emoji2.text.EmojiCompat get() -> get
    813:813:int getEmojiSpanIndicatorColor() -> getEmojiSpanIndicatorColor
    783:787:int getLoadState() -> getLoadState
    787:788:int getLoadState() -> getLoadState
    867:868:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    838:839:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    549:559:androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config) -> init
    593:593:boolean isConfigured() -> isConfigured
    804:804:boolean isEmojiSpanIndicatorEnabled() -> isEmojiSpanIndicatorEnabled
    795:795:boolean isInitialized() -> isInitialized
    672:681:void load() -> load
    681:685:void load() -> load
    688:700:void loadMetadata() -> loadMetadata
    719:729:void onMetadataLoadFailed(java.lang.Throwable) -> onMetadataLoadFailed
    704:715:void onMetadataLoadSuccess() -> onMetadataLoadSuccess
    956:957:java.lang.CharSequence process(java.lang.CharSequence) -> process
    991:991:java.lang.CharSequence process(java.lang.CharSequence,int,int) -> process
    1029:1029:java.lang.CharSequence process(java.lang.CharSequence,int,int,int) -> process
    1071:1106:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int) -> process
    746:758:void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> registerInitCallback
    766:773:void unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> unregisterInitCallback
    1143:1150:void updateEditorInfo(android.view.inputmethod.EditorInfo) -> updateEditorInfo
androidx.emoji2.text.EmojiCompat$CompatInternal -> androidx.emoji2.text.EmojiCompat$CompatInternal:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1566:1568:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
androidx.emoji2.text.EmojiCompat$CompatInternal19 -> androidx.emoji2.text.EmojiCompat$CompatInternal19:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1621:1622:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
    1627:1642:void loadMetadata() -> loadMetadata
    1647:1662:void onMetadataLoadSuccess(androidx.emoji2.text.MetadataRepo) -> onMetadataLoadSuccess
    1683:1683:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1688:1690:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.text.EmojiCompat$CompatInternal19$1 -> androidx.emoji2.text.EmojiCompat$CompatInternal19$1:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1627:1627:void <init>(androidx.emoji2.text.EmojiCompat$CompatInternal19) -> <init>
    1635:1636:void onFailed(java.lang.Throwable) -> onFailed
    1630:1631:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompat$Config -> androidx.emoji2.text.EmojiCompat$Config:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1300:1316:void <init>(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader) -> <init>
    1508:1508:androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader() -> getMetadataRepoLoader
    1486:1487:androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int) -> setMetadataLoadStrategy
androidx.emoji2.text.EmojiCompat$GlyphChecker -> androidx.emoji2.text.EmojiCompat$GlyphChecker:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
androidx.emoji2.text.EmojiCompat$InitCallback -> androidx.emoji2.text.EmojiCompat$InitCallback:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1175:1175:void <init>() -> <init>
    1188:1188:void onFailed(java.lang.Throwable) -> onFailed
    1181:1181:void onInitialized() -> onInitialized
androidx.emoji2.text.EmojiCompat$ListenerDispatcher -> androidx.emoji2.text.EmojiCompat$ListenerDispatcher:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1523:1525:void <init>(androidx.emoji2.text.EmojiCompat$InitCallback,int) -> <init>
    1529:1530:void <init>(java.util.Collection,int) -> <init>
    1534:1539:void <init>(java.util.Collection,int,java.lang.Throwable) -> <init>
    1543:1552:void run() -> run
    1552:1557:void run() -> run
androidx.emoji2.text.EmojiCompat$MetadataRepoLoader -> androidx.emoji2.text.EmojiCompat$MetadataRepoLoader:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback -> androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1262:1262:void <init>() -> <init>
androidx.emoji2.text.EmojiCompat$SpanFactory -> androidx.emoji2.text.EmojiCompat$SpanFactory:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1159:1159:void <init>() -> <init>
    1168:1168:androidx.emoji2.text.EmojiSpan createSpan(androidx.emoji2.text.EmojiMetadata) -> createSpan
androidx.emoji2.text.EmojiCompatInitializer -> androidx.emoji2.text.EmojiCompatInitializer:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    73:73:void <init>() -> <init>
    73:73:java.lang.Object create(android.content.Context) -> create
    87:90:java.lang.Boolean create(android.content.Context) -> create
    103:114:void delayUntilFirstResume(android.content.Context) -> delayUntilFirstResume
    128:128:java.util.List dependencies() -> dependencies
    118:120:void loadEmojiCompatAfterDelay() -> loadEmojiCompatAfterDelay
androidx.emoji2.text.EmojiCompatInitializer$1 -> androidx.emoji2.text.EmojiCompatInitializer$1:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    107:107:void <init>(androidx.emoji2.text.EmojiCompatInitializer,androidx.lifecycle.Lifecycle) -> <init>
    110:112:void onResume(androidx.lifecycle.LifecycleOwner) -> onResume
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    150:152:void <init>(android.content.Context) -> <init>
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    0:0:void $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw
      # {"id":"com.android.tools.r8.synthesized"}
    159:161:void <init>(android.content.Context) -> <init>
    174:205:void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> doLoad
    167:167:void lambda$load$0(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> lambda$load$0
    165:168:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$0 -> f$0
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$1 -> f$1
    java.util.concurrent.ThreadPoolExecutor androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$2 -> f$2
    0:0:void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.<init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    180:180:void <init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
    195:199:void onFailed(java.lang.Throwable) -> onFailed
    185:189:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable -> androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    131:131:void <init>() -> <init>
    137:144:void run() -> run
androidx.emoji2.text.EmojiMetadata -> androidx.emoji2.text.EmojiMetadata:
# {"id":"sourceFile","fileName":"EmojiMetadata.java"}
    73:73:void <clinit>() -> <clinit>
    89:95:void <init>(androidx.emoji2.text.MetadataRepo,int) -> <init>
    108:118:void draw(android.graphics.Canvas,float,float,android.graphics.Paint) -> draw
    230:230:int getCodepointAt(int) -> getCodepointAt
    237:237:int getCodepointsLength() -> getCodepointsLength
    190:190:int getHasGlyph() -> getHasGlyph
    166:166:short getHeight() -> getHeight
    152:152:int getId() -> getId
    132:145:androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem() -> getMetadataItem
    180:180:short getSdkAdded() -> getSdkAdded
    159:159:short getWidth() -> getWidth
    221:221:boolean isDefaultEmoji() -> isDefaultEmoji
    213:214:void setHasGlyph(boolean) -> setHasGlyph
    242:252:java.lang.String toString() -> toString
androidx.emoji2.text.EmojiProcessor -> androidx.emoji2.text.EmojiProcessor:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    112:118:void <init>(androidx.emoji2.text.MetadataRepo,androidx.emoji2.text.EmojiCompat$SpanFactory,androidx.emoji2.text.EmojiCompat$GlyphChecker,boolean,int[]) -> <init>
    490:492:void addEmoji(android.text.Spannable,androidx.emoji2.text.EmojiMetadata,int,int) -> addEmoji
    375:401:boolean delete(android.text.Editable,android.view.KeyEvent,boolean) -> delete
    424:477:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    353:370:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    509:515:boolean hasGlyph(java.lang.CharSequence,int,int,androidx.emoji2.text.EmojiMetadata) -> hasGlyph
    481:481:boolean hasInvalidSelection(int,int) -> hasInvalidSelection
    485:485:boolean hasModifiers(android.view.KeyEvent) -> hasModifiers
    210:327:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    257:327:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    257:327:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    327:329:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder -> androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    723:763:int findIndexBackward(java.lang.CharSequence,int,int) -> findIndexBackward
    779:822:int findIndexForward(java.lang.CharSequence,int,int) -> findIndexForward
androidx.emoji2.text.EmojiProcessor$ProcessorSm -> androidx.emoji2.text.EmojiProcessor$ProcessorSm:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    526:570:void <init>(androidx.emoji2.text.MetadataRepo$Node,boolean,int[]) -> <init>
    575:620:int check(int) -> check
    642:642:androidx.emoji2.text.EmojiMetadata getCurrentMetadata() -> getCurrentMetadata
    635:635:androidx.emoji2.text.EmojiMetadata getFlushMetadata() -> getFlushMetadata
    688:688:boolean isEmojiStyle(int) -> isEmojiStyle
    653:654:boolean isInFlushableState() -> isInFlushableState
    697:697:boolean isTextStyle(int) -> isTextStyle
    625:628:int reset() -> reset
    658:679:boolean shouldUseEmojiPresentationStyleForSingleCodepoint() -> shouldUseEmojiPresentationStyleForSingleCodepoint
androidx.emoji2.text.EmojiSpan -> androidx.emoji2.text.EmojiSpan:
# {"id":"sourceFile","fileName":"EmojiSpan.java"}
    42:78:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    110:110:androidx.emoji2.text.EmojiMetadata getMetadata() -> getMetadata
    87:101:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    120:120:int getWidth() -> getWidth
androidx.emoji2.text.FontRequestEmojiCompatConfig -> androidx.emoji2.text.FontRequestEmojiCompatConfig:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    442:442:void <clinit>() -> <clinit>
    122:123:void <init>(android.content.Context,androidx.core.provider.FontRequest) -> <init>
    148:149:androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor) -> setLoadingExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    412:412:void <init>() -> <init>
    424:424:android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo) -> buildTypeface
    417:417:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest) -> fetchFonts
    438:439:void unregisterObserver(android.content.Context,android.database.ContentObserver) -> unregisterObserver
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    208:241:void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper) -> <init>
    326:343:void cleanUp() -> cleanUp
    350:404:void createMetadata() -> createMetadata
    258:263:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
    267:279:void loadInternal() -> loadInternal
    285:296:androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo() -> retrieveFontInfo
    244:247:void setExecutor(java.util.concurrent.Executor) -> setExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.f$0 -> f$0
    0:0:void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.<init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.MetadataListReader -> androidx.emoji2.text.MetadataListReader:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    120:161:androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader) -> findOffsetInfo
    89:94:androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer) -> read
    192:192:long toUnsignedInt(int) -> toUnsignedInt
    187:187:int toUnsignedShort(short) -> toUnsignedShort
androidx.emoji2.text.MetadataListReader$ByteBufferReader -> androidx.emoji2.text.MetadataListReader$ByteBufferReader:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    315:318:void <init>(java.nio.ByteBuffer) -> <init>
    342:342:long getPosition() -> getPosition
    332:332:int readTag() -> readTag
    327:327:long readUnsignedInt() -> readUnsignedInt
    322:322:int readUnsignedShort() -> readUnsignedShort
    337:338:void skip(int) -> skip
androidx.emoji2.text.MetadataListReader$OffsetInfo -> androidx.emoji2.text.MetadataListReader$OffsetInfo:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    171:174:void <init>(long,long) -> <init>
    177:177:long getStartOffset() -> getStartOffset
androidx.emoji2.text.MetadataListReader$OpenTypeReader -> androidx.emoji2.text.MetadataListReader$OpenTypeReader:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
androidx.emoji2.text.MetadataRepo -> androidx.emoji2.text.MetadataRepo:
# {"id":"sourceFile","fileName":"MetadataRepo.java"}
    75:81:void <init>(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList) -> <init>
    160:169:void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList) -> constructIndex
    129:132:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer) -> create
    132:133:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer) -> create
    203:203:char[] getEmojiCharArray() -> getEmojiCharArray
    212:212:androidx.emoji2.text.flatbuffer.MetadataList getMetadataList() -> getMetadataList
    185:185:int getMetadataVersion() -> getMetadataVersion
    194:194:androidx.emoji2.text.MetadataRepo$Node getRootNode() -> getRootNode
    177:177:android.graphics.Typeface getTypeface() -> getTypeface
    223:228:void put(androidx.emoji2.text.EmojiMetadata) -> put
androidx.emoji2.text.MetadataRepo$Node -> androidx.emoji2.text.MetadataRepo$Node:
# {"id":"sourceFile","fileName":"MetadataRepo.java"}
    242:243:void <init>() -> <init>
    246:248:void <init>(int) -> <init>
    251:251:androidx.emoji2.text.MetadataRepo$Node get(int) -> get
    255:255:androidx.emoji2.text.EmojiMetadata getData() -> getData
    260:271:void put(androidx.emoji2.text.EmojiMetadata,int,int) -> put
androidx.emoji2.text.SpannableBuilder -> androidx.emoji2.text.SpannableBuilder:
# {"id":"sourceFile","fileName":"SpannableBuilder.java"}
    59:78:void <init>(java.lang.Class,java.lang.CharSequence) -> <init>
    59:89:void <init>(java.lang.Class,java.lang.CharSequence,int,int) -> <init>
    49:49:android.text.Editable append(char) -> append
    49:49:android.text.Editable append(java.lang.CharSequence) -> append
    49:49:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    49:49:java.lang.Appendable append(char) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    344:345:android.text.SpannableStringBuilder append(java.lang.CharSequence) -> append
    351:352:android.text.SpannableStringBuilder append(char) -> append
    360:361:android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int) -> append
    367:368:android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int) -> append
    261:262:void beginBatchEdit() -> beginBatchEdit
    277:280:void blockWatchers() -> blockWatchers
    97:97:androidx.emoji2.text.SpannableBuilder create(java.lang.Class,java.lang.CharSequence) -> create
    49:49:android.text.Editable delete(int,int) -> delete
    337:338:android.text.SpannableStringBuilder delete(int,int) -> delete
    269:271:void endBatchEdit() -> endBatchEdit
    296:299:void fireWatchers() -> fireWatchers
    205:211:int getSpanEnd(java.lang.Object) -> getSpanEnd
    219:225:int getSpanFlags(java.lang.Object) -> getSpanFlags
    191:197:int getSpanStart(java.lang.Object) -> getSpanStart
    151:160:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    247:253:androidx.emoji2.text.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object) -> getWatcherFor
    49:49:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    49:49:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    323:324:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence) -> insert
    330:331:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    108:108:boolean isWatcher(java.lang.Object) -> isWatcher
    119:119:boolean isWatcher(java.lang.Class) -> isWatcher
    233:236:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    170:184:void removeSpan(java.lang.Object) -> removeSpan
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    304:307:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence) -> replace
    314:317:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    135:141:void setSpan(java.lang.Object,int,int,int) -> setSpan
    125:125:java.lang.CharSequence subSequence(int,int) -> subSequence
    286:289:void unblockwatchers() -> unblockwatchers
androidx.emoji2.text.SpannableBuilder$WatcherWrapper -> androidx.emoji2.text.SpannableBuilder$WatcherWrapper:
# {"id":"sourceFile","fileName":"SpannableBuilder.java"}
    377:381:void <init>(java.lang.Object) -> <init>
    395:396:void afterTextChanged(android.text.Editable) -> afterTextChanged
    385:386:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    449:450:void blockCalls() -> blockCalls
    457:457:boolean isEmojiSpan(java.lang.Object) -> isEmojiSpan
    404:408:void onSpanAdded(android.text.Spannable,java.lang.Object,int,int) -> onSpanAdded
    429:446:void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int) -> onSpanChanged
    416:420:void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int) -> onSpanRemoved
    390:391:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    453:454:void unblockCalls() -> unblockCalls
androidx.emoji2.text.TypefaceEmojiSpan -> androidx.emoji2.text.TypefaceEmojiSpan:
# {"id":"sourceFile","fileName":"TypefaceEmojiSpan.java"}
    49:50:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    57:61:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    65:70:android.graphics.Paint getDebugPaint() -> getDebugPaint
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    43:50:void <init>(android.text.Spannable) -> <init>
    43:58:void <init>(java.lang.CharSequence) -> <init>
    116:116:char charAt(int) -> charAt
    135:135:java.util.stream.IntStream chars() -> chars
    142:142:java.util.stream.IntStream codePoints() -> codePoints
    61:66:void ensureSafeWrites() -> ensureSafeWrites
    96:96:int getSpanEnd(java.lang.Object) -> getSpanEnd
    101:101:int getSpanFlags(java.lang.Object) -> getSpanFlags
    91:91:int getSpanStart(java.lang.Object) -> getSpanStart
    86:86:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    69:69:android.text.Spannable getUnwrappedSpannable() -> getUnwrappedSpannable
    111:111:int length() -> length
    106:106:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    161:162:androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector precomputedTextDetector() -> precomputedTextDetector
    80:82:void removeSpan(java.lang.Object) -> removeSpan
    74:76:void setSpan(java.lang.Object,int,int,int) -> setSpan
    122:122:java.lang.CharSequence subSequence(int,int) -> subSequence
    128:128:java.lang.String toString() -> toString
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    156:156:java.util.stream.IntStream chars(java.lang.CharSequence) -> chars
    152:152:java.util.stream.IntStream codePoints(java.lang.CharSequence) -> codePoints
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    165:165:void <init>() -> <init>
    168:168:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    173:173:void <init>() -> <init>
    177:177:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28$$ExternalSyntheticApiModelOutline0 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28$$InternalSyntheticApiModelOutline$3$0535eabcabf707fca03e76263ffa10d0f88ab15da0e1454efa4a071556c73197$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.flatbuffer.MetadataItem -> androidx.emoji2.text.flatbuffer.MetadataItem:
# {"id":"sourceFile","fileName":"MetadataItem.java"}
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    41:41:int codepoints(int) -> codepoints
    42:42:int codepointsLength() -> codepointsLength
    36:36:boolean emojiStyle() -> emojiStyle
    40:40:short height() -> height
    35:35:int id() -> id
    37:37:short sdkAdded() -> sdkAdded
    39:39:short width() -> width
androidx.emoji2.text.flatbuffer.MetadataList -> androidx.emoji2.text.flatbuffer.MetadataList:
# {"id":"sourceFile","fileName":"MetadataList.java"}
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    30:30:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer) -> getRootAsMetadataList
    31:31:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList) -> getRootAsMetadataList
    37:37:androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int) -> list
    38:38:int listLength() -> listLength
    35:35:int version() -> version
androidx.emoji2.text.flatbuffer.Table -> androidx.emoji2.text.flatbuffer.Table:
# {"id":"sourceFile","fileName":"Table.java"}
    28:37:void <init>() -> <init>
    68:68:int __indirect(int) -> __indirect
    53:53:int __offset(int) -> __offset
    298:308:void __reset(int,java.nio.ByteBuffer) -> __reset
    135:136:int __vector(int) -> __vector
    123:125:int __vector_len(int) -> __vector_len
androidx.emoji2.text.flatbuffer.Utf8 -> androidx.emoji2.text.flatbuffer.Utf8:
# {"id":"sourceFile","fileName":"Utf8.java"}
    25:25:void <init>() -> <init>
    62:65:androidx.emoji2.text.flatbuffer.Utf8 getDefault() -> getDefault
androidx.emoji2.text.flatbuffer.Utf8Safe -> androidx.emoji2.text.flatbuffer.Utf8Safe:
# {"id":"sourceFile","fileName":"Utf8Safe.java"}
    63:63:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper -> androidx.emoji2.viewsintegration.EmojiEditTextHelper:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    73:112:void <init>(android.widget.EditText,boolean) -> <init>
    155:155:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    173:174:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    227:228:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    231:231:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    265:270:void <init>(android.widget.EditText,boolean) -> <init>
    284:299:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    305:310:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    315:320:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditableFactory -> androidx.emoji2.viewsintegration.EmojiEditableFactory:
# {"id":"sourceFile","fileName":"EmojiEditableFactory.java"}
    44:44:void <clinit>() -> <clinit>
    51:58:void <init>() -> <init>
    62:69:android.text.Editable$Factory getInstance() -> getInstance
    74:77:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
androidx.emoji2.viewsintegration.EmojiInputConnection -> androidx.emoji2.viewsintegration.EmojiInputConnection:
# {"id":"sourceFile","fileName":"EmojiInputConnection.java"}
    49:50:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> <init>
    58:62:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper) -> <init>
    66:68:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    74:76:boolean deleteSurroundingTextInCodePoints(int,int) -> deleteSurroundingTextInCodePoints
    80:80:android.text.Editable getEditable() -> getEditable
androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper -> androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper:
# {"id":"sourceFile","fileName":"EmojiInputConnection.java"}
    83:83:void <init>() -> <init>
    90:90:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    95:98:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.viewsintegration.EmojiInputFilter -> androidx.emoji2.viewsintegration.EmojiInputFilter:
# {"id":"sourceFile","fileName":"EmojiInputFilter.java"}
    49:51:void <init>(android.widget.TextView) -> <init>
    56:88:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    93:96:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    163:170:void updateSelection(android.text.Spannable,int,int) -> updateSelection
androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl:
# {"id":"sourceFile","fileName":"EmojiInputFilter.java"}
    105:108:void <init>(android.widget.TextView,androidx.emoji2.viewsintegration.EmojiInputFilter) -> <init>
    144:158:boolean isInputFilterCurrentlyRegisteredOnTextView(android.widget.TextView,android.text.InputFilter) -> isInputFilterCurrentlyRegisteredOnTextView
    112:140:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiKeyListener -> androidx.emoji2.viewsintegration.EmojiKeyListener:
# {"id":"sourceFile","fileName":"EmojiKeyListener.java"}
    40:41:void <init>(android.text.method.KeyListener) -> <init>
    44:47:void <init>(android.text.method.KeyListener,androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper) -> <init>
    73:74:void clearMetaKeyState(android.view.View,android.text.Editable,int) -> clearMetaKeyState
    51:51:int getInputType() -> getInputType
    56:58:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyDown
    68:68:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent) -> onKeyOther
    63:63:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyUp
androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper -> androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper:
# {"id":"sourceFile","fileName":"EmojiKeyListener.java"}
    76:76:void <init>() -> <init>
    79:79:boolean handleKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleKeyDown
androidx.emoji2.viewsintegration.EmojiTextViewHelper -> androidx.emoji2.viewsintegration.EmojiTextViewHelper:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    96:105:void <init>(android.widget.TextView,boolean) -> <init>
    132:132:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    173:174:void setAllCaps(boolean) -> setAllCaps
    163:164:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    184:184:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    322:326:void <init>(android.widget.TextView) -> <init>
    365:374:android.text.InputFilter[] addEmojiInputFilterIfMissing(android.text.InputFilter[]) -> addEmojiInputFilterIfMissing
    409:415:android.util.SparseArray getEmojiInputFilterPositionArray(android.text.InputFilter[]) -> getEmojiInputFilterPositionArray
    349:353:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    385:401:android.text.InputFilter[] removeEmojiInputFilterIfPresent(android.text.InputFilter[]) -> removeEmojiInputFilterIfPresent
    465:468:void setAllCaps(boolean) -> setAllCaps
    472:475:void setEnabled(boolean) -> setEnabled
    491:492:void setEnabledUnsafe(boolean) -> setEnabledUnsafe
    435:440:android.text.method.TransformationMethod unwrapForDisabled(android.text.method.TransformationMethod) -> unwrapForDisabled
    342:344:void updateFilters() -> updateFilters
    333:336:void updateTransformationMethod() -> updateTransformationMethod
    452:457:android.text.method.TransformationMethod wrapForEnabled(android.text.method.TransformationMethod) -> wrapForEnabled
    422:425:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    232:234:void <init>(android.widget.TextView) -> <init>
    261:264:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    289:293:void setAllCaps(boolean) -> setAllCaps
    303:308:void setEnabled(boolean) -> setEnabled
    237:237:boolean skipBecauseEmojiCompatNotInitialized() -> skipBecauseEmojiCompatNotInitialized
androidx.emoji2.viewsintegration.EmojiTextWatcher -> androidx.emoji2.viewsintegration.EmojiTextWatcher:
# {"id":"sourceFile","fileName":"EmojiTextWatcher.java"}
    44:53:void <init>(android.widget.EditText,boolean) -> <init>
    109:109:void afterTextChanged(android.text.Editable) -> afterTextChanged
    104:104:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    112:115:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    74:95:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    151:162:void processTextOnEnablingEvent(android.widget.EditText,int) -> processTextOnEnablingEvent
    123:132:void setEnabled(boolean) -> setEnabled
    98:98:boolean shouldSkipForDisabledOrNotConfigured() -> shouldSkipForDisabledOrNotConfigured
androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl:
# {"id":"sourceFile","fileName":"EmojiTextWatcher.java"}
    138:140:void <init>(android.widget.EditText) -> <init>
    144:147:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiTransformationMethod -> androidx.emoji2.viewsintegration.EmojiTransformationMethod:
# {"id":"sourceFile","fileName":"EmojiTransformationMethod.java"}
    39:41:void <init>(android.text.method.TransformationMethod) -> <init>
    81:81:android.text.method.TransformationMethod getOriginalTransformationMethod() -> getOriginalTransformationMethod
    45:64:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    70:74:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
# {"id":"sourceFile","fileName":"BackStackRecord.java"}
    38:142:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:281:void bumpBackStackNesting(int) -> bumpBackStackNesting
    294:294:int commit() -> commit
    299:299:int commitAllowingStateLoss() -> commitAllowingStateLoss
    315:330:int commitInternal(boolean) -> commitInternal
    304:306:void commitNow() -> commitNow
    310:312:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    183:185:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    62:135:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:461:void executeOps() -> executeOps
    471:529:void executePopOps(boolean) -> executePopOps
    555:620:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:354:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    687:687:java.lang.String getName() -> getName
    358:366:boolean interactsWith(int) -> interactsWith
    370:394:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    679:681:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    660:666:boolean isPostponed() -> isPostponed
    190:195:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    284:290:void runOnCommitRunnables() -> runOnCommitRunnables
    670:676:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    42:54:java.lang.String toString() -> toString
    634:656:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
# {"id":"sourceFile","fileName":"BackStackState.java"}
    169:169:void <clinit>() -> <clinit>
    48:81:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:98:void <init>(android.os.Parcel) -> <init>
    148:148:int describeContents() -> describeContents
    101:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    153:167:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
# {"id":"sourceFile","fileName":"BackStackState.java"}
    170:170:void <init>() -> <init>
    170:170:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    173:173:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:java.lang.Object[] newArray(int) -> newArray
    178:178:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    52:53:void <init>(android.view.ViewGroup) -> <init>
    742:744:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    697:717:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    59:127:void executeOperations(java.util.List,boolean) -> executeOperations
    724:738:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    679:686:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:281:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    288:606:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
    606:667:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:110:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:191:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:201:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:262:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    266:266:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    248:248:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:260:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:278:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    454:454:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    457:460:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    485:485:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    488:490:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:582:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    639:639:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    642:643:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    783:791:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean) -> <init>
    795:803:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    752:755:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    776:777:void completeSpecialEffect() -> completeSpecialEffect
    759:759:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    764:764:androidx.core.os.CancellationSignal getSignal() -> getSignal
    768:771:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    817:845:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    867:879:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    884:896:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    862:862:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    849:849:java.lang.Object getTransition() -> getTransition
    857:857:boolean hasSharedElementTransition() -> hasSharedElementTransition
    853:853:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    107:189:void <init>() -> <init>
    60:60:android.app.Dialog access$000(androidx.fragment.app.DialogFragment) -> access$000
    60:60:android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment) -> access$100
    60:60:boolean access$200(androidx.fragment.app.DialogFragment) -> access$200
    505:506:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    321:358:void dismissInternal(boolean,boolean) -> dismissInternal
    367:367:android.app.Dialog getDialog() -> getDialog
    388:388:int getTheme() -> getTheme
    445:452:void onAttach(android.content.Context) -> onAttach
    620:620:void onCancel(android.content.DialogInterface) -> onCancel
    471:484:void onCreate(android.os.Bundle) -> onCreate
    612:615:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    737:756:void onDestroyView() -> onDestroyView
    457:465:void onDetach() -> onDetach
    624:634:void onDismiss(android.content.DialogInterface) -> onDismiss
    525:528:android.view.View onFindViewById(int) -> onFindViewById
    545:567:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    532:532:boolean onHasView() -> onHasView
    699:720:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    683:694:void onStart() -> onStart
    725:729:void onStop() -> onStop
    671:678:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    489:500:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    637:664:void prepareDialog(android.os.Bundle) -> prepareDialog
    664:666:void prepareDialog(android.os.Bundle) -> prepareDialog
    379:383:android.app.Dialog requireDialog() -> requireDialog
    573:585:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    107:107:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    111:112:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    116:116:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    120:123:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    127:127:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    131:134:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$4 -> androidx.fragment.app.DialogFragment$4:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    143:143:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    143:143:void onChanged(java.lang.Object) -> onChanged
    147:161:void onChanged(androidx.lifecycle.LifecycleOwner) -> onChanged
androidx.fragment.app.DialogFragment$5 -> androidx.fragment.app.DialogFragment$5:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    506:506:void <init>(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer) -> <init>
    510:513:android.view.View onFindViewById(int) -> onFindViewById
    518:518:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
# {"id":"sourceFile","fileName":"Fragment.java"}
    122:122:void <clinit>() -> <clinit>
    134:538:void <init>() -> <init>
    2758:2788:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2896:2896:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2802:2884:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3263:3266:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2888:2891:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    914:914:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2613:2614:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2638:2639:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3374:3377:android.view.View getAnimatingAway() -> getAnimatingAway
    3389:3392:android.animation.Animator getAnimator() -> getAnimator
    735:735:android.os.Bundle getArguments() -> getArguments
    1074:1077:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    887:887:android.content.Context getContext() -> getContext
    3280:3283:int getEnterAnim() -> getEnterAnim
    2396:2399:java.lang.Object getEnterTransition() -> getEnterTransition
    3360:3363:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    3287:3290:int getExitAnim() -> getExitAnim
    2475:2478:java.lang.Object getExitTransition() -> getExitTransition
    3367:3370:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3411:3414:android.view.View getFocusedView() -> getFocusedView
    941:941:java.lang.Object getHost() -> getHost
    1672:1678:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3322:3325:int getNextTransition() -> getNextTransition
    1086:1086:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1038:1043:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3308:3311:boolean getPopDirection() -> getPopDirection
    3294:3297:int getPopEnterAnim() -> getPopEnterAnim
    3301:3304:int getPopExitAnim() -> getPopExitAnim
    3400:3403:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2513:2517:java.lang.Object getReenterTransition() -> getReenterTransition
    964:964:android.content.res.Resources getResources() -> getResources
    2435:2439:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2546:2549:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2584:2589:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3338:3341:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3346:3349:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    986:986:java.lang.String getString(int) -> getString
    855:863:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    1951:1951:android.view.View getView() -> getView
    381:381:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    672:672:int hashCode() -> hashCode
    568:573:void initLifecycle() -> initLifecycle
    2164:2180:void initState() -> initState
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    3425:3428:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1197:1198:boolean isMenuVisible() -> isMenuVisible
    3418:3421:boolean isPostponed() -> isPostponed
    1134:1134:boolean isRemoving() -> isRemoving
    1143:1144:boolean isRemovingParent() -> isRemovingParent
    762:765:boolean isStateSaved() -> isStateSaved
    3052:3053:void noteStateNotSaved() -> noteStateNotSaved
    1996:1997:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1489:1494:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1779:1785:void onAttach(android.content.Context) -> onAttach
    1798:1799:void onAttach(android.app.Activity) -> onAttach
    1769:1769:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    2085:2086:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2343:2343:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1866:1871:void onCreate(android.os.Bundle) -> onCreate
    1819:1819:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1841:1841:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    2295:2296:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2207:2207:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1923:1926:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2154:2155:void onDestroy() -> onDestroy
    2236:2236:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    2144:2145:void onDestroyView() -> onDestroyView
    2189:2190:void onDetach() -> onDetach
    1622:1622:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1209:1209:void onHiddenChanged(boolean) -> onHiddenChanged
    1727:1733:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1747:1748:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2129:2130:void onLowMemory() -> onLowMemory
    2070:2070:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    2259:2259:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    2272:2272:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    2111:2112:void onPause() -> onPause
    2080:2080:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    2225:2225:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    2101:2101:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1591:1591:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    2035:2036:void onResume() -> onResume
    2059:2059:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    2023:2024:void onStart() -> onStart
    2122:2123:void onStop() -> onStop
    1941:1941:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    2012:2013:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2993:3003:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2915:2929:void performAttach() -> performAttach
    3077:3079:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3132:3138:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2932:2956:void performCreate(android.os.Bundle) -> performCreate
    3096:3104:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2960:2982:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3214:3224:void performDestroy() -> performDestroy
    3193:3211:void performDestroyView() -> performDestroyView
    3227:3243:void performDetach() -> performDetach
    1654:1655:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3082:3084:void performLowMemory() -> performLowMemory
    3067:3069:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3120:3128:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3142:3148:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3161:3173:void performPause() -> performPause
    3072:3074:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3108:3116:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3056:3064:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3035:3049:void performResume() -> performResume
    3151:3157:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3017:3031:void performStart() -> performStart
    3177:3189:void performStop() -> performStop
    2987:2989:void performViewCreated() -> performViewCreated
    926:930:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    898:902:android.content.Context requireContext() -> requireContext
    1962:1967:android.view.View requireView() -> requireView
    1886:1894:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:655:void restoreViewState(android.os.Bundle) -> restoreViewState
    3006:3013:void restoreViewState() -> restoreViewState
    3381:3382:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3270:3277:void setAnimations(int,int,int,int) -> setAnimations
    3385:3386:void setAnimator(android.animation.Animator) -> setAnimator
    723:727:void setArguments(android.os.Bundle) -> setArguments
    3407:3408:void setFocusedView(android.view.View) -> setFocusedView
    3432:3433:void setHideReplaced(boolean) -> setHideReplaced
    3329:3334:void setNextTransition(int) -> setNextTransition
    3246:3260:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3315:3319:void setPopDirection(boolean) -> setPopDirection
    3396:3397:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    3354:3357:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2731:2747:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:695:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
# {"id":"sourceFile","fileName":"Fragment.java"}
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:260:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
# {"id":"sourceFile","fileName":"Fragment.java"}
    2738:2738:void <init>(androidx.fragment.app.Fragment) -> <init>
    2741:2742:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
# {"id":"sourceFile","fileName":"Fragment.java"}
    2777:2777:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2780:2781:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
# {"id":"sourceFile","fileName":"Fragment.java"}
    2896:2896:void <init>(androidx.fragment.app.Fragment) -> <init>
    2900:2904:android.view.View onFindViewById(int) -> onFindViewById
    2909:2909:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
# {"id":"sourceFile","fileName":"Fragment.java"}
    2936:2936:void <init>(androidx.fragment.app.Fragment) -> <init>
    2940:2945:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
# {"id":"sourceFile","fileName":"Fragment.java"}
    3558:3597:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
# {"id":"sourceFile","fileName":"Fragment.java"}
    516:517:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
# {"id":"sourceFile","fileName":"Fragment.java"}
androidx.fragment.app.Fragment$OnStartEnterTransitionListener -> androidx.fragment.app.Fragment$OnStartEnterTransitionListener:
# {"id":"sourceFile","fileName":"Fragment.java"}
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    84:105:void <init>() -> <init>
    319:319:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    562:576:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    608:608:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    125:153:void init() -> init
    823:825:void markFragmentsCreated() -> markFragmentsCreated
    828:848:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:165:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    600:600:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    261:264:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    273:277:void onCreate(android.os.Bundle) -> onCreate
    286:291:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    298:302:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    309:313:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    329:332:void onDestroy() -> onDestroy
    341:343:void onLowMemory() -> onLowMemory
    352:364:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:236:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    409:411:void onNewIntent(android.content.Intent) -> onNewIntent
    375:379:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    388:392:void onPause() -> onPause
    251:252:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    446:448:void onPostResume() -> onPostResume
    485:485:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    469:474:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    635:637:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    433:437:void onResume() -> onResume
    457:459:void onResumeFragments() -> onResumeFragments
    495:511:void onStart() -> onStart
    421:422:void onStateNotSaved() -> onStateNotSaved
    520:527:void onStop() -> onStop
    628:628:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:137:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:151:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    724:726:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    816:816:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    735:735:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    747:747:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    741:741:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    798:799:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    804:804:android.view.View onFindViewById(int) -> onFindViewById
    719:719:java.lang.Object onGetHost() -> onGetHost
    769:769:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    764:764:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    809:810:boolean onHasView() -> onHasView
    758:758:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    774:775:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    146:211:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    121:131:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean) -> getNextAnim
    46:117:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean) -> loadAnimation
    215:227:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    150:150:void <init>(androidx.fragment.app.Fragment) -> <init>
    153:159:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    166:166:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    176:185:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    189:189:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    169:169:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    176:176:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    179:183:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    195:195:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    198:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    237:243:void <init>(android.view.animation.Animation) -> <init>
    245:251:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    265:276:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    280:289:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    295:304:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    309:317:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
# {"id":"sourceFile","fileName":"FragmentContainer.java"}
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
# {"id":"sourceFile","fileName":"FragmentContainerView.java"}
    120:121:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    109:146:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:183:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    395:401:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    308:314:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    326:331:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    235:246:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
    251:257:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    261:268:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    284:292:void endViewTransition(android.view.View) -> endViewTransition
    223:223:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    373:378:void removeAllViewsInLayout() -> removeAllViewsInLayout
    382:386:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    349:351:void removeView(android.view.View) -> removeView
    336:339:void removeViewAt(int) -> removeViewAt
    343:345:void removeViewInLayout(android.view.View) -> removeViewInLayout
    355:360:void removeViews(int,int) -> removeViews
    364:369:void removeViewsInLayout(int,int) -> removeViewsInLayout
    296:297:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    201:209:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    216:217:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    273:280:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
# {"id":"sourceFile","fileName":"FragmentController.java"}
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:118:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:252:void dispatchActivityCreated() -> dispatchActivityCreated
    367:368:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:241:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:335:void dispatchDestroy() -> dispatchDestroy
    379:380:void dispatchLowMemory() -> dispatchLowMemory
    345:346:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:441:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:285:void dispatchPause() -> dispatchPause
    356:357:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    273:274:void dispatchResume() -> dispatchResume
    262:263:void dispatchStart() -> dispatchStart
    295:296:void dispatchStop() -> dispatchStop
    451:451:boolean execPendingActions() -> execPendingActions
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:143:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    193:199:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
# {"id":"sourceFile","fileName":"FragmentFactory.java"}
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    70:73:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:56:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
# {"id":"sourceFile","fileName":"FragmentHostCallback.java"}
    91:92:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:100:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
# {"id":"sourceFile","fileName":"FragmentLayoutInflaterFactory.java"}
    36:38:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
# {"id":"sourceFile","fileName":"FragmentLayoutInflaterFactory.java"}
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:167:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    170:170:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
# {"id":"sourceFile","fileName":"FragmentLifecycleCallbacksDispatcher.java"}
    46:55:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:167:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:118:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:150:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:283:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:297:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:225:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:103:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:134:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:211:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:255:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:197:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:239:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:183:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:269:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder:
# {"id":"sourceFile","fileName":"FragmentLifecycleCallbacksDispatcher.java"}
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    97:99:void <clinit>() -> <clinit>
    96:521:void <init>() -> <init>
    96:96:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    96:96:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    96:96:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2458:2471:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2568:2572:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    833:837:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1708:1722:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3417:3418:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    1920:1920:int allocBackStackIndex() -> allocBackStackIndex
    2829:2972:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1790:1801:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    575:575:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1485:1494:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3446:3455:boolean checkForMenus() -> checkForMenus
    1843:1847:void checkStateLoss() -> checkStateLoss
    1987:1990:void cleanupExec() -> cleanupExec
    2512:2521:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2240:2254:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2345:2381:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1536:1582:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1694:1704:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1510:1519:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1774:1787:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3069:3073:void dispatchActivityCreated() -> dispatchActivityCreated
    3051:3055:void dispatchAttach() -> dispatchAttach
    3158:3163:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3235:3245:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3058:3062:void dispatchCreate() -> dispatchCreate
    3174:3202:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3104:3122:void dispatchDestroy() -> dispatchDestroy
    3100:3101:void dispatchDestroyView() -> dispatchDestroyView
    3166:3171:void dispatchLowMemory() -> dispatchLowMemory
    3142:3147:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3427:3430:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3221:3231:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3249:3257:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3272:3275:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3090:3091:void dispatchPause() -> dispatchPause
    3150:3155:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3206:3217:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3278:3281:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3083:3087:void dispatchResume() -> dispatchResume
    3076:3080:void dispatchStart() -> dispatchStart
    3126:3139:void dispatchStateChange(int) -> dispatchStateChange
    3094:3097:void dispatchStop() -> dispatchStop
    3065:3066:void dispatchViewCreated() -> dispatchViewCreated
    2553:2557:void doPendingDeferredStart() -> doPendingDeferredStart
    1208:1289:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2496:2509:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1875:1897:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1930:1960:void ensureExecReady(boolean) -> ensureExecReady
    1996:2013:boolean execPendingActions(boolean) -> execPendingActions
    1963:1974:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    1974:1980:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2393:2407:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2120:2236:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2022:2052:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1839:1839:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    1813:1813:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1830:1830:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1834:1834:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2477:2489:void forcePostponedTransactions() -> forcePostponedTransactions
    2536:2549:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    797:797:int getBackStackEntryCount() -> getBackStackEntryCount
    1100:1100:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2817:2817:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    2430:2448:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3334:3344:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2822:2822:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1090:1090:java.util.List getFragments() -> getFragments
    2807:2807:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3487:3487:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3382:3382:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2812:2812:androidx.fragment.app.Fragment getParent() -> getParent
    3297:3297:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3367:3377:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1013:1017:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1095:1095:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    661:674:void handleOnBackPressed() -> handleOnBackPressed
    1747:1755:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3463:3466:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1169:1169:boolean isDestroyed() -> isDestroyed
    141:141:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3459:3459:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    648:652:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    630:640:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1309:1309:boolean isStateAtLeast(int) -> isStateAtLeast
    1864:1864:boolean isStateSaved() -> isStateSaved
    2265:2274:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1591:1624:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1314:1480:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1522:1523:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1636:1675:void moveToState(int,boolean) -> moveToState
    2978:2989:void noteStateNotSaved() -> noteStateNotSaved
    1022:1031:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1292:1306:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    737:741:void popBackStack(int,int) -> popBackStack
    692:692:boolean popBackStackImmediate() -> popBackStackImmediate
    764:784:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    784:790:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2577:2628:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2291:2324:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    847:857:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1726:1738:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    2070:2108:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2560:2565:void reportBackStackChanged() -> reportBackStackChanged
    2707:2803:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    3469:3481:int reverseTransit(int) -> reverseTransit
    2647:2692:android.os.Parcelable saveAllState() -> saveAllState
    1907:1917:void scheduleCommit() -> scheduleCommit
    1501:1507:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3301:3307:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3260:3269:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2416:2426:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1764:1771:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1679:1682:void startPendingDeferredFragments() -> startPendingDeferredFragments
    1175:1195:java.lang.String toString() -> toString
    609:620:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    433:433:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    436:437:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2913:2913:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2913:2913:void onActivityResult(java.lang.Object) -> onActivityResult
    2916:2934:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2939:2939:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2939:2939:void onActivityResult(java.lang.Object) -> onActivityResult
    2943:2969:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    451:451:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    460:463:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    455:456:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    478:478:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    483:483:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    488:488:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    492:492:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    521:521:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    524:525:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    891:906:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1550:1550:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1553:1558:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2837:2837:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2842:2843:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2885:2885:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2885:2885:void onActivityResult(java.lang.Object) -> onActivityResult
    2888:2907:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3656:3656:void <init>() -> <init>
    3656:3656:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    3662:3681:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest) -> createIntent
    3656:3656:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3687:3687:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3642:3642:void <clinit>() -> <clinit>
    3626:3629:void <init>(android.os.Parcel) -> <init>
    3633:3633:int describeContents() -> describeContents
    3638:3640:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3643:3643:void <init>() -> <init>
    3643:3643:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3646:3646:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3643:3643:java.lang.Object[] newArray(int) -> newArray
    3651:3651:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$OnBackStackChangedListener -> androidx.fragment.app.FragmentManager$OnBackStackChangedListener:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
androidx.fragment.app.FragmentManager$OpGenerator -> androidx.fragment.app.FragmentManager$OpGenerator:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3519:3523:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    3528:3538:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3553:3556:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3612:3613:void cancelTransaction() -> cancelTransaction
    3596:3605:void completeTransaction() -> completeTransaction
    3586:3586:boolean isReady() -> isReady
    3565:3570:void onStartEnterTransition() -> onStartEnterTransition
    3579:3580:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
# {"id":"sourceFile","fileName":"FragmentManagerImpl.java"}
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
# {"id":"sourceFile","fileName":"FragmentManagerState.java"}
    68:68:void <clinit>() -> <clinit>
    32:38:void <init>() -> <init>
    32:49:void <init>(android.os.Parcel) -> <init>
    53:53:int describeContents() -> describeContents
    58:66:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
# {"id":"sourceFile","fileName":"FragmentManagerState.java"}
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
# {"id":"sourceFile","fileName":"FragmentManagerViewModel.java"}
    40:40:void <clinit>() -> <clinit>
    57:88:void <init>(boolean) -> <init>
    112:125:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:202:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    274:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:173:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:183:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:289:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:105:void onCleared() -> onCleared
    154:164:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:97:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
# {"id":"sourceFile","fileName":"FragmentManagerViewModel.java"}
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentOnAttachListener -> androidx.fragment.app.FragmentOnAttachListener:
# {"id":"sourceFile","fileName":"FragmentOnAttachListener.java"}
androidx.fragment.app.FragmentResultListener -> androidx.fragment.app.FragmentResultListener:
# {"id":"sourceFile","fileName":"FragmentResultListener.java"}
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
# {"id":"sourceFile","fileName":"FragmentState.java"}
    131:131:void <clinit>() -> <clinit>
    43:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    58:72:void <init>(android.os.Parcel) -> <init>
    111:111:int describeContents() -> describeContents
    77:106:java.lang.String toString() -> toString
    116:129:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
# {"id":"sourceFile","fileName":"FragmentState.java"}
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
# {"id":"sourceFile","fileName":"FragmentStateManager.java"}
    51:66:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    51:112:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    51:145:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    577:583:void activityCreated() -> activityCreated
    832:834:void addViewToContainer() -> addViewToContainer
    428:466:void attach() -> attach
    170:254:int computeExpectedState() -> computeExpectedState
    469:482:void create() -> create
    485:574:void createView() -> createView
    754:806:void destroy() -> destroy
    733:751:void destroyFragmentView() -> destroyFragmentView
    809:826:void detach() -> detach
    382:398:void ensureInflatedView() -> ensureInflatedView
    149:149:androidx.fragment.app.Fragment getFragment() -> getFragment
    615:625:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    258:379:void moveToExpectedState() -> moveToExpectedState
    629:634:void pause() -> pause
    401:425:void restoreState(java.lang.ClassLoader) -> restoreState
    594:612:void resume() -> resume
    681:713:android.os.Bundle saveBasicState() -> saveBasicState
    646:668:androidx.fragment.app.FragmentState saveState() -> saveState
    717:730:void saveViewState() -> saveViewState
    159:160:void setFragmentManagerState(int) -> setFragmentManagerState
    586:591:void start() -> start
    637:642:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
# {"id":"sourceFile","fileName":"FragmentStateManager.java"}
    534:534:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    537:539:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    543:543:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
# {"id":"sourceFile","fileName":"FragmentStateManager.java"}
    177:177:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
# {"id":"sourceFile","fileName":"FragmentStore.java"}
    34:38:void <init>() -> <init>
    90:97:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:168:void burpActive() -> burpActive
    291:291:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:105:void dispatchStateChange(int) -> dispatchStateChange
    371:400:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    314:318:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    247:262:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    267:287:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    301:309:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    339:366:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    208:214:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    229:237:java.util.List getActiveFragments() -> getActiveFragments
    296:296:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    219:224:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:87:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:156:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:129:void moveToExpectedState() -> moveToExpectedState
    132:136:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:52:void resetActiveFragments() -> resetActiveFragments
    55:68:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:185:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:44:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
# {"id":"sourceFile","fileName":"FragmentTransaction.java"}
    94:129:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    234:235:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    240:241:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    132:137:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    682:687:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    245:277:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    357:359:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    293:293:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    340:344:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    782:783:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
# {"id":"sourceFile","fileName":"FragmentTransaction.java"}
    73:74:void <init>() -> <init>
    76:81:void <init>(int,androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    48:81:void <clinit>() -> <clinit>
    695:701:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1261:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1130:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:217:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1150:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1029:1046:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:523:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:933:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:868:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:514:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1052:1067:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:811:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:643:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    614:681:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:416:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:297:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1271:1275:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    940:946:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    554:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    567:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:971:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    540:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1090:1111:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:335:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:92:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1013:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:464:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:998:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1074:1081:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:167:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:279:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:332:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:400:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:462:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:679:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:808:void run() -> run
androidx.fragment.app.FragmentTransition$Callback -> androidx.fragment.app.FragmentTransition$Callback:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    34:34:void <init>() -> <init>
    331:335:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:115:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:217:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    43:47:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    188:210:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:139:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    339:343:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:327:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:181:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:256:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    78:90:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    347:359:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:289:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:74:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:300:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    52:57:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    171:171:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    161:167:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    175:175:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    179:179:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    155:157:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    246:246:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    241:242:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    250:250:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    254:254:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    228:237:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    281:281:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    277:278:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    284:284:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    287:287:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    273:273:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    45:45:void <init>() -> <init>
    358:379:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:235:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    386:391:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    406:411:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:256:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:108:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    398:398:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:167:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:351:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    302:303:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    263:277:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:208:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:206:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:275:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:349:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
# {"id":"sourceFile","fileName":"FragmentViewLifecycleOwner.java"}
    44:50:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore) -> <init>
    79:80:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    132:133:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    55:56:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    88:89:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    63:67:void initialize() -> initialize
    73:73:boolean isInitialized() -> isInitialized
    137:138:void performRestore(android.os.Bundle) -> performRestore
    141:142:void performSave(android.os.Bundle) -> performSave
    84:85:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
# {"id":"sourceFile","fileName":"LogWriter.java"}
    25:32:void <init>(java.lang.String) -> <init>
    35:36:void close() -> close
    39:40:void flush() -> flush
    55:59:void flushBuilder() -> flushBuilder
    43:52:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    84:94:void <init>(android.view.ViewGroup) -> <init>
    193:225:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    155:161:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    173:179:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    182:188:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    164:170:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    260:301:void executePendingOperations() -> executePendingOperations
    135:140:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    145:150:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    304:335:void forceCompleteAllOperations() -> forceCompleteAllOperations
    253:257:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    117:130:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    54:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:79:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    232:250:void markPostponedState() -> markPostponedState
    338:347:void updateFinalState() -> updateFinalState
    228:229:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    207:207:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    210:213:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    217:217:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    220:222:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    444:607:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    708:711:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    744:746:void complete() -> complete
    715:740:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    505:533:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    645:646:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    592:604:void cancel() -> cancel
    686:697:void complete() -> complete
    671:674:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    542:542:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    561:561:androidx.fragment.app.Fragment getFragment() -> getFragment
    552:552:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    565:565:boolean isCanceled() -> isCanceled
    677:677:boolean isComplete() -> isComplete
    659:661:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    607:642:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    571:588:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    527:527:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    530:531:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    484:496:void <clinit>() -> <clinit>
    484:484:void <init>(java.lang.String,int) -> <init>
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    385:401:void <clinit>() -> <clinit>
    385:385:void <init>(java.lang.String,int) -> <init>
    444:478:void applyState(android.view.View) -> applyState
    412:415:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    426:434:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SpecialEffectsControllerFactory -> androidx.fragment.app.SpecialEffectsControllerFactory:
# {"id":"sourceFile","fileName":"SpecialEffectsControllerFactory.java"}
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
# {"id":"sourceFile","fileName":"SuperNotCalledException.java"}
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
# {"id":"sourceFile","fileName":"FastOutLinearInInterpolator.java"}
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
# {"id":"sourceFile","fileName":"FastOutSlowInInterpolator.java"}
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
# {"id":"sourceFile","fileName":"LinearOutSlowInInterpolator.java"}
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
# {"id":"sourceFile","fileName":"LookupTableInterpolator.java"}
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.AbstractSavedStateViewModelFactory -> androidx.lifecycle.AbstractSavedStateViewModelFactory:
# {"id":"sourceFile","fileName":"AbstractSavedStateViewModelFactory.kt"}
    62:66:void <init>(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    82:90:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    95:99:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    117:126:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    150:153:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.AbstractSavedStateViewModelFactory$Companion -> androidx.lifecycle.AbstractSavedStateViewModelFactory$Companion:
# {"id":"sourceFile","fileName":"AbstractSavedStateViewModelFactory.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    155:155:void <init>() -> <init>
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.AndroidViewModel:
# {"id":"sourceFile","fileName":"AndroidViewModel.kt"}
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    39:39:void <clinit>() -> <clinit>
    37:46:void <init>() -> <init>
    109:165:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    74:76:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    85:90:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    49:69:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    95:106:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    174:186:void <init>(java.util.Map) -> <init>
    190:193:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    197:202:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    211:215:void <init>(int,java.lang.reflect.Method) -> <init>
    240:248:boolean equals(java.lang.Object) -> equals
    253:253:int hashCode() -> hashCode
    220:236:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CloseableCoroutineScope -> androidx.lifecycle.CloseableCoroutineScope:
# {"id":"sourceFile","fileName":"ViewModel.kt"}
    47:48:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    51:52:void close() -> close
    48:48:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
# {"id":"sourceFile","fileName":"CompositeGeneratedAdaptersObserver.kt"}
    18:19:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    23:30:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.DefaultLifecycleObserver:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserver.kt"}
    38:38:void onCreate(androidx.lifecycle.LifecycleOwner) -> onCreate
    92:92:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    70:70:void onPause(androidx.lifecycle.LifecycleOwner) -> onPause
    48:48:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    81:81:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
androidx.lifecycle.DefaultLifecycleObserverAdapter -> androidx.lifecycle.DefaultLifecycleObserverAdapter:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserverAdapter.kt"}
    18:20:void <init>(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    23:34:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings -> androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserverAdapter.kt"}
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.EmptyActivityLifecycleCallbacks:
# {"id":"sourceFile","fileName":"EmptyActivityLifecycleCallbacks.kt"}
    22:22:void <init>() -> <init>
    24:24:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    36:36:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    30:30:void onActivityPaused(android.app.Activity) -> onActivityPaused
    28:28:void onActivityResumed(android.app.Activity) -> onActivityResumed
    34:34:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    26:26:void onActivityStarted(android.app.Activity) -> onActivityStarted
    32:32:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.GeneratedAdapter:
# {"id":"sourceFile","fileName":"GeneratedAdapter.kt"}
androidx.lifecycle.HasDefaultViewModelProviderFactory -> androidx.lifecycle.HasDefaultViewModelProviderFactory:
# {"id":"sourceFile","fileName":"HasDefaultViewModelProviderFactory.kt"}
    38:38:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
androidx.lifecycle.LegacySavedStateHandleController -> androidx.lifecycle.LegacySavedStateHandleController:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.kt"}
    23:23:void <init>() -> <init>
    47:54:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    33:38:androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle) -> create
    57:74:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation -> androidx.lifecycle.LegacySavedStateHandleController$OnRecreation:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.kt"}
    76:76:void <init>() -> <init>
    78:91:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1 -> androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.kt"}
    62:62:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    67:71:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    48:55:void <init>() -> <init>
    55:55:java.util.concurrent.atomic.AtomicReference getInternalScopeRef() -> getInternalScopeRef
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    98:128:void <clinit>() -> <clinit>
    94:94:void <init>(java.lang.String,int) -> <init>
    141:148:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.Lifecycle$Event$Companion:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    151:151:void <init>() -> <init>
    162:166:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    198:202:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    216:220:androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State) -> upTo
androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings -> androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.Lifecycle$Event$WhenMappings:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    236:269:void <clinit>() -> <clinit>
    230:230:void <init>(java.lang.String,int) -> <init>
    278:278:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
androidx.lifecycle.LifecycleCoroutineScope -> androidx.lifecycle.LifecycleCoroutineScope:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    318:318:void <init>() -> <init>
androidx.lifecycle.LifecycleCoroutineScopeImpl -> androidx.lifecycle.LifecycleCoroutineScopeImpl:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    379:390:void <init>(androidx.lifecycle.Lifecycle,kotlin.coroutines.CoroutineContext) -> <init>
    381:381:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    380:380:androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common() -> getLifecycle$lifecycle_common
    403:407:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    393:400:void register() -> register
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1 -> androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    393:399:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.LifecycleDestroyedException -> androidx.lifecycle.LifecycleDestroyedException:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    31:31:void <init>() -> <init>
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.LifecycleDispatcher:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    37:42:void init(android.content.Context) -> init
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    45:45:void <init>() -> <init>
    47:48:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.LifecycleEventObserver:
# {"id":"sourceFile","fileName":"LifecycleEventObserver.kt"}
androidx.lifecycle.LifecycleKt -> androidx.lifecycle.LifecycleKt:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    293:304:androidx.lifecycle.LifecycleCoroutineScope getCoroutineScope(androidx.lifecycle.Lifecycle) -> getCoroutineScope
androidx.lifecycle.LifecycleKt$$ExternalSyntheticBackportWithForwarding0 -> androidx.lifecycle.LifecycleKt$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.lifecycle.LifecycleKt$$InternalSyntheticBackportWithForwarding$1$5f70a38d1046620b02996f6b536b4525703fbc2106f594b00b1e74cbdadf8fb4$0.m(java.util.concurrent.atomic.AtomicReference,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.LifecycleObserver:
# {"id":"sourceFile","fileName":"LifecycleObserver.kt"}
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.LifecycleOwner:
# {"id":"sourceFile","fileName":"LifecycleOwner.kt"}
androidx.lifecycle.LifecycleOwnerKt -> androidx.lifecycle.LifecycleOwnerKt:
# {"id":"sourceFile","fileName":"LifecycleOwner.kt"}
    45:45:androidx.lifecycle.LifecycleCoroutineScope getLifecycleScope(androidx.lifecycle.LifecycleOwner) -> getLifecycleScope
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    31:83:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    79:79:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    174:202:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    258:270:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    154:158:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    295:300:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    242:255:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    98:98:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    118:120:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    145:150:boolean isSynced() -> isSynced
    93:95:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    123:141:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    205:206:void popParentState() -> popParentState
    209:210:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    213:227:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    105:107:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    275:291:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$Companion -> androidx.lifecycle.LifecycleRegistry$Companion:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    319:319:void <init>() -> <init>
    336:336:androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min$lifecycle_runtime_release
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    302:309:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    312:316:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
    303:303:androidx.lifecycle.Lifecycle$State getState() -> getState
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
# {"id":"sourceFile","fileName":"Lifecycling.kt"}
    31:33:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    74:81:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    87:94:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    91:98:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    87:109:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    176:176:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    114:120:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    168:168:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    38:67:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    125:164:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
# {"id":"sourceFile","fileName":"LiveData.java"}
    64:64:void <clinit>() -> <clinit>
    60:113:void <init>() -> <init>
    501:505:void assertMainThread(java.lang.String) -> assertMainThread
    393:413:void changeActiveCounter(int) -> changeActiveCounter
    117:134:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:159:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    191:206:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    224:235:void observeForever(androidx.lifecycle.Observer) -> observeForever
    356:356:void onActive() -> onActive
    369:369:void onInactive() -> onInactive
    286:294:void postValue(java.lang.Object) -> postValue
    244:251:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:310:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
# {"id":"sourceFile","fileName":"LiveData.java"}
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:94:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
# {"id":"sourceFile","fileName":"LiveData.java"}
    490:492:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    496:496:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
# {"id":"sourceFile","fileName":"LiveData.java"}
    419:422:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    452:453:void detachObserver() -> detachObserver
    447:447:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    432:443:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    426:426:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
# {"id":"sourceFile","fileName":"LiveData.java"}
    459:463:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    475:485:void activeStateChanged(boolean) -> activeStateChanged
    472:472:void detachObserver() -> detachObserver
    468:468:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
# {"id":"sourceFile","fileName":"MethodCallsLogger.kt"}
    23:25:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
# {"id":"sourceFile","fileName":"MutableLiveData.java"}
    40:41:void <init>() -> <init>
    45:46:void postValue(java.lang.Object) -> postValue
    50:51:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.Observer -> androidx.lifecycle.Observer:
# {"id":"sourceFile","fileName":"Observer.kt"}
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.OnLifecycleEvent:
# {"id":"sourceFile","fileName":"OnLifecycleEvent.java"}
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
# {"id":"sourceFile","fileName":"ProcessLifecycleInitializer.kt"}
    25:25:void <init>() -> <init>
    25:25:java.lang.Object create(android.content.Context) -> create
    27:38:androidx.lifecycle.LifecycleOwner create(android.content.Context) -> create
    41:41:java.util.List dependencies() -> dependencies
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.ProcessLifecycleOwner:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    0:0:void $r8$lambda$8RHFmaqBQY2MpEYiTr99NwPTGEU(androidx.lifecycle.ProcessLifecycleOwner) -> $r8$lambda$8RHFmaqBQY2MpEYiTr99NwPTGEU
      # {"id":"com.android.tools.r8.synthesized"}
    75:75:void <clinit>() -> <clinit>
    47:60:void <init>() -> <init>
    47:47:androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner) -> access$getInitializationListener$p
    47:47:androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp() -> access$getNewInstance$cp
    115:119:void activityPaused$lifecycle_process_release() -> activityPaused$lifecycle_process_release
    103:112:void activityResumed$lifecycle_process_release() -> activityResumed$lifecycle_process_release
    95:100:void activityStarted$lifecycle_process_release() -> activityStarted$lifecycle_process_release
    122:124:void activityStopped$lifecycle_process_release() -> activityStopped$lifecycle_process_release
    142:186:void attach$lifecycle_process_release(android.content.Context) -> attach$lifecycle_process_release
    56:58:void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner) -> delayedPauseRunnable$lambda$0
    127:131:void dispatchPauseIfNeeded$lifecycle_process_release() -> dispatchPauseIfNeeded$lifecycle_process_release
    134:138:void dispatchStopIfNeeded$lifecycle_process_release() -> dispatchStopIfNeeded$lifecycle_process_release
    189:189:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
androidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0 -> androidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.f$0 -> f$0
    0:0:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.<init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.ProcessLifecycleOwner$Api29Impl:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    191:191:void <init>() -> <init>
    199:200:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks) -> registerActivityLifecycleCallbacks
androidx.lifecycle.ProcessLifecycleOwner$Companion -> androidx.lifecycle.ProcessLifecycleOwner$Companion:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    72:72:void <init>() -> <init>
    85:85:androidx.lifecycle.LifecycleOwner get() -> get
    90:91:void init$lifecycle_process_release(android.content.Context) -> init$lifecycle_process_release
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.ProcessLifecycleOwner$attach$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    145:145:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    173:176:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    179:180:void onActivityPaused(android.app.Activity) -> onActivityPaused
    157:167:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    183:184:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    158:158:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    164:165:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    160:161:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    60:60:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    61:61:void onCreate() -> onCreate
    68:69:void onResume() -> onResume
    64:65:void onStart() -> onStart
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
# {"id":"sourceFile","fileName":"ReflectiveGenericLifecycleObserver.java"}
    33:36:void <init>(java.lang.Object) -> <init>
    40:41:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    104:124:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    106:174:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    108:108:kotlinx.coroutines.sync.Mutex kotlinx.coroutines.sync.MutexKt.Mutex$default(boolean,int,java.lang.Object) -> invokeSuspend
    108:108:java.lang.Object invokeSuspend(java.lang.Object):109 -> invokeSuspend
    106:171:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    106:173:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    114:175:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    175:175:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    110:111:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    111:112:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    32:32:void <init>() -> <init>
    83:89:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    36:37:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    44:45:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    40:41:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    48:51:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    76:80:void onDestroy() -> onDestroy
    66:68:void onPause() -> onPause
    60:63:void onResume() -> onResume
    54:57:void onStart() -> onStart
    71:73:void onStop() -> onStop
    92:93:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.ReportFragment$ActivityInitializationListener:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
androidx.lifecycle.ReportFragment$Companion -> androidx.lifecycle.ReportFragment$Companion:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    161:161:void <init>() -> <init>
    185:195:void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch$lifecycle_runtime_release
    201:202:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    167:181:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    104:105:void <init>() -> <init>
    109:109:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    151:151:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    134:134:void onActivityPaused(android.app.Activity) -> onActivityPaused
    115:116:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    127:128:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    121:122:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    148:149:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    131:132:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    137:138:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    124:124:void onActivityResumed(android.app.Activity) -> onActivityResumed
    145:145:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    118:118:void onActivityStarted(android.app.Activity) -> onActivityStarted
    140:140:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    153:153:void <init>() -> <init>
    156:157:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$InternalSyntheticApiModelOutline$1$697f715c7301ae348f7ba2ab082eb37b64d67d01fe586b84528231ac2d1ce45b$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.SavedStateHandle -> androidx.lifecycle.SavedStateHandle:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    0:0:android.os.Bundle $r8$lambda$aMir0GWwzPQviKVGE0DPm0kayew(androidx.lifecycle.SavedStateHandle) -> $r8$lambda$aMir0GWwzPQviKVGE0DPm0kayew
      # {"id":"com.android.tools.r8.synthesized"}
    410:443:void <clinit>() -> <clinit>
    80:80:void <init>(java.util.Map) -> <init>
    51:51:void <init>() -> <init>
    51:51:void <init>(java.util.Map):51 -> <init>
    52:52:void <init>() -> <init>
    52:52:void <init>(java.util.Map):52 -> <init>
    53:53:void <init>() -> <init>
    53:53:void <init>(java.util.Map):53 -> <init>
    54:54:void <init>() -> <init>
    54:54:void <init>(java.util.Map):54 -> <init>
    56:56:void <init>() -> <init>
    56:56:void <init>(java.util.Map):56 -> <init>
    81:82:void <init>(java.util.Map) -> <init>
    51:87:void <init>() -> <init>
    87:87:void <init>() -> <init>
    50:50:java.lang.Class[] access$getACCEPTABLE_CLASSES$cp() -> access$getACCEPTABLE_CLASSES$cp
    91:91:androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider() -> savedStateProvider
    59:72:android.os.Bundle savedStateProvider$lambda$0(androidx.lifecycle.SavedStateHandle) -> savedStateProvider$lambda$0
    248:262:void set(java.lang.String,java.lang.Object) -> set
androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0 -> androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.f$0 -> f$0
    0:0:void androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.<init>(androidx.lifecycle.SavedStateHandle) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.SavedStateHandle$Companion -> androidx.lifecycle.SavedStateHandle$Companion:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    358:358:void <init>() -> <init>
    365:390:androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle) -> createHandle
    398:406:boolean validateValue(java.lang.Object) -> validateValue
androidx.lifecycle.SavedStateHandleAttacher -> androidx.lifecycle.SavedStateHandleAttacher:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    191:192:void <init>(androidx.lifecycle.SavedStateHandlesProvider) -> <init>
    196:204:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
# {"id":"sourceFile","fileName":"SavedStateHandleController.kt"}
    20:21:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    22:22:androidx.lifecycle.SavedStateHandle getHandle() -> <init>
    22:22:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle):22 -> <init>
    20:20:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    29:42:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    22:22:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
    25:25:boolean isAttached() -> isAttached
    36:40:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleSupport -> androidx.lifecycle.SavedStateHandleSupport:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    212:224:void <clinit>() -> <clinit>
    65:226:androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.savedstate.SavedStateRegistryOwner,androidx.lifecycle.ViewModelStoreOwner,java.lang.String,android.os.Bundle) -> createSavedStateHandle
    90:104:androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.lifecycle.viewmodel.CreationExtras) -> createSavedStateHandle
    45:57:void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner) -> enableSavedStateHandles
    114:116:androidx.lifecycle.SavedStateHandlesProvider getSavedStateHandlesProvider(androidx.savedstate.SavedStateRegistryOwner) -> getSavedStateHandlesProvider
    109:109:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    110:110:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    63:64:void androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.initializer(androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder,kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    63:64:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):110 -> getSavedStateHandlesVM
    111:111:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    109:111:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    111:111:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    224:224:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    212:212:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    218:218:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1 -> androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    110:110:androidx.lifecycle.SavedStateHandlesVM invoke(androidx.lifecycle.viewmodel.CreationExtras) -> invoke
    110:110:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.lifecycle.SavedStateHandlesProvider -> androidx.lifecycle.SavedStateHandlesProvider:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    126:127:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner) -> <init>
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> <init>
    133:133:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner):133 -> <init>
    126:126:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner) -> <init>
    180:186:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> getViewModel
    162:228:void performRestore() -> performRestore
    164:228:void performRestore() -> performRestore
    138:146:android.os.Bundle saveState() -> saveState
    215:215:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> saveState
    215:215:android.os.Bundle saveState():146 -> saveState
    146:151:android.os.Bundle saveState() -> saveState
    215:216:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> saveState
    215:216:android.os.Bundle saveState():146 -> saveState
    138:152:android.os.Bundle saveState() -> saveState
    138:155:android.os.Bundle saveState() -> saveState
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2 -> androidx.lifecycle.SavedStateHandlesProvider$viewModel$2:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    133:133:java.lang.Object invoke() -> invoke
    134:134:androidx.lifecycle.SavedStateHandlesVM invoke() -> invoke
androidx.lifecycle.SavedStateHandlesVM -> androidx.lifecycle.SavedStateHandlesVM:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    118:119:void <init>() -> <init>
    119:119:java.util.Map getHandles() -> getHandles
androidx.lifecycle.SavedStateViewModelFactory -> androidx.lifecycle.SavedStateViewModelFactory:
# {"id":"sourceFile","fileName":"SavedStateViewModelFactory.kt"}
    96:103:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    112:144:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    159:187:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    199:201:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    210:217:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.SavedStateViewModelFactoryKt -> androidx.lifecycle.SavedStateViewModelFactoryKt:
# {"id":"sourceFile","fileName":"SavedStateViewModelFactory.kt"}
    238:242:void <clinit>() -> <clinit>
    1:1:java.util.List access$getANDROID_VIEWMODEL_SIGNATURE$p() -> access$getANDROID_VIEWMODEL_SIGNATURE$p
    1:1:java.util.List access$getVIEWMODEL_SIGNATURE$p() -> access$getVIEWMODEL_SIGNATURE$p
    250:263:java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.util.List) -> findMatchingConstructor
    225:233:androidx.lifecycle.ViewModel newInstance(java.lang.Class,java.lang.reflect.Constructor,java.lang.Object[]) -> newInstance
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
# {"id":"sourceFile","fileName":"SingleGeneratedAdapterObserver.kt"}
    18:19:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    22:23:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
# {"id":"sourceFile","fileName":"ViewModel.java"}
    113:126:void <init>() -> <init>
    169:191:void clear() -> clear
    238:245:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    229:234:java.lang.Object getTag(java.lang.String) -> getTag
    165:165:void onCleared() -> onCleared
    208:221:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelKt -> androidx.lifecycle.ViewModelKt:
# {"id":"sourceFile","fileName":"ViewModel.kt"}
    37:43:kotlinx.coroutines.CoroutineScope getViewModelScope(androidx.lifecycle.ViewModel) -> getViewModelScope
androidx.lifecycle.ViewModelLazy -> androidx.lifecycle.ViewModelLazy:
# {"id":"sourceFile","fileName":"ViewModelLazy.kt"}
    35:39:void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> <init>
    35:62:void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    35:35:java.lang.Object getValue() -> getValue
    45:57:androidx.lifecycle.ViewModel getValue() -> getValue
    61:61:boolean isInitialized() -> isInitialized
androidx.lifecycle.ViewModelLazy$1 -> androidx.lifecycle.ViewModelLazy$1:
# {"id":"sourceFile","fileName":"ViewModelLazy.kt"}
    39:39:androidx.lifecycle.viewmodel.CreationExtras$Empty invoke() -> invoke
    39:39:java.lang.Object invoke() -> invoke
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    42:53:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras):54 -> <init>
    51:51:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    51:51:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras):51 -> <init>
    51:359:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    129:133:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    151:153:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    172:376:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    356:356:void <clinit>() -> <clinit>
    253:258:void <init>(android.app.Application,int) -> <init>
    267:267:void <init>() -> <init>
    275:275:void <init>(android.app.Application) -> <init>
    252:252:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory access$getSInstance$cp() -> access$getSInstance$cp
    252:252:void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory) -> access$setSInstance$cp
    279:292:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    299:306:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    312:324:androidx.lifecycle.ViewModel create(java.lang.Class,android.app.Application) -> create
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    327:327:void <init>() -> <init>
    344:347:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    350:350:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.ViewModelProvider$Factory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    69:70:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    83:83:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
androidx.lifecycle.ViewModelProvider$Factory$Companion -> androidx.lifecycle.ViewModelProvider$Factory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    85:85:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    242:242:void <clinit>() -> <clinit>
    197:198:void <init>() -> <init>
    197:197:androidx.lifecycle.ViewModelProvider$NewInstanceFactory access$getSInstance$cp() -> access$getSInstance$cp
    197:197:void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$NewInstanceFactory) -> access$setSInstance$cp
    201:208:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    212:212:void <init>() -> <init>
    225:228:androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance() -> getInstance
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    231:231:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    101:102:void <init>() -> <init>
androidx.lifecycle.ViewModelProviderGetKt -> androidx.lifecycle.ViewModelProviderGetKt:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    362:364:androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner) -> defaultCreationExtras
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
# {"id":"sourceFile","fileName":"ViewModelStore.kt"}
    35:37:void <init>() -> <init>
    71:75:void clear() -> clear
    56:56:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    64:64:java.util.Set keys() -> keys
    44:46:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.ViewModelStoreOwner:
# {"id":"sourceFile","fileName":"ViewModelStoreOwner.kt"}
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
# {"id":"sourceFile","fileName":"ViewTreeLifecycleOwner.kt"}
    37:38:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
# {"id":"sourceFile","fileName":"ViewTreeViewModelStoreOwner.kt"}
    38:39:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1 -> androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    180:187:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.viewmodel.CreationExtras -> androidx.lifecycle.viewmodel.CreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    26:27:void <init>() -> <init>
    27:27:java.util.Map getMap$lifecycle_viewmodel_release() -> getMap$lifecycle_viewmodel_release
androidx.lifecycle.viewmodel.CreationExtras$Empty -> androidx.lifecycle.viewmodel.CreationExtras$Empty:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    42:42:void <init>() -> <init>
    43:43:java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key) -> get
androidx.lifecycle.viewmodel.CreationExtras$Key -> androidx.lifecycle.viewmodel.CreationExtras$Key:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
androidx.lifecycle.viewmodel.InitializerViewModelFactory -> androidx.lifecycle.viewmodel.InitializerViewModelFactory:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    86:87:void <init>(androidx.lifecycle.viewmodel.ViewModelInitializer[]) -> <init>
    103:105:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    13579:13579:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> create
    13579:13579:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):105 -> create
    106:109:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    13579:13580:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> create
    13579:13580:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):105 -> create
    110:111:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder -> androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    36:38:void <init>() -> <init>
    47:48:void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1) -> addInitializer
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
    37:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    37:38:androidx.lifecycle.ViewModelProvider$Factory build():54 -> build
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt -> R8$$REMOVED$$CLASS$$0:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
androidx.lifecycle.viewmodel.MutableCreationExtras -> androidx.lifecycle.viewmodel.MutableCreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    0:0:void <init>() -> <init>
    52:56:void <init>(androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    52:68:void <init>(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    66:66:java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key) -> get
    61:62:void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object) -> set
androidx.lifecycle.viewmodel.ViewModelInitializer -> androidx.lifecycle.viewmodel.ViewModelInitializer:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    69:71:void <init>(java.lang.Class,kotlin.jvm.functions.Function1) -> <init>
    70:70:java.lang.Class getClazz$lifecycle_viewmodel_release() -> getClazz$lifecycle_viewmodel_release
    71:71:kotlin.jvm.functions.Function1 getInitializer$lifecycle_viewmodel_release() -> getInitializer$lifecycle_viewmodel_release
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
# {"id":"sourceFile","fileName":"LoaderManager.java"}
    40:44:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:482:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:340:void markForRedelivery() -> markForRedelivery
    344:351:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.Loader -> androidx.loader.content.Loader:
# {"id":"sourceFile","fileName":"Loader.java"}
androidx.profileinstaller.BenchmarkOperation -> androidx.profileinstaller.BenchmarkOperation:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
    58:71:boolean deleteFilesRecursively(java.io.File) -> deleteFilesRecursively
    35:50:void dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics) -> dropShaderCache
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper -> androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
    87:87:java.io.File getDeviceProtectedCodeCacheDir(android.content.Context) -> getDeviceProtectedCodeCacheDir
androidx.profileinstaller.DeviceProfileWriter -> androidx.profileinstaller.DeviceProfileWriter:
# {"id":"sourceFile","fileName":"DeviceProfileWriter.java"}
    0:0:void $r8$lambda$ERhlvXCSfTRq-n5iULYjO-Ntn-w(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object) -> $r8$lambda$ERhlvXCSfTRq-n5iULYjO-Ntn-w
      # {"id":"com.android.tools.r8.synthesized"}
    80:111:void <init>(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File) -> <init>
    253:264:androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[]) -> addMetadata
    264:273:androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[]) -> addMetadata
    136:140:void assertDeviceAllowsProfileInstallerAotWritesCalled() -> assertDeviceAllowsProfileInstallerAotWritesCalled
    363:389:byte[] desiredVersion() -> desiredVersion
    118:132:boolean deviceAllowsProfileInstallerAotWrites() -> deviceAllowsProfileInstallerAotWrites
    208:216:java.io.InputStream getProfileInputStream(android.content.res.AssetManager) -> getProfileInputStream
    87:87:void lambda$result$0(int,java.lang.Object) -> lambda$result$0
    188:199:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String) -> openStreamFromAssets
    159:175:androidx.profileinstaller.DeviceProfileWriter read() -> read
    226:241:androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream) -> readProfileInternal
    395:424:boolean requiresMetadata() -> requiresMetadata
    87:88:void result(int,java.lang.Object) -> result
    296:320:androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded() -> transcodeIfNeeded
    299:326:androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded() -> transcodeIfNeeded
    338:356:boolean write() -> write
    355:358:boolean write() -> write
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> f$0
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> f$1
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> f$2
    0:0:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DexProfileData -> androidx.profileinstaller.DexProfileData:
# {"id":"sourceFile","fileName":"DexProfileData.java"}
    47:57:void <init>(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap) -> <init>
androidx.profileinstaller.Encoding -> androidx.profileinstaller.Encoding:
# {"id":"sourceFile","fileName":"Encoding.java"}
    75:75:int bitsToBytes(int) -> bitsToBytes
    177:184:byte[] compress(byte[]) -> compress
    196:196:java.lang.RuntimeException error(java.lang.String) -> error
    79:88:byte[] read(java.io.InputStream,int) -> read
    123:165:byte[] readCompressed(java.io.InputStream,int,int) -> readCompressed
    165:166:byte[] readCompressed(java.io.InputStream,int,int) -> readCompressed
    114:114:java.lang.String readString(java.io.InputStream,int) -> readString
    92:98:long readUInt(java.io.InputStream,int) -> readUInt
    106:106:int readUInt16(java.io.InputStream) -> readUInt16
    110:110:long readUInt32(java.io.InputStream) -> readUInt32
    102:102:int readUInt8(java.io.InputStream) -> readUInt8
    46:46:int utf8Length(java.lang.String) -> utf8Length
    188:193:void writeAll(java.io.InputStream,java.io.OutputStream) -> writeAll
    170:174:void writeCompressed(java.io.OutputStream,byte[]) -> writeCompressed
    71:72:void writeString(java.io.OutputStream,java.lang.String) -> writeString
    51:56:void writeUInt(java.io.OutputStream,long,int) -> writeUInt
    63:64:void writeUInt16(java.io.OutputStream,int) -> writeUInt16
    67:68:void writeUInt32(java.io.OutputStream,long) -> writeUInt32
    59:60:void writeUInt8(java.io.OutputStream,int) -> writeUInt8
androidx.profileinstaller.FileSectionType -> androidx.profileinstaller.FileSectionType:
# {"id":"sourceFile","fileName":"FileSectionType.java"}
    22:22:androidx.profileinstaller.FileSectionType[] $values() -> $values
    22:33:void <clinit>() -> <clinit>
    37:39:void <init>(java.lang.String,int,long) -> <init>
    42:42:long getValue() -> getValue
    22:22:androidx.profileinstaller.FileSectionType valueOf(java.lang.String) -> valueOf
    22:22:androidx.profileinstaller.FileSectionType[] values() -> values
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
# {"id":"sourceFile","fileName":"ProfileInstallReceiver.java"}
    38:38:void <init>() -> <init>
    101:134:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    149:155:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> saveProfile
androidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics:
# {"id":"sourceFile","fileName":"ProfileInstallReceiver.java"}
    157:157:void <init>(androidx.profileinstaller.ProfileInstallReceiver) -> <init>
    160:161:void onDiagnosticReceived(int,java.lang.Object) -> onDiagnosticReceived
    165:167:void onResultReceived(int,java.lang.Object) -> onResultReceived
androidx.profileinstaller.ProfileInstaller -> androidx.profileinstaller.ProfileInstaller:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
    0:0:void $r8$lambda$lAFgOixnKjpoenploWSedI8N01U(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> $r8$lambda$lAFgOixnKjpoenploWSedI8N01U
      # {"id":"com.android.tools.r8.synthesized"}
    109:122:void <clinit>() -> <clinit>
    407:408:boolean deleteProfileWrittenFor(java.io.File) -> deleteProfileWrittenFor
    630:633:void deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> deleteSkipFile
    367:386:boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> hasAlreadyWrittenProfileForThisInstall
    96:96:void lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> lambda$result$0
    394:400:void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File) -> noteProfileWrittenFor
    96:97:void result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> result
    431:451:boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> transcodeAndWrite
    479:480:void writeProfile(android.content.Context) -> writeProfile
    515:516:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> writeProfile
    554:583:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean) -> writeProfile
    601:614:void writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> writeSkipFile
androidx.profileinstaller.ProfileInstaller$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstaller$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$0 -> f$0
    int androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$1 -> f$1
    java.lang.Object androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$2 -> f$2
    0:0:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.<init>(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstaller$1 -> androidx.profileinstaller.ProfileInstaller$1:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
    109:109:void <init>() -> <init>
    113:113:void onDiagnosticReceived(int,java.lang.Object) -> onDiagnosticReceived
    118:118:void onResultReceived(int,java.lang.Object) -> onResultReceived
androidx.profileinstaller.ProfileInstaller$2 -> androidx.profileinstaller.ProfileInstaller$2:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
    122:122:void <init>() -> <init>
    126:145:void onDiagnosticReceived(int,java.lang.Object) -> onDiagnosticReceived
    149:183:void onResultReceived(int,java.lang.Object) -> onResultReceived
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback -> androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    0:0:void $r8$lambda$QGpANLTF0YGY0pXfe2eje4OKwkc(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context) -> $r8$lambda$QGpANLTF0YGY0pXfe2eje4OKwkc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$nkOIpN4NfyreWbcXjHv0xCvwgTY(android.content.Context) -> $r8$lambda$nkOIpN4NfyreWbcXjHv0xCvwgTY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$nvFqT5BztGB-MvszW9GUTUoI9rw(android.content.Context) -> $r8$lambda$nvFqT5BztGB-MvszW9GUTUoI9rw
      # {"id":"com.android.tools.r8.synthesized"}
    64:64:void <init>() -> <init>
    64:64:java.lang.Object create(android.content.Context) -> create
    76:83:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context) -> create
    94:95:void delayAfterFirstFrame(android.content.Context) -> delayAfterFirstFrame
    126:126:java.util.List dependencies() -> dependencies
    108:118:void installAfterDelay(android.content.Context) -> installAfterDelay
    94:94:void lambda$delayAfterFirstFrame$0(android.content.Context) -> lambda$delayAfterFirstFrame$0
    117:117:void lambda$installAfterDelay$1(android.content.Context) -> lambda$installAfterDelay$1
    145:145:void lambda$writeInBackground$2(android.content.Context) -> lambda$writeInBackground$2
    138:146:void writeInBackground(android.content.Context) -> writeInBackground
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstallerInitializer androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$0 -> f$0
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$1 -> f$1
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.<init>(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1 -> androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> f$0
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2 -> androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.f$0 -> f$0
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.<init>(android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    0:0:void $r8$lambda$DSwPKNQiVu4DdgIKQZrSpqkWM-A(java.lang.Runnable,long) -> $r8$lambda$DSwPKNQiVu4DdgIKQZrSpqkWM-A
      # {"id":"com.android.tools.r8.synthesized"}
    161:161:void lambda$postFrameCallback$0(java.lang.Runnable,long) -> lambda$postFrameCallback$0
    161:162:void postFrameCallback(java.lang.Runnable) -> postFrameCallback
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> f$0
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long) -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    174:174:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.profileinstaller.ProfileInstallerInitializer$Result -> androidx.profileinstaller.ProfileInstallerInitializer$Result:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    151:151:void <init>() -> <init>
androidx.profileinstaller.ProfileTranscoder -> androidx.profileinstaller.ProfileTranscoder:
# {"id":"sourceFile","fileName":"ProfileTranscoder.java"}
    66:67:void <clinit>() -> <clinit>
    426:431:int computeMethodFlags(androidx.profileinstaller.DexProfileData) -> computeMethodFlags
    558:608:byte[] createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]) -> createCompressibleBody
    334:361:androidx.profileinstaller.WritableFileSection createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]) -> createCompressibleClassSection
    367:404:androidx.profileinstaller.WritableFileSection createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]) -> createCompressibleMethodsSection
    410:413:byte[] createMethodBitmapRegion(androidx.profileinstaller.DexProfileData) -> createMethodBitmapRegion
    419:422:byte[] createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData) -> createMethodsWithInlineCaches
    1050:1055:java.lang.String enforceSeparator(java.lang.String,java.lang.String) -> enforceSeparator
    1061:1069:java.lang.String extractKey(java.lang.String) -> extractKey
    959:970:androidx.profileinstaller.DexProfileData findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String) -> findByDexName
    1036:1043:java.lang.String generateDexKey(java.lang.String,java.lang.String,byte[]) -> generateDexKey
    612:613:int getMethodBitmapStorageSize(int) -> getMethodBitmapStorageSize
    1235:1243:int methodFlagBitmapIndex(int,int,int) -> methodFlagBitmapIndex
    1193:1201:int[] readClasses(java.io.InputStream,int) -> readClasses
    1222:1229:int readFlagsFromBitmap(java.util.BitSet,int,int) -> readFlagsFromBitmap
    70:76:byte[] readHeader(java.io.InputStream,byte[]) -> readHeader
    1133:1161:void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData) -> readHotMethodRegion
    819:832:androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]) -> readMeta
    850:868:androidx.profileinstaller.DexProfileData[] readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]) -> readMetadata001
    986:1012:androidx.profileinstaller.DexProfileData[] readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]) -> readMetadataForNBody
    887:907:androidx.profileinstaller.DexProfileData[] readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]) -> readMetadataV002
    918:951:androidx.profileinstaller.DexProfileData[] readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]) -> readMetadataV002Body
    1208:1219:void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData) -> readMethodBitmap
    791:809:androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String) -> readProfile
    1085:1126:androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int) -> readUncompressedBody
    617:617:int roundUpToByte(int) -> roundUpToByte
    634:638:void setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData) -> setMethodBitmapBit
    1164:1187:void skipInlineCache(java.io.InputStream) -> skipInlineCache
    98:124:boolean transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]) -> transcodeAndWriteBody
    714:722:void writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeClasses
    284:328:androidx.profileinstaller.WritableFileSection writeDexFileSection(androidx.profileinstaller.DexProfileData[]) -> writeDexFileSection
    80:82:void writeHeader(java.io.OutputStream,byte[]) -> writeHeader
    671:674:void writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeLineData
    651:657:void writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String) -> writeLineHeader
    733:747:void writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeMethodBitmap
    688:700:void writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeMethodsWithInlineCaches
    145:162:void writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForN
    521:543:void writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForO
    482:485:void writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForO_MR1
    473:476:void writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForP
    228:229:void writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForS
    237:279:void writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileSections
androidx.profileinstaller.ProfileVerifier -> androidx.profileinstaller.ProfileVerifier:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    76:81:void <clinit>() -> <clinit>
    299:303:long getPackageLastUpdateTime(android.content.Context) -> getPackageLastUpdateTime
    285:291:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean) -> setCompilationStatus
    129:277:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean) -> writeProfileVerification
androidx.profileinstaller.ProfileVerifier$Api33Impl -> androidx.profileinstaller.ProfileVerifier$Api33Impl:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    558:560:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context) -> getPackageInfo
androidx.profileinstaller.ProfileVerifier$Cache -> androidx.profileinstaller.ProfileVerifier$Cache:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    337:342:void <init>(int,int,long,long) -> <init>
    346:349:boolean equals(java.lang.Object) -> equals
    357:361:int hashCode() -> hashCode
    376:383:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File) -> readFromFile
    366:373:void writeOnFile(java.io.File) -> writeOnFile
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> androidx.profileinstaller.ProfileVerifier$CompilationStatus:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    486:490:void <init>(int,boolean,boolean) -> <init>
androidx.profileinstaller.ProfileVersion -> androidx.profileinstaller.ProfileVersion:
# {"id":"sourceFile","fileName":"ProfileVersion.java"}
    29:35:void <clinit>() -> <clinit>
    40:45:java.lang.String dexKeySeparator(byte[]) -> dexKeySeparator
androidx.profileinstaller.WritableFileSection -> androidx.profileinstaller.WritableFileSection:
# {"id":"sourceFile","fileName":"WritableFileSection.java"}
    34:39:void <init>(androidx.profileinstaller.FileSectionType,int,byte[],boolean) -> <init>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:312:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    528:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$Callback -> androidx.recyclerview.widget.AdapterHelper$Callback:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:669:java.lang.String cmdToString() -> cmdToString
    681:713:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:340:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:359:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Callback -> androidx.recyclerview.widget.ChildHelper$Callback:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    39:56:void <init>() -> <init>
    226:229:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    233:256:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    327:350:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    354:403:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    262:279:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    283:321:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    196:198:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    202:221:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    672:672:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    648:651:void cancelAll(java.util.List) -> cancelAll
    557:560:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    444:526:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    564:645:void endAnimations() -> endAnimations
    406:414:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    417:423:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    425:438:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    538:548:boolean isRunning() -> isRunning
    529:534:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    104:191:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    123:123:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    126:132:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    147:147:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    150:155:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    170:170:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    173:178:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    206:206:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    214:219:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    209:210:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    237:237:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    245:246:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    250:254:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    240:241:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    297:297:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    305:311:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    315:319:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    300:301:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    364:364:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    372:379:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    367:368:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    386:386:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    393:400:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    389:390:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    74:77:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    81:86:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    91:91:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    62:68:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    74:75:void <clinit>() -> <clinit>
    104:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:259:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:544:int[] getHorizontalRange() -> getHorizontalRange
    533:535:int[] getVerticalRange() -> getVerticalRange
    244:255:void hide(int) -> hide
    461:475:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    268:288:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    262:264:void resetHideDelay(int) -> resetHideDelay
    479:490:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    228:240:void show() -> show
    339:375:void updateScrollPosition(int,int) -> updateScrollPosition
    446:458:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    549:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:262:void buildTaskList() -> buildTaskList
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:364:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:369:void prefetch(long) -> prefetch
    312:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    339:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:307:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:404:void run() -> run
    394:404:void run() -> run
    403:406:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    65:65:void <init>() -> <init>
    112:136:void addPosition(int,int) -> addPosition
    152:156:void clearPrefetchPositions() -> clearPrefetchPositions
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:145:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:76:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    38:38:void <init>() -> <init>
    46:51:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    46:78:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    46:89:void <init>(android.content.Context,int) -> <init>
    46:102:void <init>(android.content.Context,int,int,boolean) -> <init>
    797:814:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    201:208:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    326:327:void calculateItemBorders(int) -> calculateItemBorders
    337:356:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    268:268:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    196:198:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    539:549:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1235:1238:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1217:1220:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1326:1364:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1293:1322:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1244:1247:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1226:1229:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    403:428:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    380:383:void ensureViewSet() -> ensureViewSet
    434:474:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    243:247:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    254:254:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    259:262:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    135:143:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    121:129:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    360:364:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    823:823:int getSpanCount() -> getSpanCount
    479:491:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    495:512:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    516:533:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    287:287:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    772:775:void guessMeasurement(float,int) -> guessMeasurement
    554:726:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    738:759:void measureChild(android.view.View,int,boolean) -> measureChild
    779:789:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    371:377:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1090:1207:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    170:175:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    149:165:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    212:214:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    218:220:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    237:239:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    224:226:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    231:233:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    179:187:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    191:193:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    388:390:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    396:398:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    302:320:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    836:847:void setSpanCount(int) -> setSpanCount
    278:279:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    110:116:void setStackFromEnd(boolean) -> setStackFromEnd
    1212:1212:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    292:298:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    1370:1370:void <init>() -> <init>
    1379:1379:int getSpanIndex(int,int) -> getSpanIndex
    1374:1374:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    1397:1403:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1397:1407:void <init>(int,int) -> <init>
    1397:1411:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1397:1415:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1436:1436:int getSpanIndex() -> getSpanIndex
    1446:1446:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    856:862:void <init>() -> <init>
    1019:1037:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    952:961:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    939:948:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1051:1083:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    988:1015:int getSpanIndex(int,int) -> getSpanIndex
    917:918:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    909:910:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
# {"id":"sourceFile","fileName":"LayoutState.java"}
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    163:164:void <init>(android.content.Context) -> <init>
    67:181:void <init>(android.content.Context,int,boolean) -> <init>
    67:198:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1444:1447:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    501:516:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    313:313:boolean canScrollHorizontally() -> canScrollHorizontally
    321:321:boolean canScrollVertically() -> canScrollVertically
    1402:1413:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1323:1349:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1311:1315:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1176:1176:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1164:1164:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1188:1188:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1209:1215:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1198:1204:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1220:1226:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    531:539:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1182:1182:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1170:1170:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1194:1194:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1751:1784:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1079:1079:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1068:1071:void ensureLayoutState() -> ensureLayoutState
    1607:1657:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1955:1955:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1836:1840:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1818:1822:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1981:1982:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1959:1959:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    2021:2022:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2070:2092:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    2048:2065:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1943:1944:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1950:1951:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1868:1937:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    426:439:android.view.View findViewByPosition(int) -> findViewByPosition
    989:1006:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    1014:1031:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    211:211:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1806:1806:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1796:1796:android.view.View getChildClosestToStart() -> getChildClosestToStart
    466:469:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    348:348:int getOrientation() -> getOrientation
    202:202:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1064:1064:boolean isLayoutRTL() -> isLayoutRTL
    1257:1257:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1662:1731:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    779:826:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    767:767:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    246:251:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2100:2140:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    256:261:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    559:743:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    748:753:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    294:306:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    266:288:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1581:1591:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1456:1471:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1537:1567:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1488:1519:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1305:1306:boolean resolveIsInfinite() -> resolveIsInfinite
    380:385:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1416:1438:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1142:1145:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1098:1104:void scrollToPosition(int) -> scrollToPosition
    1155:1158:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    358:371:void setOrientation(int) -> setOrientation
    412:418:void setReverseLayout(boolean) -> setReverseLayout
    328:334:void setStackFromEnd(boolean) -> setStackFromEnd
    1735:1737:boolean shouldMeasureTwice() -> shouldMeasureTwice
    522:526:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2209:2209:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    858:895:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    903:981:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:848:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1263:1302:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1035:1036:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1039:1046:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1049:1050:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1053:1061:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2515:2517:void <init>() -> <init>
    2531:2534:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2600:2608:void assignFromView(android.view.View,int) -> assignFromView
    2553:2597:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2547:2549:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2520:2524:void reset() -> reset
    2538:2538:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2611:2611:void <init>() -> <init>
    2618:2622:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2252:2338:void <init>() -> <init>
    2392:2393:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2396:2403:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2349:2349:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2359:2364:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2375:2388:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2406:2432:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2491:2491:void <clinit>() -> <clinit>
    2454:2456:void <init>() -> <init>
    2458:2462:void <init>(android.os.Parcel) -> <init>
    2465:2469:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2481:2481:int describeContents() -> describeContents
    2472:2472:boolean hasValidAnchor() -> hasValidAnchor
    2476:2477:void invalidateAnchor() -> invalidateAnchor
    2486:2489:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2492:2492:void <init>() -> <init>
    2492:2492:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2495:2495:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2492:2492:java.lang.Object[] newArray(int) -> newArray
    2500:2500:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
# {"id":"sourceFile","fileName":"LinearSmoothScroller.java"}
    80:98:void <init>(android.content.Context) -> <init>
    287:306:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    348:358:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    322:332:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    172:172:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    197:197:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    211:211:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    273:278:int clampApplyScroll(int,int) -> clampApplyScroll
    224:225:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    176:180:float getSpeedPerPixel() -> getSpeedPerPixel
    238:239:int getVerticalSnapPreference() -> getVerticalSnapPreference
    132:149:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    106:106:void onStart() -> onStart
    156:158:void onStop() -> onStop
    114:121:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    251:270:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
# {"id":"sourceFile","fileName":"OpReorderer.java"}
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OpReorderer$Callback -> androidx.recyclerview.widget.OpReorderer$Callback:
# {"id":"sourceFile","fileName":"OpReorderer.java"}
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
# {"id":"sourceFile","fileName":"PagerSnapHelper.java"}
    39:39:void <init>() -> <init>
    52:66:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    174:177:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    204:207:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    222:243:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    73:78:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    85:145:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    268:271:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    248:253:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    259:262:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    150:153:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    158:167:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
# {"id":"sourceFile","fileName":"PagerSnapHelper.java"}
    177:177:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    193:193:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    198:198:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    181:189:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    226:638:void <clinit>() -> <clinit>
    709:710:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    389:788:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2986:3013:void absorbGlows(int,int) -> absorbGlows
    217:217:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    217:217:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    217:217:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    217:217:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1530:1541:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    3327:3330:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1667:1681:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1696:1697:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    3469:3470:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1804:1808:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4832:4836:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4850:4868:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4840:4845:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3438:3453:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    5143:5144:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3882:3884:void cancelScroll() -> cancelScroll
    4969:4969:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    6421:6437:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    5023:5031:void clearOldPositions() -> clearOldPositions
    2272:2275:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2247:2250:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2295:2298:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2344:2347:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2320:2323:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2367:2370:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2963:2983:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    2817:2817:int consumeFlingInHorizontalStretch(int) -> consumeFlingInHorizontalStretch
    2848:2866:int consumeFlingInStretch(int,android.widget.EdgeEffect,android.widget.EdgeEffect,int) -> consumeFlingInStretch
    2829:2829:int consumeFlingInVerticalStretch(int) -> consumeFlingInVerticalStretch
    2033:2068:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    846:896:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    4050:4058:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4796:4797:boolean didChildRangeChange(int,int) -> didChildRangeChange
    8288:8299:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    8273:8284:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    4119:4127:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    4281:4327:void dispatchLayout() -> dispatchLayout
    4498:4583:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4590:4613:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4620:4704:void dispatchLayoutStep3() -> dispatchLayoutStep3
    12414:12414:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    12419:12419:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    12402:12402:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    12408:12408:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    12382:12382:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    12396:12398:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5679:5696:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5623:5646:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    12293:12307:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    4185:4186:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1517:1518:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1509:1510:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3509:3520:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4898:4955:void draw(android.graphics.Canvas) -> draw
    5499:5499:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    3056:3066:void ensureBottomGlow() -> ensureBottomGlow
    3016:3026:void ensureLeftGlow() -> ensureLeftGlow
    3029:3039:void ensureRightGlow() -> ensureRightGlow
    3042:3053:void ensureTopGlow() -> ensureTopGlow
    795:798:java.lang.String exceptionLabel() -> exceptionLabel
    4480:4488:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5258:5263:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    5275:5276:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3538:3547:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4770:4793:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    6399:6414:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    4367:4390:android.view.View findNextViewToFocus() -> findNextViewToFocus
    5393:5410:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    5455:5470:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    5415:5437:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2688:2782:boolean fling(int,int) -> fling
    3131:3205:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4974:4977:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4982:4985:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4990:4993:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    838:838:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1291:1291:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    12310:12315:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionInRecyclerView
    1346:1349:int getBaseline() -> getBaseline
    4827:4827:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    14329:14330:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    5318:5319:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    5237:5242:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    5281:5284:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1162:1162:boolean getClipToPadding() -> getClipToPadding
    822:822:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5565:5571:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4468:4476:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    3096:3096:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    899:905:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    4200:4200:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5574:5595:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1722:1722:int getItemDecorationCount() -> getItemDecorationCount
    1574:1574:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2904:2904:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2894:2894:int getMinFlingVelocity() -> getMinFlingVelocity
    6446:6449:long getNanoTime() -> getNanoTime
    1468:1468:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    5210:5210:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1587:1587:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1634:1634:int getScrollState() -> getScrollState
    14358:14361:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    5669:5673:float getSplineFlingDistance(int) -> getSplineFlingDistance
    4724:4751:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    12371:12371:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    5712:5713:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    2074:2084:boolean hasUpdatedView() -> hasUpdatedView
    1032:1112:void initAdapterManager() -> initAdapterManager
    809:813:void initAutofill() -> initAutofill
    909:1029:void initChildrenHelper() -> initChildrenHelper
    12322:12335:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    3069:3070:void invalidateGlows() -> invalidateGlows
    4115:4115:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    3409:3409:boolean isAttachedToWindow() -> isAttachedToWindow
    4149:4149:boolean isComputingLayout() -> isComputingLayout
    2490:2490:boolean isLayoutSuppressed() -> isLayoutSuppressed
    12346:12346:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    3217:3271:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1854:1863:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4888:4894:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    5172:5181:void markKnownViewsInvalid() -> markKnownViewsInvalid
    1938:1982:void nestedScrollByInternal(int,int,android.view.MotionEvent,int) -> nestedScrollByInternal
    5547:5551:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5509:5513:void offsetChildrenVertical(int) -> offsetChildrenVertical
    5068:5082:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    5034:5065:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    5086:5112:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    3344:3377:void onAttachedToWindow() -> onAttachedToWindow
    5526:5526:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    5538:5538:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    3381:3402:void onDetachedFromWindow() -> onDetachedFromWindow
    4959:4965:void onDraw(android.graphics.Canvas) -> onDraw
    4092:4093:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    4096:4097:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    4100:4112:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3899:3944:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3552:3659:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4872:4876:void onLayout(boolean,int,int,int,int) -> onLayout
    3949:4041:void onMeasure(int,int) -> onMeasure
    3887:3895:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    3334:3339:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1487:1502:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1473:1482:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    5660:5660:void onScrollStateChanged(int) -> onScrollStateChanged
    5620:5620:void onScrolled(int,int) -> onScrolled
    4062:4067:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3710:3870:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4208:4212:void postAnimationRunner() -> postAnimationRunner
    4215:4215:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    4225:4253:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    5162:5165:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2911:2937:void pullGlows(float,float,float,float) -> pullGlows
    4760:4767:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    4394:4465:void recoverFocusFromState() -> recoverFocusFromState
    2940:2960:void releaseGlows() -> releaseGlows
    2159:2184:int releaseHorizontalGlow(int,float) -> releaseHorizontalGlow
    2199:2224:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1235:1248:void removeAndRecycleViews() -> removeAndRecycleViews
    1551:1563:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4803:4820:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1749:1759:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    3478:3482:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1816:1819:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5991:6006:void repositionShadowingViews() -> repositionShadowingViews
    3276:3280:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    3293:3318:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    3322:3322:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3700:3706:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4880:4885:void requestLayout() -> requestLayout
    4351:4354:void resetFocusInfo() -> resetFocusInfo
    3874:3879:void resetScroll() -> resetScroll
    4330:4348:void saveFocusInfo() -> saveFocusInfo
    5009:5020:void saveOldPositions() -> saveOldPositions
    1900:1914:void scrollBy(int,int) -> scrollBy
    2099:2144:boolean scrollByInternal(int,int,android.view.MotionEvent,int) -> scrollByInternal
    1997:2022:void scrollStep(int,int,int[]) -> scrollStep
    1894:1896:void scrollTo(int,int) -> scrollTo
    1840:1851:void scrollToPosition(int) -> scrollToPosition
    4177:4181:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    832:834:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1224:1228:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1262:1281:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1775:1780:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    12283:12289:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1139:1147:void setClipToPadding(boolean) -> setClipToPadding
    3082:3085:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1126:1127:void setHasFixedSize(boolean) -> setHasFixedSize
    4081:4089:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1624:1625:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2518:2519:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1408:1447:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2536:2563:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    12341:12342:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1458:1459:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1791:1792:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    5227:5228:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1599:1600:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1308:1309:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1638:1650:void setScrollState(int) -> setScrollState
    1175:1189:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1609:1610:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    2797:2805:boolean shouldAbsorb(android.widget.EdgeEffect,int,int) -> shouldAbsorb
    4161:4172:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2572:2573:void smoothScrollBy(int,int) -> smoothScrollBy
    2584:2585:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2603:2604:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2641:2673:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1881:1890:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2385:2389:void startInterceptRequestLayout() -> startInterceptRequestLayout
    12351:12351:boolean startNestedScroll(int) -> startNestedScroll
    12356:12356:boolean startNestedScroll(int,int) -> startNestedScroll
    3674:3695:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    2402:2433:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    12361:12362:void stopNestedScroll() -> stopNestedScroll
    12366:12367:void stopNestedScroll(int) -> stopNestedScroll
    2874:2876:void stopScroll() -> stopScroll
    2882:2886:void stopScrollersInternal() -> stopScrollersInternal
    2462:2480:void suppressLayout(boolean) -> suppressLayout
    5121:5140:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    422:422:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    425:439:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    620:620:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    623:627:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    630:630:void <init>() -> <init>
    633:634:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    667:667:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    678:679:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    671:673:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    684:696:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    700:701:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    909:909:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    920:925:void addView(android.view.View,int) -> addView
    980:992:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    996:1011:void detachViewFromParent(int) -> detachViewFromParent
    954:954:android.view.View getChildAt(int) -> getChildAt
    912:912:int getChildCount() -> getChildCount
    974:974:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    929:929:int indexOfChild(android.view.View) -> indexOfChild
    1015:1019:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    1023:1027:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    959:970:void removeAllViews() -> removeAllViews
    934:950:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    1032:1032:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1077:1092:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    1035:1047:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1067:1069:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1101:1103:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1107:1110:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    1052:1055:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    1060:1062:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1073:1074:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1096:1097:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$7 -> androidx.recyclerview.widget.RecyclerView$7:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    8237:8237:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    7597:7600:void <init>() -> <init>
    7749:7770:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    8237:8243:boolean canRestoreState() -> canRestoreState
    7718:7728:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7728:7729:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7703:7706:int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> findRelativeAdapterPositionIn
    7813:7813:long getItemId(int) -> getItemId
    7785:7785:int getItemViewType(int) -> getItemViewType
    7923:7923:boolean hasObservers() -> hasObservers
    7831:7831:boolean hasStableIds() -> hasStableIds
    8008:8009:void notifyDataSetChanged() -> notifyDataSetChanged
    8050:8051:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    8113:8114:void notifyItemInserted(int) -> notifyItemInserted
    8146:8147:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    8179:8180:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    8162:8163:void notifyItemRemoved(int) -> notifyItemRemoved
    7967:7967:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7678:7679:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7976:7976:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    7889:7889:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    7903:7903:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    7915:7915:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    7852:7852:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7942:7943:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7797:7802:void setHasStableIds(boolean) -> setHasStableIds
    7955:7956:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy -> androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    8251:8267:void <clinit>() -> <clinit>
    8251:8251:void <init>(java.lang.String,int) -> <init>
    8251:8251:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String) -> valueOf
    8251:8251:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values() -> values
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13096:13096:void <init>() -> <init>
    13098:13098:boolean hasObservers() -> hasObservers
    13106:13109:void notifyChanged() -> notifyChanged
    13127:13130:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    13137:13140:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    13147:13150:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12560:12560:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    6084:6084:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13593:13663:void <init>() -> <init>
    13980:13991:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    14196:14196:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    14064:14068:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    14204:14209:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    13689:13689:long getAddDuration() -> getAddDuration
    13725:13725:long getChangeDuration() -> getChangeDuration
    13671:13671:long getMoveDuration() -> getMoveDuration
    13707:13707:long getRemoveDuration() -> getRemoveDuration
    14222:14222:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    14079:14079:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    13812:13812:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    13784:13784:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    13746:13747:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    14289:14290:void <init>() -> <init>
    14301:14301:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    14317:14322:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13551:13552:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    13556:13568:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    11429:11429:void <init>() -> <init>
    11478:11479:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    11503:11505:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    11440:11441:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    11448:11448:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    11461:11462:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    11469:11469:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    8316:8423:void <init>() -> <init>
    9258:9259:void addDisappearingView(android.view.View) -> addDisappearingView
    9277:9278:void addDisappearingView(android.view.View,int) -> addDisappearingView
    9289:9290:void addView(android.view.View) -> addView
    9302:9303:void addView(android.view.View,int) -> addView
    9306:9357:void addViewInt(android.view.View,int,boolean) -> addViewInt
    8631:8634:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    9546:9556:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    9567:9568:void attachView(android.view.View,int) -> attachView
    10441:10447:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    9159:9159:boolean canScrollVertically() -> canScrollVertically
    9060:9060:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    8609:8618:int chooseSize(int,int,int) -> chooseSize
    8812:8812:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    8841:8841:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    10915:10915:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    10930:10930:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    10945:10945:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    9933:9938:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    9526:9527:void detachViewAt(int) -> detachViewAt
    9533:9534:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8844:8846:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8849:8851:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    9445:9455:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    9473:9485:android.view.View findViewByPosition(int) -> findViewByPosition
    9078:9083:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    9103:9103:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    9406:9406:int getBaseline() -> getBaseline
    10476:10476:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    9676:9676:android.view.View getChildAt(int) -> getChildAt
    9665:9665:int getChildCount() -> getChildCount
    10184:10225:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    10569:10602:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8957:8957:boolean getClipToPadding() -> getClipToPadding
    11245:11245:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    10420:10420:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    10372:10373:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    10384:10384:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    10250:10251:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    10237:10238:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    10408:10408:int getDecoratedRight(android.view.View) -> getDecoratedRight
    10396:10396:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9830:9837:android.view.View getFocusedChild() -> getFocusedChild
    9740:9740:int getHeight() -> getHeight
    9708:9708:int getHeightMode() -> getHeightMode
    9853:9854:int getItemCount() -> getItemCount
    9227:9227:int getLayoutDirection() -> getLayoutDirection
    10491:10491:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10999:10999:int getMinimumHeight() -> getMinimumHeight
    10991:10991:int getMinimumWidth() -> getMinimumWidth
    9780:9780:int getPaddingBottom() -> getPaddingBottom
    9800:9800:int getPaddingEnd() -> getPaddingEnd
    9750:9750:int getPaddingLeft() -> getPaddingLeft
    9770:9770:int getPaddingRight() -> getPaddingRight
    9790:9790:int getPaddingStart() -> getPaddingStart
    9760:9760:int getPaddingTop() -> getPaddingTop
    9417:9417:int getPosition(android.view.View) -> getPosition
    11359:11368:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    10506:10506:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    11228:11228:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    11212:11212:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    10461:10461:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    10339:10362:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    9724:9724:int getWidth() -> getWidth
    9692:9692:int getWidthMode() -> getWidthMode
    11393:11401:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    8861:8861:boolean isAttachedToWindow() -> isAttachedToWindow
    8722:8722:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    10708:10723:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8787:8787:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    11259:11259:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    10080:10093:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    9215:9215:boolean isSmoothScrolling() -> isSmoothScrolling
    10685:10693:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    10319:10324:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    10109:10126:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    9598:9605:void moveView(int,int) -> moveView
    9864:9867:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9876:9879:void offsetChildrenVertical(int) -> offsetChildrenVertical
    10774:10774:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    10800:10800:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    8913:8913:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    8921:8921:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8948:8949:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10534:10534:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    11124:11125:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    11140:11151:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    11075:11076:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    11105:11120:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    11155:11161:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    11180:11180:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10555:10555:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    10818:10818:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    10809:10809:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    10855:10855:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    10825:10825:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    10834:10834:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10842:10843:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    9029:9029:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10972:10973:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    10733:10733:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10755:10755:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    11030:11030:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    11014:11014:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    11050:11050:void onScrollStateChanged(int) -> onScrollStateChanged
    11039:11042:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    11264:11264:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    11280:11316:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    11322:11322:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    11343:11343:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    11065:11071:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9969:9996:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    9642:9644:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    9653:9656:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8892:8895:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    9369:9370:void removeView(android.view.View) -> removeView
    9381:9385:void removeViewAt(int) -> removeViewAt
    10622:10622:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    10643:10657:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    8581:8584:void requestLayout() -> requestLayout
    11192:11193:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9941:9957:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    9139:9139:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    11372:11376:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8492:8503:void setMeasureSpecs(int,int) -> setMeasureSpecs
    8570:8575:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10983:10984:void setMeasuredDimension(int,int) -> setMeasuredDimension
    8519:8548:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    8476:8489:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    10049:10052:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    11389:11389:boolean shouldMeasureTwice() -> shouldMeasureTwice
    10034:10036:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    9203:9209:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    11033:11036:void stopSmoothScroller() -> stopSmoothScroller
    8748:8748:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    8325:8325:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8328:8328:android.view.View getChildAt(int) -> getChildAt
    8350:8352:int getChildEnd(android.view.View) -> getChildEnd
    8343:8345:int getChildStart(android.view.View) -> getChildStart
    8338:8338:int getParentEnd() -> getParentEnd
    8333:8333:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    8361:8361:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8364:8364:android.view.View getChildAt(int) -> getChildAt
    8387:8389:int getChildEnd(android.view.View) -> getChildEnd
    8380:8382:int getChildStart(android.view.View) -> getChildStart
    8374:8375:int getParentEnd() -> getParentEnd
    8369:8369:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    11407:11407:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12430:12439:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    12430:12443:void <init>(int,int) -> <init>
    12430:12447:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    12430:12451:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    12430:12455:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    12514:12514:int getViewLayoutPosition() -> getViewLayoutPosition
    12496:12496:boolean isItemChanged() -> isItemChanged
    12485:12485:boolean isItemRemoved() -> isItemRemoved
    12474:12474:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener -> androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13529:13529:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$OnItemTouchListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    11591:11591:void <init>() -> <init>
    11600:11600:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    11614:11614:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    6140:6192:void <init>() -> <init>
    6318:6319:void attach() -> attach
    6333:6334:void attachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter) -> attachForPoolingContainer
    6198:6205:void clear() -> clear
    6322:6323:void detach() -> detach
    6347:6358:void detachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> detachForPoolingContainer
    6302:6305:void factorInBindTime(int,long) -> factorInBindTime
    6296:6299:void factorInCreateTime(int,long) -> factorInCreateTime
    6239:6248:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    6385:6390:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    6373:6382:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6275:6286:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    6289:6292:long runningAverage(long,long) -> runningAverage
    6313:6314:boolean willBindInTime(int,long,long) -> willBindInTime
    6308:6309:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    6157:6161:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    6466:6476:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    7094:7113:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6868:6887:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    6489:6491:void clear() -> clear
    7524:7539:void clearOldPositions() -> clearOldPositions
    7183:7187:void clearScrap() -> clearScrap
    6658:6665:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    7337:7352:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    7192:7217:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    7481:7485:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    7175:7175:int getScrapCount() -> getScrapCount
    6521:6521:java.util.List getScrapList() -> getScrapList
    7283:7331:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    7228:7278:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    7179:7179:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6684:6684:android.view.View getViewForPosition(int) -> getViewForPosition
    6688:6688:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6890:6893:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6896:6914:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    7542:7550:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    7508:7521:void markKnownViewsInvalid() -> markKnownViewsInvalid
    7452:7457:void maybeSendPoolingContainerAttach() -> maybeSendPoolingContainerAttach
    7393:7405:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    7365:7390:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    7414:7433:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    7356:7361:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    7470:7471:void onAttachedToWindow() -> onAttachedToWindow
    7474:7478:void onDetachedFromWindow() -> onDetachedFromWindow
    7460:7461:void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter) -> poolingContainerDetach
    7464:7467:void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> poolingContainerDetach
    7121:7126:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6959:6967:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6984:6990:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6929:6956:void recycleView(android.view.View) -> recycleView
    6998:7083:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    7138:7155:void scrapView(android.view.View) -> scrapView
    7440:7449:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    7436:7437:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    6499:6501:void setViewCacheSize(int) -> setViewCacheSize
    6573:6589:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6711:6864:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    7164:7172:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    6504:6512:void updateViewCacheSize() -> updateViewCacheSize
    6535:6556:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    7489:7505:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerListener -> androidx.recyclerview.widget.RecyclerView$RecyclerListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    6009:6010:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6014:6021:void onChanged() -> onChanged
    6025:6029:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    6033:6037:void onItemRangeInserted(int,int) -> onItemRangeInserted
    6041:6045:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    6056:6062:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13196:13196:void <clinit>() -> <clinit>
    13174:13177:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    13183:13184:void <init>(android.os.Parcelable) -> <init>
    13193:13194:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    13188:13190:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13196:13196:void <init>() -> <init>
    13196:13196:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    13196:13196:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    13199:13199:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    13204:13204:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    13196:13196:java.lang.Object[] newArray(int) -> newArray
    13209:13209:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12611:12629:void <init>() -> <init>
    12685:12692:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    12822:12822:android.view.View findViewByPosition(int) -> findViewByPosition
    12815:12815:int getChildCount() -> getChildCount
    12808:12808:int getChildPosition(android.view.View) -> getChildPosition
    12701:12701:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    12753:12753:int getTargetPosition() -> getTargetPosition
    12735:12735:boolean isPendingInitialRun() -> isPendingInitialRun
    12743:12743:boolean isRunning() -> isRunning
    12849:12853:void normalize(android.graphics.PointF) -> normalize
    12757:12802:void onAnimation(int,int) -> onAnimation
    12835:12841:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    12671:12672:void setTargetPosition(int) -> setTargetPosition
    12646:12668:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    12711:12725:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12923:12924:void <init>(int,int) -> <init>
    12908:12948:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12970:12970:boolean hasJumpTarget() -> hasJumpTarget
    12966:12967:void jumpTo(int) -> jumpTo
    12974:12995:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    13063:13068:void update(int,int,int,android.view.animation.Interpolator) -> update
    12998:13004:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13224:13296:void <init>() -> <init>
    13230:13235:void assertLayoutStep(int) -> assertLayoutStep
    13477:13479:int getItemCount() -> getItemCount
    13431:13431:int getTargetScrollPosition() -> getTargetScrollPosition
    13441:13441:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    13353:13353:boolean isPreLayout() -> isPreLayout
    13322:13327:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    13506:13506:java.lang.String toString() -> toString
    13364:13364:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    6124:6124:void <init>() -> <init>
    6128:6128:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5721:5731:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5971:5979:int computeScrollDuration(int,int) -> computeScrollDuration
    5903:5915:void fling(int,int) -> fling
    5898:5900:void internalPostOnAnimation() -> internalPostOnAnimation
    5890:5895:void postOnAnimation() -> postOnAnimation
    5735:5887:void run() -> run
    5933:5962:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5983:5985:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    11782:11782:void <clinit>() -> <clinit>
    11676:11817:void <init>(android.view.View) -> <init>
    12115:12121:void addChangePayload(java.lang.Object) -> addChangePayload
    12111:12112:void addFlags(int) -> addFlags
    11842:11844:void clearOldPosition() -> clearOldPosition
    12131:12135:void clearPayload() -> clearPayload
    12058:12059:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    12062:12063:void clearTmpDetachFlag() -> clearTmpDetachFlag
    12124:12128:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    12269:12269:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11820:11823:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11995:11998:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    11942:11957:int getBindingAdapterPosition() -> getBindingAdapterPosition
    12035:12035:long getItemId() -> getItemId
    12042:12042:int getItemViewType() -> getItemViewType
    11894:11894:int getLayoutPosition() -> getLayoutPosition
    12025:12025:int getOldPosition() -> getOldPosition
    12138:12147:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    12091:12091:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    12103:12103:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    12099:12099:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    12083:12083:boolean isBound() -> isBound
    12075:12075:boolean isInvalid() -> isInvalid
    12252:12253:boolean isRecyclable() -> isRecyclable
    12087:12087:boolean isRemoved() -> isRemoved
    12046:12046:boolean isScrap() -> isScrap
    12095:12095:boolean isTmpDetached() -> isTmpDetached
    12273:12273:boolean isUpdated() -> isUpdated
    12079:12079:boolean needsUpdate() -> needsUpdate
    11826:11839:void offsetPosition(int,boolean) -> offsetPosition
    12171:12179:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    12185:12188:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    12152:12164:void resetInternal() -> resetInternal
    11847:11850:void saveOldPosition() -> saveOldPosition
    12107:12108:void setFlags(int,int) -> setFlags
    12228:12245:void setIsRecyclable(boolean) -> setIsRecyclable
    12070:12072:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    12261:12261:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11853:11853:boolean shouldIgnore() -> shouldIgnore
    12193:12212:java.lang.String toString() -> toString
    12050:12051:void unScrap() -> unScrap
    12054:12054:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
# {"id":"sourceFile","fileName":"RecyclerViewAccessibilityDelegate.java"}
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    109:109:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    90:97:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    79:83:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    64:71:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
# {"id":"sourceFile","fileName":"RecyclerViewAccessibilityDelegate.java"}
    122:131:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    219:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    263:267:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    148:148:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    241:247:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    157:170:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    230:236:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    252:256:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    178:191:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    138:142:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    197:203:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    208:214:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
# {"id":"sourceFile","fileName":"ScrollbarHelper.java"}
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
# {"id":"sourceFile","fileName":"SimpleItemAnimator.java"}
    36:42:void <init>() -> <init>
    115:127:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    153:163:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    91:108:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    134:143:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    85:85:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    311:313:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    358:359:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    327:329:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    372:373:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    300:302:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    348:349:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    285:287:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    338:339:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    423:423:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    411:411:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    477:477:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    463:463:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    448:448:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    436:436:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    398:398:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    386:386:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
# {"id":"sourceFile","fileName":"SnapHelper.java"}
    35:43:void <init>() -> <init>
    94:107:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    124:126:void destroyCallbacks() -> destroyCallbacks
    66:76:boolean onFling(int,int) -> onFling
    113:118:void setupCallbacks() -> setupCallbacks
    159:175:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    184:199:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
# {"id":"sourceFile","fileName":"SnapHelper.java"}
    44:45:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    49:54:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    58:61:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    106:235:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1780:1783:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    794:827:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1839:1845:boolean areAllEndsEqual() -> areAllEndsEqual
    1849:1855:boolean areAllStartsEqual() -> areAllStartsEqual
    527:530:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1724:1737:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2017:2021:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2001:2001:boolean canScrollHorizontally() -> canScrollHorizontally
    1996:1996:boolean canScrollVertically() -> canScrollVertically
    269:310:boolean checkForGaps() -> checkForGaps
    2247:2247:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    402:415:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2097:2129:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1096:1096:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1076:1076:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1116:1116:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1100:1105:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1080:1085:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1120:1125:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2026:2038:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1111:1111:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1091:1091:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1131:1131:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2366:2399:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1706:1711:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1715:1720:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    257:260:void createOrientationHelpers() -> createOrientationHelpers
    1549:1702:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2192:2200:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1361:1380:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1331:1351:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1319:1321:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2209:2216:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1385:1400:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1404:1419:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2222:2226:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2233:2233:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2238:2241:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2182:2183:int getFirstChildPosition() -> getFirstChildPosition
    2177:2178:int getLastChildPosition() -> getLastChildPosition
    1859:1866:int getMaxEnd(int) -> getMaxEnd
    1817:1824:int getMaxStart(int) -> getMaxStart
    1870:1877:int getMinEnd(int) -> getMinEnd
    1828:1835:int getMinStart(int) -> getMinStart
    1954:1990:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1505:1545:void handleUpdate(int,int,int) -> handleUpdate
    338:398:android.view.View hasGapsToFix() -> hasGapsToFix
    548:550:void invalidateSpanAssignments() -> invalidateSpanAssignments
    253:253:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    567:567:boolean isLayoutRTL() -> isLayoutRTL
    1136:1197:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1201:1214:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1460:1464:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1468:1472:void offsetChildrenVertical(int) -> offsetChildrenVertical
    611:615:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    322:330:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2258:2352:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1294:1311:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1481:1482:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1486:1488:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1492:1493:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1476:1477:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1498:1499:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    604:605:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    619:730:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    734:739:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1230:1240:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1244:1289:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    315:318:void onScrollStateChanged(int) -> onScrollStateChanged
    1944:1947:boolean preferLastSpan(int) -> preferLastSpan
    2134:2146:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1787:1790:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1740:1776:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1910:1938:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1881:1907:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    742:788:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    559:564:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2149:2173:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2007:2007:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2051:2057:void scrollToPosition(int) -> scrollToPosition
    2013:2013:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1453:1456:void setLayoutStateDirection(int) -> setLayoutStateDirection
    586:600:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    448:460:void setOrientation(int) -> setOrientation
    476:482:void setReverseLayout(boolean) -> setReverseLayout
    428:439:void setSpanCount(int) -> setSpanCount
    2044:2047:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    943:943:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1793:1799:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    848:852:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    857:931:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:841:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1422:1450:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    935:939:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1802:1814:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1217:1225:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    215:215:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    218:219:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3243:3245:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3270:3272:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3275:3280:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3248:3256:void reset() -> reset
    3259:3267:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    2424:2425:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2428:2429:void <init>(int,int) -> <init>
    2432:2433:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2436:2437:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2462:2462:boolean isFullSpan() -> isFullSpan
    2452:2453:void setFullSpan(boolean) -> setFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    2812:2812:void <init>() -> <init>
    2983:3003:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2891:2895:void clear() -> clear
    2879:2888:void ensureSize(int) -> ensureSize
    2823:2831:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3027:3042:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3006:3015:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2858:2861:int getSpan(int) -> getSpan
    2838:2853:int invalidateAfter(int) -> invalidateAfter
    2957:2979:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2928:2937:void offsetForAddition(int,int) -> offsetForAddition
    2898:2907:void offsetForRemoval(int,int) -> offsetForRemoval
    2940:2950:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2910:2925:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2866:2868:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2871:2875:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3105:3105:void <clinit>() -> <clinit>
    3059:3068:void <init>(android.os.Parcel) -> <init>
    3070:3071:void <init>() -> <init>
    3079:3079:int describeContents() -> describeContents
    3074:3074:int getGapForSpan(int) -> getGapForSpan
    3097:3101:java.lang.String toString() -> toString
    3084:3093:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3106:3106:void <init>() -> <init>
    3106:3106:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3109:3109:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3106:3106:java.lang.Object[] newArray(int) -> newArray
    3114:3114:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3215:3215:void <clinit>() -> <clinit>
    3138:3139:void <init>() -> <init>
    3141:3162:void <init>(android.os.Parcel) -> <init>
    3164:3175:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3194:3194:int describeContents() -> describeContents
    3186:3190:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3178:3183:void invalidateSpanInfo() -> invalidateSpanInfo
    3199:3213:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3216:3216:void <init>() -> <init>
    3216:3216:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3219:3219:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3216:3216:java.lang.Object[] newArray(int) -> newArray
    3224:3224:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    2483:2491:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2574:2584:void appendToSpan(android.view.View) -> appendToSpan
    2589:2606:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2539:2549:void calculateCachedEnd() -> calculateCachedEnd
    2505:2515:void calculateCachedStart() -> calculateCachedStart
    2609:2612:void clear() -> clear
    2674:2676:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2692:2694:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2730:2757:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2767:2767:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2651:2651:int getDeletedSize() -> getDeletedSize
    2527:2535:int getEndLine(int) -> getEndLine
    2553:2557:int getEndLine() -> getEndLine
    2775:2804:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2655:2655:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2494:2501:int getStartLine(int) -> getStartLine
    2519:2523:int getStartLine() -> getStartLine
    2615:2617:void invalidateCache() -> invalidateCache
    2659:2665:void onOffset(int) -> onOffset
    2624:2635:void popEnd() -> popEnd
    2638:2648:void popStart() -> popStart
    2561:2571:void prependToSpan(android.view.View) -> prependToSpan
    2620:2621:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
    136:137:void <init>() -> <init>
    148:149:void addFlags(int) -> addFlags
    166:189:boolean boundsMatch() -> boundsMatch
    156:162:int compare(int,int) -> compare
    152:153:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> androidx.recyclerview.widget.ViewBoundsCheck$Callback:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
    36:47:void <init>() -> <init>
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:56:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:274:void onDetach() -> onDetach
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
    307:307:void <clinit>() -> <clinit>
    309:310:void <init>() -> <init>
    326:327:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback -> androidx.recyclerview.widget.ViewInfoStore$ProcessCallback:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
androidx.room.AutoCloser -> androidx.room.AutoCloser:
# {"id":"sourceFile","fileName":"AutoCloser.kt"}
    0:0:void $r8$lambda$IDlpiQzGERMyiJhLp9dqH94Jfq8(androidx.room.AutoCloser) -> $r8$lambda$IDlpiQzGERMyiJhLp9dqH94Jfq8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$Xeo1sT4yrRJFpXIV1D3OJ8zyhr8(androidx.room.AutoCloser) -> $r8$lambda$Xeo1sT4yrRJFpXIV1D3OJ8zyhr8
      # {"id":"com.android.tools.r8.synthesized"}
    40:54:void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor) -> <init>
    60:60:void setLastDecrementRefCountTimeStamp$room_runtime_release(long) -> <init>
    60:60:void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor):60 -> <init>
    68:68:void executeAutoCloser$lambda$0(androidx.room.AutoCloser) -> <init>
    68:68:void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor):68 -> <init>
    40:70:void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor) -> <init>
    71:99:void autoCloser$lambda$3(androidx.room.AutoCloser) -> autoCloser$lambda$3
    185:190:void closeDatabaseIfOpen() -> closeDatabaseIfOpen
    160:176:void decrementCountAndScheduleClose() -> decrementCountAndScheduleClose
    68:68:void executeAutoCloser$lambda$0(androidx.room.AutoCloser) -> executeAutoCloser$lambda$0
    119:123:java.lang.Object executeRefCountingFunction(kotlin.jvm.functions.Function1) -> executeRefCountingFunction
    64:64:void setDelegateDatabase$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> getDelegateDatabase$room_runtime_release
    64:64:androidx.sqlite.db.SupportSQLiteDatabase getDelegateDatabase$room_runtime_release():64 -> getDelegateDatabase$room_runtime_release
    45:45:void setDelegateOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper) -> getDelegateOpenHelper
    45:45:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegateOpenHelper():45 -> getDelegateOpenHelper
    139:228:androidx.sqlite.db.SupportSQLiteDatabase incrementCountAndEnsureDbIsOpen() -> incrementCountAndEnsureDbIsOpen
    144:228:androidx.sqlite.db.SupportSQLiteDatabase incrementCountAndEnsureDbIsOpen() -> incrementCountAndEnsureDbIsOpen
    109:110:void init(androidx.sqlite.db.SupportSQLiteOpenHelper) -> init
    220:221:void setAutoCloseCallback(java.lang.Runnable) -> setAutoCloseCallback
    45:45:void setDelegateOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper) -> setDelegateOpenHelper
androidx.room.AutoCloser$$ExternalSyntheticLambda0 -> androidx.room.AutoCloser$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoCloser androidx.room.AutoCloser$$InternalSyntheticLambda$1$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$0.f$0 -> f$0
    0:0:void androidx.room.AutoCloser$$InternalSyntheticLambda$1$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$0.<init>(androidx.room.AutoCloser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.room.AutoCloser$$InternalSyntheticLambda$1$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoCloser$$ExternalSyntheticLambda1 -> androidx.room.AutoCloser$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoCloser androidx.room.AutoCloser$$InternalSyntheticLambda$1$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$1.f$0 -> f$0
    0:0:void androidx.room.AutoCloser$$InternalSyntheticLambda$1$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$1.<init>(androidx.room.AutoCloser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.room.AutoCloser$$InternalSyntheticLambda$1$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoCloser$Companion -> androidx.room.AutoCloser$Companion:
# {"id":"sourceFile","fileName":"AutoCloser.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    223:223:void <init>() -> <init>
androidx.room.AutoClosingRoomOpenHelper -> androidx.room.AutoClosingRoomOpenHelper:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    40:52:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper,androidx.room.AutoCloser) -> <init>
    71:72:void close() -> close
    41:41:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate() -> getDelegate
    57:58:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    77:78:void <init>(androidx.room.AutoCloser) -> <init>
    91:100:void beginTransaction() -> beginTransaction
    105:114:void beginTransactionNonExclusive() -> beginTransactionNonExclusive
    404:405:void close() -> close
    85:85:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    148:156:void endTransaction() -> endTransaction
    305:309:void execSQL(java.lang.String) -> execSQL
    393:395:java.util.List getAttachedDbs() -> getAttachedDbs
    341:343:java.lang.String getPath() -> getPath
    165:168:boolean inTransaction() -> inTransaction
    328:329:boolean isOpen() -> isOpen
    385:390:boolean isWriteAheadLoggingEnabled() -> isWriteAheadLoggingEnabled
    81:82:void pokeOpen() -> pokeOpen
    225:231:android.database.Cursor query(java.lang.String) -> query
    245:251:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    259:265:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    159:162:void setTransactionSuccessful() -> setTransactionSuccessful
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    393:393:java.lang.Object invoke(java.lang.Object) -> invoke
    394:394:java.util.List invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    305:305:java.lang.Object invoke(java.lang.Object) -> invoke
    306:307:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    168:168:java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
    168:168:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    385:385:java.lang.Object invoke(java.lang.Object) -> invoke
    386:387:java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    341:341:java.lang.Object invoke(java.lang.Object) -> invoke
    342:342:java.lang.String invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    81:81:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
    81:81:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    461:461:void access$doBinds(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.sqlite.db.SupportSQLiteStatement) -> <init>
    461:461:void <init>(java.lang.String,androidx.room.AutoCloser):461 -> <init>
    462:465:void <init>(java.lang.String,androidx.room.AutoCloser) -> <init>
    461:461:void access$doBinds(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.sqlite.db.SupportSQLiteStatement) -> <init>
    461:461:void <init>(java.lang.String,androidx.room.AutoCloser):461 -> <init>
    461:461:void access$doBinds(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.sqlite.db.SupportSQLiteStatement) -> access$doBinds
    461:461:void access$doBinds(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.sqlite.db.SupportSQLiteStatement) -> access$getSql$p
    461:461:java.lang.String access$getSql$p(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement):461 -> access$getSql$p
    563:564:void bindBlob(int,byte[]) -> bindBlob
    555:556:void bindDouble(int,double) -> bindDouble
    551:552:void bindLong(int,long) -> bindLong
    547:548:void bindNull(int) -> bindNull
    559:560:void bindString(int,java.lang.String) -> bindString
    514:514:void close() -> close
    478:572:void doBinds(androidx.sqlite.db.SupportSQLiteStatement) -> doBinds
    498:573:void doBinds(androidx.sqlite.db.SupportSQLiteStatement) -> doBinds
    529:529:long executeInsert() -> executeInsert
    469:469:java.lang.Object executeSqliteStatementWithRefCount(kotlin.jvm.functions.Function1) -> executeSqliteStatementWithRefCount
    524:524:int executeUpdateDelete() -> executeUpdateDelete
    501:509:void saveBinds(int,java.lang.Object) -> saveBinds
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    529:529:java.lang.Object invoke(java.lang.Object) -> invoke
    530:530:java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteStatement) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    469:469:java.lang.Object invoke(java.lang.Object) -> invoke
    470:472:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1 -> androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    524:524:java.lang.Object invoke(java.lang.Object) -> invoke
    525:525:java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteStatement) -> invoke
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor -> androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelper.kt"}
    413:415:void <init>(android.database.Cursor,androidx.room.AutoCloser) -> <init>
    419:421:void close() -> close
    433:433:android.net.Uri getNotificationUri() -> getNotificationUri
    438:438:java.util.List getNotificationUris() -> getNotificationUris
    443:444:void setExtras(android.os.Bundle) -> setExtras
    428:429:void setNotificationUris(android.content.ContentResolver,java.util.List) -> setNotificationUris
androidx.room.AutoClosingRoomOpenHelperFactory -> androidx.room.AutoClosingRoomOpenHelperFactory:
# {"id":"sourceFile","fileName":"AutoClosingRoomOpenHelperFactory.kt"}
    23:25:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.AutoCloser) -> <init>
    23:23:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
    33:33:androidx.room.AutoClosingRoomOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.room.CoroutinesRoom -> androidx.room.CoroutinesRoom:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    0:0:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
    0:0:java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
androidx.room.CoroutinesRoom$Companion -> androidx.room.CoroutinesRoom$Companion:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    48:48:void <init>() -> <init>
    56:64:java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
    77:85:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
    314:322:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> execute
    314:322:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation):85 -> execute
    86:100:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
    314:324:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> execute
    314:324:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation):85 -> execute
    85:85:java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation) -> execute
androidx.room.CoroutinesRoom$Companion$execute$2 -> androidx.room.CoroutinesRoom$Companion$execute$2:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    64:65:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.room.CoroutinesRoom$Companion$execute$4$1 -> androidx.room.CoroutinesRoom$Companion$execute$4$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    94:94:java.lang.Object invoke(java.lang.Object) -> invoke
    95:99:void invoke(java.lang.Throwable) -> invoke
androidx.room.CoroutinesRoom$Companion$execute$4$job$1 -> androidx.room.CoroutinesRoom$Companion$execute$4$job$1:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    86:93:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.room.CoroutinesRoomKt -> androidx.room.CoroutinesRoomKt:
# {"id":"sourceFile","fileName":"CoroutinesRoom.kt"}
    149:165:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase) -> getQueryDispatcher
    361:361:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getQueryDispatcher
    361:361:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase):149 -> getQueryDispatcher
    150:150:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase) -> getQueryDispatcher
    361:365:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getQueryDispatcher
    361:365:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase):149 -> getQueryDispatcher
    149:165:kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase) -> getQueryDispatcher
    160:172:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase) -> getTransactionDispatcher
    361:361:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getTransactionDispatcher
    361:361:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase):160 -> getTransactionDispatcher
    161:161:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase) -> getTransactionDispatcher
    361:365:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getTransactionDispatcher
    361:365:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase):160 -> getTransactionDispatcher
    160:172:kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase) -> getTransactionDispatcher
androidx.room.DatabaseConfiguration -> androidx.room.DatabaseConfiguration:
# {"id":"sourceFile","fileName":"DatabaseConfiguration.kt"}
    32:129:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,android.content.Intent,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List,java.util.List) -> <init>
    678:686:boolean isMigrationRequired(int,int) -> isMigrationRequired
androidx.room.DelegatingOpenHelper -> androidx.room.DelegatingOpenHelper:
# {"id":"sourceFile","fileName":"DelegatingOpenHelper.kt"}
androidx.room.EntityDeletionOrUpdateAdapter -> androidx.room.EntityDeletionOrUpdateAdapter:
# {"id":"sourceFile","fileName":"EntityDeletionOrUpdateAdapter.kt"}
    33:35:void <init>(androidx.room.RoomDatabase) -> <init>
    59:65:int handle(java.lang.Object) -> handle
androidx.room.EntityInsertionAdapter -> androidx.room.EntityInsertionAdapter:
# {"id":"sourceFile","fileName":"EntityInsertionAdapter.kt"}
    33:33:void <init>(androidx.room.RoomDatabase) -> <init>
    99:105:long insertAndReturnId(java.lang.Object) -> insertAndReturnId
androidx.room.IMultiInstanceInvalidationCallback -> androidx.room.IMultiInstanceInvalidationCallback:
# {"id":"sourceFile","fileName":"IMultiInstanceInvalidationCallback.java"}
androidx.room.IMultiInstanceInvalidationCallback$Stub -> androidx.room.IMultiInstanceInvalidationCallback$Stub:
# {"id":"sourceFile","fileName":"IMultiInstanceInvalidationCallback.java"}
    33:35:void <init>() -> <init>
    53:53:android.os.IBinder asBinder() -> asBinder
    42:49:androidx.room.IMultiInstanceInvalidationCallback asInterface(android.os.IBinder) -> asInterface
    57:83:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy:
# {"id":"sourceFile","fileName":"IMultiInstanceInvalidationCallback.java"}
    89:91:void <init>(android.os.IBinder) -> <init>
    94:94:android.os.IBinder asBinder() -> asBinder
    107:116:void onInvalidation(java.lang.String[]) -> onInvalidation
androidx.room.IMultiInstanceInvalidationService -> androidx.room.IMultiInstanceInvalidationService:
# {"id":"sourceFile","fileName":"IMultiInstanceInvalidationService.java"}
androidx.room.IMultiInstanceInvalidationService$Stub -> androidx.room.IMultiInstanceInvalidationService$Stub:
# {"id":"sourceFile","fileName":"IMultiInstanceInvalidationService.java"}
    62:64:void <init>() -> <init>
    82:82:android.os.IBinder asBinder() -> asBinder
    71:78:androidx.room.IMultiInstanceInvalidationService asInterface(android.os.IBinder) -> asInterface
    86:135:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationService$Stub$Proxy:
# {"id":"sourceFile","fileName":"IMultiInstanceInvalidationService.java"}
    141:143:void <init>(android.os.IBinder) -> <init>
    146:146:android.os.IBinder asBinder() -> asBinder
    216:226:void broadcastInvalidation(int,java.lang.String[]) -> broadcastInvalidation
    162:177:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> registerCallback
androidx.room.Index$Order -> androidx.room.Index$Order:
# {"id":"sourceFile","fileName":"Index.kt"}
    102:109:void <clinit>() -> <clinit>
    96:96:void <init>(java.lang.String,int) -> <init>
androidx.room.InvalidationLiveDataContainer -> androidx.room.InvalidationLiveDataContainer:
# {"id":"sourceFile","fileName":"InvalidationLiveDataContainer.kt"}
    31:32:void <init>(androidx.room.RoomDatabase) -> <init>
androidx.room.InvalidationTracker -> androidx.room.InvalidationTracker:
# {"id":"sourceFile","fileName":"InvalidationTracker.kt"}
    0:0:void $r8$lambda$suwK2nhHii_mmyBI6WBF2vxnuZI(androidx.room.InvalidationTracker) -> $r8$lambda$suwK2nhHii_mmyBI6WBF2vxnuZI
      # {"id":"com.android.tools.r8.synthesized"}
    814:814:void <clinit>() -> <clinit>
    56:56:androidx.room.AutoCloser access$getAutoCloser$p(androidx.room.InvalidationTracker) -> <init>
    56:56:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]):56 -> <init>
    57:57:androidx.room.RoomDatabase getDatabase$room_runtime_release() -> <init>
    57:57:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]):57 -> <init>
    58:59:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]) -> <init>
    69:69:java.util.concurrent.atomic.AtomicBoolean getPendingRefresh() -> <init>
    69:69:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]):69 -> <init>
    77:80:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]) -> <init>
    83:83:androidx.arch.core.internal.SafeIterableMap getObserverMap$room_runtime_release() -> <init>
    83:83:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]):83 -> <init>
    87:847:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]) -> <init>
    109:848:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]) -> <init>
    56:56:androidx.room.AutoCloser access$getAutoCloser$p(androidx.room.InvalidationTracker) -> <init>
    56:56:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]):56 -> <init>
    56:56:androidx.room.AutoCloser access$getAutoCloser$p(androidx.room.InvalidationTracker) -> access$getAutoCloser$p
    250:251:void addObserver(androidx.room.InvalidationTracker$Observer) -> addObserver
    11335:11335:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(java.lang.Object[],kotlin.jvm.functions.Function1) -> addObserver
    11335:11335:void addObserver(androidx.room.InvalidationTracker$Observer):251 -> addObserver
    11670:11671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> addObserver
    11670:11671:void addObserver(androidx.room.InvalidationTracker$Observer):251 -> addObserver
    252:252:void addObserver(androidx.room.InvalidationTracker$Observer) -> addObserver
    11670:11671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> addObserver
    11670:11671:void addObserver(androidx.room.InvalidationTracker$Observer):251 -> addObserver
    253:253:void addObserver(androidx.room.InvalidationTracker$Observer) -> addObserver
    11672:11672:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> addObserver
    11672:11672:void addObserver(androidx.room.InvalidationTracker$Observer):251 -> addObserver
    11335:11335:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(java.lang.Object[],kotlin.jvm.functions.Function1) -> addObserver
    11335:11335:void addObserver(androidx.room.InvalidationTracker$Observer):251 -> addObserver
    251:268:void addObserver(androidx.room.InvalidationTracker$Observer) -> addObserver
    332:343:boolean ensureInitialization$room_runtime_release() -> ensureInitialization$room_runtime_release
    75:75:void setCleanupStatement$room_runtime_release(androidx.sqlite.db.SupportSQLiteStatement) -> getCleanupStatement$room_runtime_release
    75:75:androidx.sqlite.db.SupportSQLiteStatement getCleanupStatement$room_runtime_release():75 -> getCleanupStatement$room_runtime_release
    57:57:androidx.room.RoomDatabase getDatabase$room_runtime_release() -> getDatabase$room_runtime_release
    83:83:androidx.arch.core.internal.SafeIterableMap getObserverMap$room_runtime_release() -> getObserverMap$room_runtime_release
    69:69:java.util.concurrent.atomic.AtomicBoolean getPendingRefresh() -> getPendingRefresh
    62:62:java.util.Map getTableIdLookup$room_runtime_release() -> getTableIdLookup$room_runtime_release
    148:163:void internalInit$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> internalInit$room_runtime_release
    471:859:void notifyObserversByTableNames(java.lang.String[]) -> notifyObserversByTableNames
    471:860:void notifyObserversByTableNames(java.lang.String[]) -> notifyObserversByTableNames
    166:171:void onAutoCloseCallback() -> onAutoCloseCallback
    435:443:void refreshVersionsAsync() -> refreshVersionsAsync
    323:329:void removeObserver(androidx.room.InvalidationTracker$Observer) -> removeObserver
    287:855:java.lang.String[] resolveViews(java.lang.String[]) -> resolveViews
    287:856:java.lang.String[] resolveViews(java.lang.String[]) -> resolveViews
    37:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> resolveViews
    37:38:java.lang.String[] resolveViews(java.lang.String[]):295 -> resolveViews
    287:287:java.lang.String[] resolveViews(java.lang.String[]) -> resolveViews
    138:140:void setAutoCloser$room_runtime_release(androidx.room.AutoCloser) -> setAutoCloser$room_runtime_release
    178:185:void startMultiInstanceInvalidation$room_runtime_release(android.content.Context,java.lang.String,android.content.Intent) -> startMultiInstanceInvalidation$room_runtime_release
    204:228:void startTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> startTrackingTable
    193:201:void stopTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> stopTrackingTable
    481:862:void syncTriggers$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> syncTriggers$room_runtime_release
    492:863:void syncTriggers$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> syncTriggers$room_runtime_release
    529:533:void syncTriggers$room_runtime_release() -> syncTriggers$room_runtime_release
androidx.room.InvalidationTracker$$ExternalSyntheticLambda0 -> androidx.room.InvalidationTracker$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.InvalidationTracker androidx.room.InvalidationTracker$$InternalSyntheticLambda$1$7002e9fde3521f548f6f7d8407c3101ba51ad0ca9c2ca5cd33fee50c4f3a9c31$0.f$0 -> f$0
    0:0:void androidx.room.InvalidationTracker$$InternalSyntheticLambda$1$7002e9fde3521f548f6f7d8407c3101ba51ad0ca9c2ca5cd33fee50c4f3a9c31$0.<init>(androidx.room.InvalidationTracker) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.room.InvalidationTracker$$InternalSyntheticLambda$1$7002e9fde3521f548f6f7d8407c3101ba51ad0ca9c2ca5cd33fee50c4f3a9c31$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.InvalidationTracker$Companion -> androidx.room.InvalidationTracker$Companion:
# {"id":"sourceFile","fileName":"InvalidationTracker.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    813:813:void <init>() -> <init>
    837:844:void beginTransactionInternal$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> beginTransactionInternal$room_runtime_release
    834:834:java.lang.String getTriggerName$room_runtime_release(java.lang.String,java.lang.String) -> getTriggerName$room_runtime_release
androidx.room.InvalidationTracker$ObservedTableTracker -> androidx.room.InvalidationTracker$ObservedTableTracker:
# {"id":"sourceFile","fileName":"InvalidationTracker.kt"}
    699:699:void <init>(int) -> <init>
    701:701:long[] getTableObservers() -> <init>
    701:701:void <init>(int):701 -> <init>
    699:708:void <init>(int) -> <init>
    768:852:int[] getTablesToSync() -> getTablesToSync
    781:853:int[] getTablesToSync() -> getTablesToSync
    716:847:boolean onAdded(int[]) -> onAdded
    717:848:boolean onAdded(int[]) -> onAdded
    734:849:boolean onRemoved(int[]) -> onRemoved
    735:850:boolean onRemoved(int[]) -> onRemoved
    753:757:void resetTriggerState() -> resetTriggerState
androidx.room.InvalidationTracker$ObservedTableTracker$Companion -> androidx.room.InvalidationTracker$ObservedTableTracker$Companion:
# {"id":"sourceFile","fileName":"InvalidationTracker.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    786:786:void <init>() -> <init>
androidx.room.InvalidationTracker$Observer -> androidx.room.InvalidationTracker$Observer:
# {"id":"sourceFile","fileName":"InvalidationTracker.kt"}
    666:666:java.lang.String[] getTables$room_runtime_release() -> <init>
    666:666:void <init>(java.lang.String[]):666 -> <init>
    666:666:java.lang.String[] getTables$room_runtime_release() -> getTables$room_runtime_release
androidx.room.InvalidationTracker$ObserverWrapper -> androidx.room.InvalidationTracker$ObserverWrapper:
# {"id":"sourceFile","fileName":"InvalidationTracker.kt"}
    589:589:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]) -> <init>
    590:590:androidx.room.InvalidationTracker$Observer getObserver$room_runtime_release() -> <init>
    590:590:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]):590 -> <init>
    591:591:int[] getTableIds$room_runtime_release() -> <init>
    591:591:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]):591 -> <init>
    589:602:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]) -> <init>
    591:591:int[] getTableIds$room_runtime_release() -> getTableIds$room_runtime_release
    611:848:void notifyByTableInvalidStatus$room_runtime_release(java.util.Set) -> notifyByTableInvalidStatus$room_runtime_release
    620:848:void notifyByTableInvalidStatus$room_runtime_release(java.util.Set) -> notifyByTableInvalidStatus$room_runtime_release
    611:849:void notifyByTableInvalidStatus$room_runtime_release(java.util.Set) -> notifyByTableInvalidStatus$room_runtime_release
    639:852:void notifyByTableNames$room_runtime_release(java.lang.String[]) -> notifyByTableNames$room_runtime_release
    12708:12708:boolean kotlin.collections.ArraysKt___ArraysKt.any(float[]) -> notifyByTableNames$room_runtime_release
    12708:12708:void notifyByTableNames$room_runtime_release(java.lang.String[]):641 -> notifyByTableNames$room_runtime_release
    641:641:void notifyByTableNames$room_runtime_release(java.lang.String[]) -> notifyByTableNames$room_runtime_release
    12708:12708:boolean kotlin.collections.ArraysKt___ArraysKt.any(float[]) -> notifyByTableNames$room_runtime_release
    12708:12708:void notifyByTableNames$room_runtime_release(java.lang.String[]):641 -> notifyByTableNames$room_runtime_release
    640:853:void notifyByTableNames$room_runtime_release(java.lang.String[]) -> notifyByTableNames$room_runtime_release
    639:855:void notifyByTableNames$room_runtime_release(java.lang.String[]) -> notifyByTableNames$room_runtime_release
androidx.room.InvalidationTracker$refreshRunnable$1 -> androidx.room.InvalidationTracker$refreshRunnable$1:
# {"id":"sourceFile","fileName":"InvalidationTracker.kt"}
    349:349:void <init>(androidx.room.InvalidationTracker) -> <init>
    409:410:java.util.Set checkUpdatedTable() -> checkUpdatedTable
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> checkUpdatedTable
    145:146:java.util.Set checkUpdatedTable():410 -> checkUpdatedTable
    411:414:java.util.Set checkUpdatedTable() -> checkUpdatedTable
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> checkUpdatedTable
    146:146:java.util.Set checkUpdatedTable():410 -> checkUpdatedTable
    409:422:java.util.Set checkUpdatedTable() -> checkUpdatedTable
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> checkUpdatedTable
    146:146:java.util.Set checkUpdatedTable():410 -> checkUpdatedTable
    351:396:void run() -> run
    360:396:void run() -> run
    366:396:void run() -> run
    378:396:void run() -> run
    381:396:void run() -> run
    353:847:void run() -> run
    395:848:void run() -> run
androidx.room.MultiInstanceInvalidationClient -> androidx.room.MultiInstanceInvalidationClient:
# {"id":"sourceFile","fileName":"MultiInstanceInvalidationClient.kt"}
    0:0:void $r8$lambda$OUFtvTStWETjeJxrBwS2HtXq3VE(androidx.room.MultiInstanceInvalidationClient) -> $r8$lambda$OUFtvTStWETjeJxrBwS2HtXq3VE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$at7cvPuqmY8Y6FAv2N0cZPhRid0(androidx.room.MultiInstanceInvalidationClient) -> $r8$lambda$at7cvPuqmY8Y6FAv2N0cZPhRid0
      # {"id":"com.android.tools.r8.synthesized"}
    41:41:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor) -> <init>
    43:43:java.lang.String getName() -> <init>
    43:43:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):43 -> <init>
    45:45:androidx.room.InvalidationTracker getInvalidationTracker() -> <init>
    45:45:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):45 -> <init>
    46:46:java.util.concurrent.Executor getExecutor() -> <init>
    46:46:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):46 -> <init>
    48:58:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor) -> <init>
    64:64:java.util.concurrent.atomic.AtomicBoolean getStopped() -> <init>
    64:64:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):64 -> <init>
    66:66:android.content.ServiceConnection getServiceConnection() -> <init>
    66:66:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):66 -> <init>
    79:79:java.lang.Runnable getSetUpRunnable() -> <init>
    79:79:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):79 -> <init>
    90:90:void removeObserverRunnable$lambda$2(androidx.room.MultiInstanceInvalidationClient) -> <init>
    90:90:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):90 -> <init>
    92:95:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor) -> <init>
    37:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> <init>
    37:38:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):95 -> <init>
    41:116:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor) -> <init>
    53:53:void setClientId(int) -> getClientId
    53:53:int getClientId():53 -> getClientId
    46:46:java.util.concurrent.Executor getExecutor() -> getExecutor
    45:45:androidx.room.InvalidationTracker getInvalidationTracker() -> getInvalidationTracker
    54:54:void setObserver(androidx.room.InvalidationTracker$Observer) -> getObserver
    54:54:androidx.room.InvalidationTracker$Observer getObserver():54 -> getObserver
    90:90:void removeObserverRunnable$lambda$2(androidx.room.MultiInstanceInvalidationClient) -> getRemoveObserverRunnable
    90:90:java.lang.Runnable getRemoveObserverRunnable():90 -> getRemoveObserverRunnable
    55:55:void setService(androidx.room.IMultiInstanceInvalidationService) -> getService
    55:55:androidx.room.IMultiInstanceInvalidationService getService():55 -> getService
    79:79:java.lang.Runnable getSetUpRunnable() -> getSetUpRunnable
    64:64:java.util.concurrent.atomic.AtomicBoolean getStopped() -> getStopped
    90:90:void removeObserverRunnable$lambda$2(androidx.room.MultiInstanceInvalidationClient) -> removeObserverRunnable$lambda$2
    54:54:void setObserver(androidx.room.InvalidationTracker$Observer) -> setObserver
    55:55:void setService(androidx.room.IMultiInstanceInvalidationService) -> setService
    80:88:void setUpRunnable$lambda$1(androidx.room.MultiInstanceInvalidationClient) -> setUpRunnable$lambda$1
androidx.room.MultiInstanceInvalidationClient$$ExternalSyntheticLambda0 -> androidx.room.MultiInstanceInvalidationClient$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.MultiInstanceInvalidationClient androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$1$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$0.f$0 -> f$0
    0:0:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$1$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$0.<init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$1$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.MultiInstanceInvalidationClient$$ExternalSyntheticLambda1 -> androidx.room.MultiInstanceInvalidationClient$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.MultiInstanceInvalidationClient androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$1$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$1.f$0 -> f$0
    0:0:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$1$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$1.<init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$1$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.MultiInstanceInvalidationClient$1 -> androidx.room.MultiInstanceInvalidationClient$1:
# {"id":"sourceFile","fileName":"MultiInstanceInvalidationClient.kt"}
    95:95:void <init>(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]) -> <init>
    109:109:boolean isRemote$room_runtime_release() -> isRemote$room_runtime_release
    97:102:void onInvalidated(java.util.Set) -> onInvalidated
    37:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onInvalidated
    37:38:void onInvalidated(java.util.Set):102 -> onInvalidated
    102:106:void onInvalidated(java.util.Set) -> onInvalidated
androidx.room.MultiInstanceInvalidationClient$callback$1 -> androidx.room.MultiInstanceInvalidationClient$callback$1:
# {"id":"sourceFile","fileName":"MultiInstanceInvalidationClient.kt"}
    0:0:void $r8$lambda$YbA_oLvwgwIT6Ag339-3Mj03vfc(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]) -> $r8$lambda$YbA_oLvwgwIT6Ag339-3Mj03vfc
      # {"id":"com.android.tools.r8.synthesized"}
    58:58:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    60:61:void onInvalidation(java.lang.String[]) -> onInvalidation
    60:60:void onInvalidation$lambda$0(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]) -> onInvalidation$lambda$0
androidx.room.MultiInstanceInvalidationClient$callback$1$$ExternalSyntheticLambda0 -> androidx.room.MultiInstanceInvalidationClient$callback$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.MultiInstanceInvalidationClient androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$2$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.f$0 -> f$0
    java.lang.String[] androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$2$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.f$1 -> f$1
    0:0:void androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$2$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.<init>(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$2$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1 -> androidx.room.MultiInstanceInvalidationClient$serviceConnection$1:
# {"id":"sourceFile","fileName":"MultiInstanceInvalidationClient.kt"}
    66:66:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    68:71:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    74:76:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
androidx.room.MultiInstanceInvalidationService -> androidx.room.MultiInstanceInvalidationService:
# {"id":"sourceFile","fileName":"MultiInstanceInvalidationService.kt"}
    37:52:void <init>() -> <init>
    41:41:android.os.RemoteCallbackList getCallbackList$room_runtime_release() -> getCallbackList$room_runtime_release
    39:39:java.util.Map getClientNames$room_runtime_release() -> getClientNames$room_runtime_release
    38:38:int getMaxClientId$room_runtime_release() -> getMaxClientId$room_runtime_release
    120:120:android.os.IBinder onBind(android.content.Intent) -> onBind
    38:38:void setMaxClientId$room_runtime_release(int) -> setMaxClientId$room_runtime_release
androidx.room.MultiInstanceInvalidationService$binder$1 -> androidx.room.MultiInstanceInvalidationService$binder$1:
# {"id":"sourceFile","fileName":"MultiInstanceInvalidationService.kt"}
    52:52:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    90:116:void broadcastInvalidation(int,java.lang.String[]) -> broadcastInvalidation
    58:69:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> registerCallback
    81:85:void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> unregisterCallback
androidx.room.MultiInstanceInvalidationService$callbackList$1 -> androidx.room.MultiInstanceInvalidationService$callbackList$1:
# {"id":"sourceFile","fileName":"MultiInstanceInvalidationService.kt"}
    42:42:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    42:42:void onCallbackDied(android.os.IInterface,java.lang.Object) -> onCallbackDied
    47:48:void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object) -> onCallbackDied
androidx.room.Room -> androidx.room.Room:
# {"id":"sourceFile","fileName":"Room.kt"}
    24:24:void <init>() -> <init>
    109:114:androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String) -> databaseBuilder
    42:68:java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String) -> getGeneratedImplementation
androidx.room.RoomDatabase -> androidx.room.RoomDatabase:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    66:66:void access$internalEndTransaction(androidx.room.RoomDatabase) -> <init>
    66:66:void <init>():66 -> <init>
    108:108:androidx.room.InvalidationTracker getInvalidationTracker() -> <init>
    108:108:void <init>():108 -> <init>
    127:127:void setAutoMigrationSpecs(java.util.Map) -> <init>
    127:127:void <init>():127 -> <init>
    128:128:void <init>() -> <init>
    152:152:java.lang.ThreadLocal getSuspendingTransactionId() -> <init>
    152:152:void <init>():152 -> <init>
    160:160:java.util.Map getBackingFieldMap() -> <init>
    160:160:void <init>():160 -> <init>
    162:162:void <init>() -> <init>
    66:66:void access$internalEndTransaction(androidx.room.RoomDatabase) -> <init>
    66:66:void <init>():66 -> <init>
    66:66:void access$internalEndTransaction(androidx.room.RoomDatabase) -> access$internalBeginTransaction
    66:66:void access$internalBeginTransaction(androidx.room.RoomDatabase):66 -> access$internalBeginTransaction
    66:66:void access$internalEndTransaction(androidx.room.RoomDatabase) -> access$internalEndTransaction
    441:448:void assertNotMainThread() -> assertNotMainThread
    457:461:void assertNotSuspendingTransaction() -> assertNotSuspendingTransaction
    514:524:void beginTransaction() -> beginTransaction
    501:503:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    547:556:void endTransaction() -> endTransaction
    308:308:java.util.List getAutoMigrations(java.util.Map) -> getAutoMigrations
    160:160:java.util.Map getBackingFieldMap() -> getBackingFieldMap
    142:142:java.util.concurrent.locks.Lock getCloseLock$room_runtime_release() -> getCloseLock$room_runtime_release
    108:108:androidx.room.InvalidationTracker getInvalidationTracker() -> getInvalidationTracker
    96:96:androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper() -> getOpenHelper
    80:80:java.util.concurrent.Executor getQueryExecutor() -> getQueryExecutor
    376:376:java.util.Set getRequiredAutoMigrationSpecs() -> getRequiredAutoMigrationSpecs
    362:362:java.util.Map getRequiredTypeConverters() -> getRequiredTypeConverters
    88:88:java.util.concurrent.Executor getTransactionExecutor() -> getTransactionExecutor
    638:638:boolean inTransaction() -> inTransaction
    186:206:void init(androidx.room.DatabaseConfiguration) -> init
    206:228:void init(androidx.room.DatabaseConfiguration) -> init
    225:228:void init(androidx.room.DatabaseConfiguration) -> init
    228:233:void init(androidx.room.DatabaseConfiguration) -> init
    230:233:void init(androidx.room.DatabaseConfiguration) -> init
    233:1556:void init(androidx.room.DatabaseConfiguration) -> init
    283:1557:void init(androidx.room.DatabaseConfiguration) -> init
    527:537:void internalBeginTransaction() -> internalBeginTransaction
    559:565:void internalEndTransaction() -> internalEndTransaction
    628:629:void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase) -> internalInitInvalidationTracker
    432:432:boolean isMainThread$room_runtime_release() -> isMainThread$room_runtime_release
    412:412:boolean isOpenInternal() -> isOpenInternal
    485:490:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    484:484:android.database.Cursor query$default(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal,int,java.lang.Object) -> query$default
    576:577:void setTransactionSuccessful() -> setTransactionSuccessful
    321:329:java.lang.Object unwrapOpenHelper(java.lang.Class,androidx.sqlite.db.SupportSQLiteOpenHelper) -> unwrapOpenHelper
androidx.room.RoomDatabase$Builder -> androidx.room.RoomDatabase$Builder:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    696:725:void <init>(android.content.Context,java.lang.Class,java.lang.String) -> <init>
    1255:1279:androidx.room.RoomDatabase build() -> build
    1275:1279:androidx.room.RoomDatabase build() -> build
    1279:1293:androidx.room.RoomDatabase build() -> build
    1275:1359:androidx.room.RoomDatabase build() -> build
androidx.room.RoomDatabase$Callback -> androidx.room.RoomDatabase$Callback:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
androidx.room.RoomDatabase$Companion -> androidx.room.RoomDatabase$Companion:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1545:1545:void <init>() -> <init>
androidx.room.RoomDatabase$JournalMode -> androidx.room.RoomDatabase$JournalMode:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    654:664:void <clinit>() -> <clinit>
    646:646:void <init>(java.lang.String,int) -> <init>
    684:688:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
    670:680:androidx.room.RoomDatabase$JournalMode resolve$room_runtime_release(android.content.Context) -> resolve$room_runtime_release
androidx.room.RoomDatabase$MigrationContainer -> androidx.room.RoomDatabase$MigrationContainer:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    1367:1368:void <init>() -> <init>
    1391:1561:void addMigration(androidx.room.migration.Migration) -> addMigration
    361:361:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> addMigration
    361:361:void addMigration(androidx.room.migration.Migration):1393 -> addMigration
    1393:1393:void addMigration(androidx.room.migration.Migration) -> addMigration
    361:365:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> addMigration
    361:365:void addMigration(androidx.room.migration.Migration):1393 -> addMigration
    1393:1561:void addMigration(androidx.room.migration.Migration) -> addMigration
    1377:1556:void addMigrations(androidx.room.migration.Migration[]) -> addMigrations
    1378:1557:void addMigrations(androidx.room.migration.Migration[]) -> addMigrations
    1476:1481:boolean contains(int,int) -> contains
    1421:1426:java.util.List findMigrationPath(int,int) -> findMigrationPath
    1435:1464:java.util.List findUpMigrationPath(java.util.List,boolean,int,int) -> findUpMigrationPath
    1408:1408:java.util.Map getMigrations() -> getMigrations
androidx.room.RoomDatabase$PrepackagedDatabaseCallback -> androidx.room.RoomDatabase$PrepackagedDatabaseCallback:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
androidx.room.RoomDatabase$beginTransaction$1 -> androidx.room.RoomDatabase$beginTransaction$1:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    519:519:java.lang.Object invoke(java.lang.Object) -> invoke
    520:521:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
androidx.room.RoomDatabase$endTransaction$1 -> androidx.room.RoomDatabase$endTransaction$1:
# {"id":"sourceFile","fileName":"RoomDatabase.kt"}
    551:551:java.lang.Object invoke(java.lang.Object) -> invoke
    552:553:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase) -> invoke
androidx.room.RoomMasterTable -> androidx.room.RoomMasterTable:
# {"id":"sourceFile","fileName":"RoomMasterTable.kt"}
    27:27:void <init>() -> <init>
    52:53:java.lang.String createInsertQuery(java.lang.String) -> createInsertQuery
    52:53:java.lang.String createInsertQuery(java.lang.String) -> createInsertQuery
androidx.room.RoomOpenHelper -> androidx.room.RoomOpenHelper:
# {"id":"sourceFile","fileName":"RoomOpenHelper.kt"}
    30:52:void <init>(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String) -> <init>
    135:138:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> checkIdentity
    145:146:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase):138 -> checkIdentity
    139:142:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> checkIdentity
    146:146:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase):138 -> checkIdentity
    136:151:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    148:151:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    147:151:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> checkIdentity
    146:146:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase):138 -> checkIdentity
    157:166:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    174:175:void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase) -> createMasterTableIfNotExists
    61:62:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase) -> onConfigure
    65:81:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    123:124:void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> onDowngrade
    127:132:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    84:248:void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> onUpgrade
    85:249:void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> onUpgrade
    169:171:void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> updateIdentity
androidx.room.RoomOpenHelper$Companion -> androidx.room.RoomOpenHelper$Companion:
# {"id":"sourceFile","fileName":"RoomOpenHelper.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    229:229:void <init>() -> <init>
    240:242:boolean hasEmptySchema$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> hasEmptySchema$room_runtime_release
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> hasEmptySchema$room_runtime_release
    145:146:boolean hasEmptySchema$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase):242 -> hasEmptySchema$room_runtime_release
    243:243:boolean hasEmptySchema$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> hasEmptySchema$room_runtime_release
    231:234:boolean hasRoomMasterTable$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> hasRoomMasterTable$room_runtime_release
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> hasRoomMasterTable$room_runtime_release
    145:146:boolean hasRoomMasterTable$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase):234 -> hasRoomMasterTable$room_runtime_release
    235:235:boolean hasRoomMasterTable$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase) -> hasRoomMasterTable$room_runtime_release
androidx.room.RoomOpenHelper$Delegate -> androidx.room.RoomOpenHelper$Delegate:
# {"id":"sourceFile","fileName":"RoomOpenHelper.kt"}
    180:181:void <init>(int) -> <init>
androidx.room.RoomOpenHelper$ValidationResult -> androidx.room.RoomOpenHelper$ValidationResult:
# {"id":"sourceFile","fileName":"RoomOpenHelper.kt"}
    224:227:void <init>(boolean,java.lang.String) -> <init>
androidx.room.RoomSQLiteQuery -> androidx.room.RoomSQLiteQuery:
# {"id":"sourceFile","fileName":"RoomSQLiteQuery.kt"}
    173:173:void <clinit>() -> <clinit>
    0:0:void <init>(int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    34:77:void <init>(int) -> <init>
    127:129:void bindBlob(int,byte[]) -> bindBlob
    117:119:void bindDouble(int,double) -> bindDouble
    112:114:void bindLong(int,long) -> bindLong
    108:109:void bindNull(int) -> bindNull
    122:124:void bindString(int,java.lang.String) -> bindString
    96:105:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> bindTo
    133:133:void close() -> close
    61:61:int getArgCount() -> getArgCount
    93:93:java.lang.String getSql() -> getSql
    65:67:void init(java.lang.String,int) -> init
    86:90:void release() -> release
androidx.room.RoomSQLiteQuery$Companion -> androidx.room.RoomSQLiteQuery$Companion:
# {"id":"sourceFile","fileName":"RoomSQLiteQuery.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    161:161:void <init>() -> <init>
    203:214:androidx.room.RoomSQLiteQuery acquire(java.lang.String,int) -> acquire
    218:226:void prunePoolLocked$room_runtime_release() -> prunePoolLocked$room_runtime_release
androidx.room.SQLiteCopyOpenHelper -> androidx.room.SQLiteCopyOpenHelper:
# {"id":"sourceFile","fileName":"SQLiteCopyOpenHelper.kt"}
    45:52:void <init>(android.content.Context,java.lang.String,java.io.File,java.util.concurrent.Callable,int,androidx.sqlite.db.SupportSQLiteOpenHelper) -> <init>
    84:87:void close() -> close
    155:197:void copyDatabaseFile(java.io.File,boolean) -> copyDatabaseFile
    200:202:void dispatchOnOpenPrepackagedDatabase(java.io.File,boolean) -> dispatchOnOpenPrepackagedDatabase
    58:58:java.lang.String getDatabaseName() -> getDatabaseName
    52:52:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate() -> getDelegate
    67:71:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    92:93:void setDatabaseConfiguration(androidx.room.DatabaseConfiguration) -> setDatabaseConfiguration
    62:63:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
    96:148:void verifyDatabaseFile(boolean) -> verifyDatabaseFile
    126:148:void verifyDatabaseFile(boolean) -> verifyDatabaseFile
    131:148:void verifyDatabaseFile(boolean) -> verifyDatabaseFile
    96:150:void verifyDatabaseFile(boolean) -> verifyDatabaseFile
androidx.room.SQLiteCopyOpenHelperFactory -> androidx.room.SQLiteCopyOpenHelperFactory:
# {"id":"sourceFile","fileName":"SQLiteCopyOpenHelperFactory.kt"}
    27:31:void <init>(java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory) -> <init>
    36:42:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.room.SharedSQLiteStatement -> androidx.room.SharedSQLiteStatement:
# {"id":"sourceFile","fileName":"SharedSQLiteStatement.kt"}
    36:40:void <init>(androidx.room.RoomDatabase) -> <init>
    36:36:androidx.sqlite.db.SupportSQLiteStatement access$createNewStatement(androidx.room.SharedSQLiteStatement) -> access$createNewStatement
    74:75:androidx.sqlite.db.SupportSQLiteStatement acquire() -> acquire
    52:53:void assertNotMainThread() -> assertNotMainThread
    56:57:androidx.sqlite.db.SupportSQLiteStatement createNewStatement() -> createNewStatement
    40:40:androidx.sqlite.db.SupportSQLiteStatement getStmt() -> getStmt
    61:67:androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean) -> getStmt
    84:87:void release(androidx.sqlite.db.SupportSQLiteStatement) -> release
androidx.room.SharedSQLiteStatement$stmt$2 -> androidx.room.SharedSQLiteStatement$stmt$2:
# {"id":"sourceFile","fileName":"SharedSQLiteStatement.kt"}
    40:40:java.lang.Object invoke() -> invoke
    41:41:androidx.sqlite.db.SupportSQLiteStatement invoke() -> invoke
androidx.room.TransactionElement -> androidx.room.TransactionElement:
# {"id":"sourceFile","fileName":"RoomDatabaseExt.kt"}
androidx.room.TransactionElement$Key -> androidx.room.TransactionElement$Key:
# {"id":"sourceFile","fileName":"RoomDatabaseExt.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    153:153:void <init>() -> <init>
androidx.room.TransactionExecutor -> androidx.room.TransactionExecutor:
# {"id":"sourceFile","fileName":"TransactionExecutor.kt"}
    0:0:void $r8$lambda$AympDHYBb78s7_N_9gRsXF0sHiw(java.lang.Runnable,androidx.room.TransactionExecutor) -> $r8$lambda$AympDHYBb78s7_N_9gRsXF0sHiw
      # {"id":"com.android.tools.r8.synthesized"}
    28:31:void <init>(java.util.concurrent.Executor) -> <init>
    33:45:void execute(java.lang.Runnable) -> execute
    35:40:void execute$lambda$1$lambda$0(java.lang.Runnable,androidx.room.TransactionExecutor) -> execute$lambda$1$lambda$0
    48:55:void scheduleNext() -> scheduleNext
androidx.room.TransactionExecutor$$ExternalSyntheticLambda0 -> androidx.room.TransactionExecutor$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.room.TransactionExecutor$$InternalSyntheticLambda$1$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.f$0 -> f$0
    androidx.room.TransactionExecutor androidx.room.TransactionExecutor$$InternalSyntheticLambda$1$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.f$1 -> f$1
    0:0:void androidx.room.TransactionExecutor$$InternalSyntheticLambda$1$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.<init>(java.lang.Runnable,androidx.room.TransactionExecutor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.room.TransactionExecutor$$InternalSyntheticLambda$1$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.migration.Migration -> androidx.room.migration.Migration:
# {"id":"sourceFile","fileName":"Migration.java"}
androidx.room.util.CursorUtil -> androidx.room.util.CursorUtil:
# {"id":"sourceFile","fileName":"CursorUtil.kt"}
    39:39:android.database.Cursor copyAndClose(android.database.Cursor) -> copyAndClose
    145:146:java.lang.Object useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> copyAndClose
    145:146:android.database.Cursor copyAndClose(android.database.Cursor):39 -> copyAndClose
    40:50:android.database.Cursor copyAndClose(android.database.Cursor) -> copyAndClose
    50:55:android.database.Cursor copyAndClose(android.database.Cursor) -> copyAndClose
    146:151:java.lang.Object useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> copyAndClose
    146:151:android.database.Cursor copyAndClose(android.database.Cursor):39 -> copyAndClose
    56:56:android.database.Cursor copyAndClose(android.database.Cursor) -> copyAndClose
    146:146:java.lang.Object useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> copyAndClose
    146:146:android.database.Cursor copyAndClose(android.database.Cursor):39 -> copyAndClose
androidx.room.util.DBUtil -> androidx.room.util.DBUtil:
# {"id":"sourceFile","fileName":"DBUtil.kt"}
    162:163:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
    99:100:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> dropFtsSyncTriggers
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> dropFtsSyncTriggers
    145:146:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase):100 -> dropFtsSyncTriggers
    101:104:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> dropFtsSyncTriggers
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> dropFtsSyncTriggers
    146:146:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase):100 -> dropFtsSyncTriggers
    99:221:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> dropFtsSyncTriggers
    112:222:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> dropFtsSyncTriggers
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> dropFtsSyncTriggers
    146:146:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase):100 -> dropFtsSyncTriggers
    75:87:android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal) -> query
    142:151:int readVersion(java.io.File) -> readVersion
    151:151:int readVersion(java.io.File) -> readVersion
androidx.room.util.FileUtil -> androidx.room.util.FileUtil:
# {"id":"sourceFile","fileName":"FileUtil.kt"}
    39:58:void copy(java.nio.channels.ReadableByteChannel,java.nio.channels.FileChannel) -> copy
androidx.room.util.TableInfo -> androidx.room.util.TableInfo:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    41:53:void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set) -> <init>
    74:87:boolean equals(java.lang.Object) -> equals
    91:95:int hashCode() -> hashCode
    99:100:java.lang.String toString() -> toString
androidx.room.util.TableInfo$Column -> androidx.room.util.TableInfo$Column:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    140:173:void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int) -> <init>
    271:305:boolean equals(java.lang.Object) -> equals
    193:217:int findAffinity(java.lang.String) -> findAffinity
    317:324:int hashCode() -> hashCode
    328:329:java.lang.String toString() -> toString
    328:329:java.lang.String toString() -> toString
    328:329:java.lang.String toString() -> toString
    328:330:java.lang.String toString() -> toString
    328:330:java.lang.String toString() -> toString
androidx.room.util.TableInfo$Column$Companion -> androidx.room.util.TableInfo$Column$Companion:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    220:220:void <init>() -> <init>
    248:652:boolean containsSurroundingParenthesis(java.lang.String) -> containsSurroundingParenthesis
    265:653:boolean containsSurroundingParenthesis(java.lang.String) -> containsSurroundingParenthesis
    234:239:boolean defaultValueEquals(java.lang.String,java.lang.String) -> defaultValueEquals
androidx.room.util.TableInfo$Companion -> androidx.room.util.TableInfo$Companion:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    103:103:void <init>() -> <init>
    130:132:androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> read
androidx.room.util.TableInfo$ForeignKey -> androidx.room.util.TableInfo$ForeignKey:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    339:349:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List) -> <init>
    353:359:boolean equals(java.lang.Object) -> equals
    363:368:int hashCode() -> hashCode
    372:373:java.lang.String toString() -> toString
    372:373:java.lang.String toString() -> toString
    372:373:java.lang.String toString() -> toString
    372:374:java.lang.String toString() -> toString
androidx.room.util.TableInfo$ForeignKeyWithSequence -> androidx.room.util.TableInfo$ForeignKeyWithSequence:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    382:386:void <init>(int,int,java.lang.String,java.lang.String) -> <init>
    382:382:int compareTo(java.lang.Object) -> compareTo
    389:393:int compareTo(androidx.room.util.TableInfo$ForeignKeyWithSequence) -> compareTo
    385:385:java.lang.String getFrom() -> getFrom
    383:383:int getId() -> getId
    386:386:java.lang.String getTo() -> getTo
androidx.room.util.TableInfo$Index -> androidx.room.util.TableInfo$Index:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    403:651:void <init>(java.lang.String,boolean,java.util.List,java.util.List) -> <init>
    434:448:boolean equals(java.lang.Object) -> equals
    453:461:int hashCode() -> hashCode
    465:465:java.lang.String toString() -> toString
androidx.room.util.TableInfo$Index$Companion -> androidx.room.util.TableInfo$Index$Companion:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    420:420:void <init>() -> <init>
androidx.room.util.TableInfoKt -> androidx.room.util.TableInfoKt:
# {"id":"sourceFile","fileName":"TableInfo.kt"}
    547:547:java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readColumns
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> readColumns
    145:146:java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):547 -> readColumns
    548:577:java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readColumns
    524:540:java.util.List readForeignKeyFieldMappings(android.database.Cursor) -> readForeignKeyFieldMappings
    529:540:java.util.List readForeignKeyFieldMappings(android.database.Cursor) -> readForeignKeyFieldMappings
    482:482:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readForeignKeys
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> readForeignKeys
    145:146:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):482 -> readForeignKeys
    483:502:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readForeignKeys
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> readForeignKeys
    766:766:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):502 -> readForeignKeys
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> readForeignKeys
    857:857:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):502 -> readForeignKeys
    503:503:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readForeignKeys
    857:858:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> readForeignKeys
    857:858:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):502 -> readForeignKeys
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> readForeignKeys
    766:766:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):502 -> readForeignKeys
    504:656:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readForeignKeys
    492:657:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readForeignKeys
    618:618:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean) -> readIndex
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> readIndex
    145:146:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean):618 -> readIndex
    619:648:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean) -> readIndex
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> readIndex
    146:146:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean):618 -> readIndex
    618:618:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean) -> readIndex
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> readIndex
    146:146:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean):618 -> readIndex
    624:630:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean) -> readIndex
    146:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> readIndex
    146:146:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean):618 -> readIndex
    585:585:java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readIndices
    145:146:java.lang.Object androidx.room.util.CursorUtil.useCursor(android.database.Cursor,kotlin.jvm.functions.Function1) -> readIndices
    145:146:java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):585 -> readIndices
    586:606:java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readIndices
    471:474:androidx.room.util.TableInfo readTableInfo(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readTableInfo
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    24:25:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    29:34:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    30:44:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    47:71:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$Companion -> androidx.savedstate.Recreator$Companion:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    93:93:void <init>() -> <init>
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    73:80:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    89:90:void add(java.lang.String) -> add
    83:85:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    0:0:void $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA
      # {"id":"com.android.tools.r8.synthesized"}
    32:34:void <init>() -> <init>
    48:48:void setAllowingSavingState$savedstate_release(boolean) -> <init>
    48:48:void <init>():48 -> <init>
    33:33:void <init>() -> <init>
    72:84:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    127:134:androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String) -> getSavedStateProvider
    202:207:void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> performAttach$lambda$4
    199:273:void performAttach$savedstate_release(androidx.lifecycle.Lifecycle) -> performAttach$savedstate_release
    217:273:void performRestore$savedstate_release(android.os.Bundle) -> performRestore$savedstate_release
    239:252:void performSave(android.os.Bundle) -> performSave
    109:114:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    180:273:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0 -> androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.f$0 -> f$0
    0:0:void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.<init>(androidx.savedstate.SavedStateRegistry) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.SavedStateRegistry$AutoRecreated:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistry$Companion -> androidx.savedstate.SavedStateRegistry$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    267:267:void <init>() -> <init>
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.SavedStateRegistry$SavedStateProvider:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    0:0:void <init>(androidx.savedstate.SavedStateRegistryOwner,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:33:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    33:33:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    44:51:void performAttach() -> performAttach
    62:70:void performRestore(android.os.Bundle) -> performRestore
    81:82:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.SavedStateRegistryController$Companion -> androidx.savedstate.SavedStateRegistryController$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    84:84:void <init>() -> <init>
    92:92:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.SavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"SavedStateRegistryOwner.kt"}
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"ViewTreeSavedStateRegistryOwner.kt"}
    41:42:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.sqlite.db.SimpleSQLiteQuery -> androidx.sqlite.db.SimpleSQLiteQuery:
# {"id":"sourceFile","fileName":"SimpleSQLiteQuery.kt"}
    29:31:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    40:40:void <init>(java.lang.String) -> <init>
    51:52:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> bindTo
    43:43:java.lang.String getSql() -> getSql
androidx.sqlite.db.SimpleSQLiteQuery$Companion -> androidx.sqlite.db.SimpleSQLiteQuery$Companion:
# {"id":"sourceFile","fileName":"SimpleSQLiteQuery.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    57:57:void <init>() -> <init>
    71:80:void bind(androidx.sqlite.db.SupportSQLiteProgram,java.lang.Object[]) -> bind
    84:110:void bind(androidx.sqlite.db.SupportSQLiteProgram,int,java.lang.Object) -> bind
androidx.sqlite.db.SupportSQLiteCompat$Api16Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api16Impl:
# {"id":"sourceFile","fileName":"SupportSQLiteCompat.kt"}
    44:44:void <init>() -> <init>
    56:57:void cancel(android.os.CancellationSignal) -> cancel
    69:69:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
    84:84:boolean deleteDatabase(java.io.File) -> deleteDatabase
    168:168:boolean isWriteAheadLoggingEnabled(android.database.sqlite.SQLiteDatabase) -> isWriteAheadLoggingEnabled
    114:116:android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal,android.database.sqlite.SQLiteDatabase$CursorFactory) -> rawQueryWithFactory
    183:184:void setWriteAheadLoggingEnabled(android.database.sqlite.SQLiteOpenHelper,boolean) -> setWriteAheadLoggingEnabled
androidx.sqlite.db.SupportSQLiteCompat$Api19Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api19Impl:
# {"id":"sourceFile","fileName":"SupportSQLiteCompat.kt"}
    192:192:void <init>() -> <init>
    208:208:android.net.Uri getNotificationUri(android.database.Cursor) -> getNotificationUri
    222:222:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
androidx.sqlite.db.SupportSQLiteCompat$Api21Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api21Impl:
# {"id":"sourceFile","fileName":"SupportSQLiteCompat.kt"}
    231:231:void <init>() -> <init>
    245:245:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.sqlite.db.SupportSQLiteCompat$Api23Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api23Impl:
# {"id":"sourceFile","fileName":"SupportSQLiteCompat.kt"}
    254:254:void <init>() -> <init>
    267:268:void setExtras(android.database.Cursor,android.os.Bundle) -> setExtras
androidx.sqlite.db.SupportSQLiteCompat$Api29Impl -> androidx.sqlite.db.SupportSQLiteCompat$Api29Impl:
# {"id":"sourceFile","fileName":"SupportSQLiteCompat.kt"}
    276:276:void <init>() -> <init>
    312:312:java.util.List getNotificationUris(android.database.Cursor) -> getNotificationUris
    296:297:void setNotificationUris(android.database.Cursor,android.content.ContentResolver,java.util.List) -> setNotificationUris
androidx.sqlite.db.SupportSQLiteDatabase -> androidx.sqlite.db.SupportSQLiteDatabase:
# {"id":"sourceFile","fileName":"SupportSQLiteDatabase.kt"}
androidx.sqlite.db.SupportSQLiteOpenHelper -> androidx.sqlite.db.SupportSQLiteOpenHelper:
# {"id":"sourceFile","fileName":"SupportSQLiteOpenHelper.kt"}
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback -> androidx.sqlite.db.SupportSQLiteOpenHelper$Callback:
# {"id":"sourceFile","fileName":"SupportSQLiteOpenHelper.kt"}
    110:116:void <init>(int) -> <init>
    250:251:void deleteDatabaseFile(java.lang.String) -> deleteDatabaseFile
    107:107:java.lang.String kotlin.text.StringsKt__StringsKt.trim(java.lang.String,kotlin.jvm.functions.Function1) -> deleteDatabaseFile
    107:107:void deleteDatabaseFile(java.lang.String):251 -> deleteDatabaseFile
    79:85:java.lang.CharSequence kotlin.text.StringsKt__StringsKt.trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> deleteDatabaseFile
    79:85:void deleteDatabaseFile(java.lang.String):251 -> deleteDatabaseFile
    251:251:void deleteDatabaseFile(java.lang.String) -> deleteDatabaseFile
    85:100:java.lang.CharSequence kotlin.text.StringsKt__StringsKt.trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> deleteDatabaseFile
    85:100:void deleteDatabaseFile(java.lang.String):251 -> deleteDatabaseFile
    107:107:java.lang.String kotlin.text.StringsKt__StringsKt.trim(java.lang.String,kotlin.jvm.functions.Function1) -> deleteDatabaseFile
    107:107:void deleteDatabaseFile(java.lang.String):251 -> deleteDatabaseFile
    251:273:void deleteDatabaseFile(java.lang.String) -> deleteDatabaseFile
    135:135:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase) -> onConfigure
    213:427:void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase) -> onCorruption
    236:428:void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase) -> onCorruption
    243:428:void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase) -> onCorruption
    202:202:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback$Companion -> androidx.sqlite.db.SupportSQLiteOpenHelper$Callback$Companion:
# {"id":"sourceFile","fileName":"SupportSQLiteOpenHelper.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    275:275:void <init>() -> <init>
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration -> androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration:
# {"id":"sourceFile","fileName":"SupportSQLiteOpenHelper.kt"}
    283:311:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean,boolean) -> <init>
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder -> androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder:
# {"id":"sourceFile","fileName":"SupportSQLiteOpenHelper.kt"}
    319:356:void <init>(android.content.Context) -> <init>
    337:350:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build() -> build
    370:372:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> callback
    372:372:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> callback
    362:364:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String) -> name
    364:364:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String) -> name
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Companion -> androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Companion:
# {"id":"sourceFile","fileName":"SupportSQLiteOpenHelper.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    398:398:void <init>() -> <init>
    406:406:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context) -> builder
androidx.sqlite.db.SupportSQLiteOpenHelper$Factory -> androidx.sqlite.db.SupportSQLiteOpenHelper$Factory:
# {"id":"sourceFile","fileName":"SupportSQLiteOpenHelper.kt"}
androidx.sqlite.db.SupportSQLiteProgram -> androidx.sqlite.db.SupportSQLiteProgram:
# {"id":"sourceFile","fileName":"SupportSQLiteProgram.kt"}
androidx.sqlite.db.SupportSQLiteQuery -> androidx.sqlite.db.SupportSQLiteQuery:
# {"id":"sourceFile","fileName":"SupportSQLiteQuery.kt"}
androidx.sqlite.db.SupportSQLiteStatement -> androidx.sqlite.db.SupportSQLiteStatement:
# {"id":"sourceFile","fileName":"SupportSQLiteStatement.kt"}
androidx.sqlite.db.framework.FrameworkSQLiteDatabase -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase:
# {"id":"sourceFile","fileName":"FrameworkSQLiteDatabase.kt"}
    0:0:android.database.Cursor $r8$lambda$BFGJjdMOCDz5XPIMAR1G27bXFjU(androidx.sqlite.db.SupportSQLiteQuery,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> $r8$lambda$BFGJjdMOCDz5XPIMAR1G27bXFjU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.database.Cursor $r8$lambda$xWs7VTYEzeAWyi_2-SJixQ1HyKQ(kotlin.jvm.functions.Function4,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> $r8$lambda$xWs7VTYEzeAWyi_2-SJixQ1HyKQ
      # {"id":"com.android.tools.r8.synthesized"}
    325:333:void <clinit>() -> <clinit>
    47:48:void <init>(android.database.sqlite.SQLiteDatabase) -> <init>
    55:56:void beginTransaction() -> beginTransaction
    59:60:void beginTransactionNonExclusive() -> beginTransactionNonExclusive
    301:302:void close() -> close
    51:51:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    75:76:void endTransaction() -> endTransaction
    246:247:void execSQL(java.lang.String) -> execSQL
    294:294:java.util.List getAttachedDbs() -> getAttachedDbs
    265:265:java.lang.String getPath() -> getPath
    83:83:boolean inTransaction() -> inTransaction
    308:308:boolean isDelegate(android.database.sqlite.SQLiteDatabase) -> isDelegate
    258:258:boolean isOpen() -> isOpen
    291:291:boolean isWriteAheadLoggingEnabled() -> isWriteAheadLoggingEnabled
    135:135:android.database.Cursor query(java.lang.String) -> query
    143:156:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    157:157:android.database.Cursor query$lambda$0(kotlin.jvm.functions.Function4,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> query
    157:157:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery):157 -> query
    156:156:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    165:166:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    157:157:android.database.Cursor query$lambda$0(kotlin.jvm.functions.Function4,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> query$lambda$0
    171:176:android.database.Cursor query$lambda$1(androidx.sqlite.db.SupportSQLiteQuery,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> query$lambda$1
    79:80:void setTransactionSuccessful() -> setTransactionSuccessful
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$ExternalSyntheticLambda0 -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.sqlite.db.SupportSQLiteQuery androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$1$42fb69677b2d90999db55e25f83a91b14e4f655962062179feac5377484ae44e$0.f$0 -> f$0
    0:0:void androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$1$42fb69677b2d90999db55e25f83a91b14e4f655962062179feac5377484ae44e$0.<init>(androidx.sqlite.db.SupportSQLiteQuery) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.database.Cursor androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$1$42fb69677b2d90999db55e25f83a91b14e4f655962062179feac5377484ae44e$0.newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> newCursor
      # {"id":"com.android.tools.r8.synthesized"}
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$ExternalSyntheticLambda1 -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function4 androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$1$4ca1fe47fb60a659663dfb72e6161ce39c33ec8a71bb8b0b8365d109d32752af$0.f$0 -> f$0
    0:0:void androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$1$4ca1fe47fb60a659663dfb72e6161ce39c33ec8a71bb8b0b8365d109d32752af$0.<init>(kotlin.jvm.functions.Function4) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.database.Cursor androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$1$4ca1fe47fb60a659663dfb72e6161ce39c33ec8a71bb8b0b8365d109d32752af$0.newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> newCursor
      # {"id":"com.android.tools.r8.synthesized"}
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$Companion -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$Companion:
# {"id":"sourceFile","fileName":"FrameworkSQLiteDatabase.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    323:323:void <init>() -> <init>
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$query$cursorFactory$1 -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$query$cursorFactory$1:
# {"id":"sourceFile","fileName":"FrameworkSQLiteDatabase.kt"}
    143:143:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    148:153:android.database.sqlite.SQLiteCursor invoke(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> invoke
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    33:89:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean,boolean) -> <init>
    33:33:boolean access$getAllowDataLossOnRecovery$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper) -> access$getAllowDataLossOnRecovery$p
    33:33:androidx.sqlite.db.SupportSQLiteOpenHelper$Callback access$getCallback$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper) -> access$getCallback$p
    33:33:android.content.Context access$getContext$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper) -> access$getContext$p
    33:33:java.lang.String access$getName$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper) -> access$getName$p
    33:33:boolean access$getUseNoBackupDirectory$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper) -> access$getUseNoBackupDirectory$p
    33:33:boolean access$getWriteAheadLoggingEnabled$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper) -> access$getWriteAheadLoggingEnabled$p
    110:113:void close() -> close
    92:92:java.lang.String getDatabaseName() -> getDatabaseName
    89:89:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper getDelegate() -> getDelegate
    104:104:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    96:101:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$Companion -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$Companion:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    331:331:void <init>() -> <init>
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    340:340:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteDatabase) -> <init>
    340:340:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getDb() -> getDb
    340:340:void setDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase) -> setDb
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    0:0:void $r8$lambda$wesXNSdtx2gMKZWCPManFjtpLB8(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,android.database.sqlite.SQLiteDatabase) -> $r8$lambda$wesXNSdtx2gMKZWCPManFjtpLB8
      # {"id":"com.android.tools.r8.synthesized"}
    115:143:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean) -> <init>
    129:135:void _init_$lambda$0(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,android.database.sqlite.SQLiteDatabase) -> _init_$lambda$0
    297:305:void close() -> close
    148:159:androidx.sqlite.db.SupportSQLiteDatabase getSupportDatabase(boolean) -> getSupportDatabase
    148:160:androidx.sqlite.db.SupportSQLiteDatabase getSupportDatabase(boolean) -> getSupportDatabase
    239:239:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase) -> getWrappedDb
    231:234:android.database.sqlite.SQLiteDatabase getWritableOrReadableDatabase(boolean) -> getWritableOrReadableDatabase
    164:226:android.database.sqlite.SQLiteDatabase innerGetDatabase(boolean) -> innerGetDatabase
    260:272:void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    243:248:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    275:281:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    284:293:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    251:257:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$ExternalSyntheticLambda0 -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$1$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.f$0 -> f$0
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$1$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.f$1 -> f$1
    0:0:void androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$1$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.<init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$1$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.onCorruption(android.database.sqlite.SQLiteDatabase) -> onCorruption
      # {"id":"com.android.tools.r8.synthesized"}
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackException -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackException:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    307:310:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName,java.lang.Throwable) -> <init>
    308:308:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName getCallbackName() -> getCallbackName
    309:309:java.lang.Throwable getCause() -> getCause
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    313:313:void <clinit>() -> <clinit>
    312:312:void <init>(java.lang.String,int) -> <init>
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$Companion -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$Companion:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    316:316:void <init>() -> <init>
    321:342:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,android.database.sqlite.SQLiteDatabase) -> getWrappedDb
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$WhenMappings -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$WhenMappings:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$lazyDelegate$1 -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$lazyDelegate$1:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelper.kt"}
    42:42:java.lang.Object invoke() -> invoke
    46:77:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper invoke() -> invoke
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory:
# {"id":"sourceFile","fileName":"FrameworkSQLiteOpenHelperFactory.kt"}
    24:24:void <init>() -> <init>
    28:33:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.sqlite.db.framework.FrameworkSQLiteProgram -> androidx.sqlite.db.framework.FrameworkSQLiteProgram:
# {"id":"sourceFile","fileName":"FrameworkSQLiteProgram.kt"}
    24:25:void <init>(android.database.sqlite.SQLiteProgram) -> <init>
    44:45:void bindBlob(int,byte[]) -> bindBlob
    36:37:void bindDouble(int,double) -> bindDouble
    32:33:void bindLong(int,long) -> bindLong
    28:29:void bindNull(int) -> bindNull
    40:41:void bindString(int,java.lang.String) -> bindString
    52:53:void close() -> close
androidx.sqlite.db.framework.FrameworkSQLiteStatement -> androidx.sqlite.db.framework.FrameworkSQLiteStatement:
# {"id":"sourceFile","fileName":"FrameworkSQLiteStatement.kt"}
    28:31:void <init>(android.database.sqlite.SQLiteStatement) -> <init>
    42:42:long executeInsert() -> executeInsert
    38:38:int executeUpdateDelete() -> executeUpdateDelete
androidx.sqlite.util.ProcessLock -> androidx.sqlite.util.ProcessLock:
# {"id":"sourceFile","fileName":"ProcessLock.kt"}
    99:99:void <clinit>() -> <clinit>
    52:52:java.util.Map access$getThreadLocksMap$cp() -> <init>
    52:52:void <init>(java.lang.String,java.io.File,boolean):52 -> <init>
    53:105:void <init>(java.lang.String,java.io.File,boolean) -> <init>
    52:52:java.util.Map access$getThreadLocksMap$cp() -> access$getThreadLocksMap$cp
    69:105:void lock(boolean) -> lock
    68:68:void lock$default(androidx.sqlite.util.ProcessLock,boolean,int,java.lang.Object) -> lock$default
    90:94:void unlock() -> unlock
androidx.sqlite.util.ProcessLock$Companion -> androidx.sqlite.util.ProcessLock$Companion:
# {"id":"sourceFile","fileName":"ProcessLock.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:java.util.concurrent.locks.Lock access$getThreadLock(androidx.sqlite.util.ProcessLock$Companion,java.lang.String) -> <init>
    96:96:void <init>():96 -> <init>
    96:96:java.util.concurrent.locks.Lock access$getThreadLock(androidx.sqlite.util.ProcessLock$Companion,java.lang.String) -> access$getThreadLock
    100:106:java.util.concurrent.locks.Lock getThreadLock(java.lang.String) -> getThreadLock
    361:361:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getThreadLock
    361:361:java.util.concurrent.locks.Lock getThreadLock(java.lang.String):101 -> getThreadLock
    101:101:java.util.concurrent.locks.Lock getThreadLock(java.lang.String) -> getThreadLock
    361:365:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getThreadLock
    361:365:java.util.concurrent.locks.Lock getThreadLock(java.lang.String):101 -> getThreadLock
    101:106:java.util.concurrent.locks.Lock getThreadLock(java.lang.String) -> getThreadLock
androidx.startup.AppInitializer -> androidx.startup.AppInitializer:
# {"id":"sourceFile","fileName":"AppInitializer.java"}
    57:57:void <clinit>() -> <clinit>
    73:77:void <init>(android.content.Context) -> <init>
    200:212:void discoverAndInitialize() -> discoverAndInitialize
    216:244:void discoverAndInitialize(android.os.Bundle) -> discoverAndInitialize
    135:141:java.lang.Object doInitialize(java.lang.Class) -> doInitialize
    149:194:java.lang.Object doInitialize(java.lang.Class,java.util.Set) -> doInitialize
    194:195:java.lang.Object doInitialize(java.lang.Class,java.util.Set) -> doInitialize
    86:93:androidx.startup.AppInitializer getInstance(android.content.Context) -> getInstance
    117:117:java.lang.Object initializeComponent(java.lang.Class) -> initializeComponent
    128:128:boolean isEagerlyInitialized(java.lang.Class) -> isEagerlyInitialized
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
# {"id":"sourceFile","fileName":"InitializationProvider.java"}
    33:33:void <init>() -> <init>
    83:83:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    69:69:java.lang.String getType(android.net.Uri) -> getType
    75:75:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    37:52:boolean onCreate() -> onCreate
    63:63:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    92:92:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.startup.Initializer -> androidx.startup.Initializer:
# {"id":"sourceFile","fileName":"Initializer.java"}
androidx.startup.StartupException -> androidx.startup.StartupException:
# {"id":"sourceFile","fileName":"StartupException.java"}
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
androidx.startup.StartupLogger -> androidx.startup.StartupLogger:
# {"id":"sourceFile","fileName":"StartupLogger.java"}
    61:62:void w(java.lang.String) -> w
androidx.tracing.Trace -> androidx.tracing.Trace:
# {"id":"sourceFile","fileName":"Trace.java"}
    80:83:void beginSection(java.lang.String) -> beginSection
    93:96:void endSection() -> endSection
    229:238:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:173:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.Trace$$ExternalSyntheticApiModelOutline0 -> androidx.tracing.Trace$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.tracing.Trace$$InternalSyntheticApiModelOutline$1$9fd8ec1313d24621ee44530f6533361e5a5e5f72cd46afcc9711b1d3eb4c656e$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
# {"id":"sourceFile","fileName":"TraceApi18Impl.java"}
    49:50:void beginSection(java.lang.String) -> beginSection
    60:61:void endSection() -> endSection
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
# {"id":"sourceFile","fileName":"AnimatorUtils.java"}
    31:34:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:50:void pause(android.animation.Animator) -> pause
    53:66:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
# {"id":"sourceFile","fileName":"AutoTransition.java"}
    37:39:void <init>() -> <init>
    47:51:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    61:168:void <clinit>() -> <clinit>
    164:171:void <init>() -> <init>
    244:245:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:240:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:235:void captureValues(androidx.transition.TransitionValues) -> captureValues
    264:458:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    248:257:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:78:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:453:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    88:88:java.lang.Object get(java.lang.Object) -> get
    96:96:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:92:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    101:101:java.lang.Object get(java.lang.Object) -> get
    109:109:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:105:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    114:114:java.lang.Object get(java.lang.Object) -> get
    126:126:android.graphics.PointF get(android.view.View) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:122:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    131:131:java.lang.Object get(java.lang.Object) -> get
    143:143:android.graphics.PointF get(android.view.View) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:139:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    148:148:java.lang.Object get(java.lang.Object) -> get
    160:160:android.graphics.PointF get(android.view.View) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:156:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:376:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:385:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:401:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:409:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:414:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:419:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    471:473:void <init>(android.view.View) -> <init>
    485:491:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:497:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:482:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
# {"id":"sourceFile","fileName":"Fade.java"}
    91:93:void <init>(int) -> <init>
    98:99:void <init>() -> <init>
    115:118:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    124:143:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    171:178:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    155:159:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    165:167:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
# {"id":"sourceFile","fileName":"Fade.java"}
    135:135:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    138:141:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
# {"id":"sourceFile","fileName":"Fade.java"}
    184:188:void <init>(android.view.View) -> <init>
    201:205:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    192:197:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    42:42:void <init>() -> <init>
    283:287:void addTarget(java.lang.Object,android.view.View) -> addTarget
    102:123:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    213:214:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    46:46:boolean canHandle(java.lang.Object) -> canHandle
    51:55:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    126:128:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    185:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    134:144:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    291:295:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    257:279:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    150:178:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    221:241:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    86:98:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    299:311:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    71:82:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    246:252:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    60:65:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    91:91:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    151:151:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    168:168:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    158:164:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    172:172:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    176:176:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    154:154:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    222:222:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    238:239:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    225:234:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    301:301:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
# {"id":"sourceFile","fileName":"ObjectAnimatorUtils.java"}
    28:29:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
# {"id":"sourceFile","fileName":"PathMotion.java"}
    43:44:void <init>() -> <init>
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
# {"id":"sourceFile","fileName":"PropertyValuesHolderUtils.java"}
    38:39:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
# {"id":"sourceFile","fileName":"RectEvaluator.java"}
    39:40:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
# {"id":"sourceFile","fileName":"Scene.java"}
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    196:197:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
# {"id":"sourceFile","fileName":"Transition.java"}
    164:205:void <clinit>() -> <clinit>
    181:264:void <init>() -> <init>
    2042:2046:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    1000:1001:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    647:663:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1532:1569:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1899:1920:void animate(android.animation.Animator) -> animate
    2017:2030:void cancel() -> cancel
    1599:1653:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2189:2205:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1471:1528:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1577:1586:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2224:2232:androidx.transition.Transition clone() -> clone
    489:489:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    710:803:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1958:1982:void end() -> end
    357:357:long getDuration() -> getDuration
    2133:2133:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    412:412:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1682:1707:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2250:2250:java.lang.String getName() -> getName
    2103:2103:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2181:2181:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    859:864:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    384:384:long getStartDelay() -> getStartDelay
    1415:1415:java.util.List getTargetIds() -> getTargetIds
    1444:1444:java.util.List getTargetNames() -> getTargetNames
    1459:1459:java.util.List getTargetTypes() -> getTargetTypes
    1429:1429:java.util.List getTargets() -> getTargets
    438:438:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1663:1667:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1840:1861:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    816:855:boolean isValidTarget(android.view.View) -> isValidTarget
    1866:1884:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    594:611:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    546:557:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    567:584:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    621:638:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    667:690:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1719:1740:void pause(android.view.View) -> pause
    1782:1823:void playTransition(android.view.ViewGroup) -> playTransition
    2058:2065:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1098:1099:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1751:1774:void resume(android.view.View) -> resume
    896:912:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    878:892:void runAnimators() -> runAnimators
    344:345:androidx.transition.Transition setDuration(long) -> setDuration
    2118:2119:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    398:399:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2085:2090:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2164:2165:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    371:372:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1931:1943:void start() -> start
    2218:2218:java.lang.String toString() -> toString
    2254:2285:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
# {"id":"sourceFile","fileName":"Transition.java"}
    171:171:void <init>() -> <init>
    174:177:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
# {"id":"sourceFile","fileName":"Transition.java"}
    898:898:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    906:908:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    901:902:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
# {"id":"sourceFile","fileName":"Transition.java"}
    1911:1911:void <init>(androidx.transition.Transition) -> <init>
    1914:1916:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
# {"id":"sourceFile","fileName":"Transition.java"}
    2368:2374:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
# {"id":"sourceFile","fileName":"Transition.java"}
    2431:2431:void <init>() -> <init>
androidx.transition.Transition$TransitionListener -> androidx.transition.Transition$TransitionListener:
# {"id":"sourceFile","fileName":"Transition.java"}
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
# {"id":"sourceFile","fileName":"TransitionListenerAdapter.java"}
    27:27:void <init>() -> <init>
    39:39:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    43:43:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    47:47:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    31:31:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
# {"id":"sourceFile","fileName":"TransitionManager.java"}
    83:90:void <clinit>() -> <clinit>
    408:422:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    200:211:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    216:221:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    309:326:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
# {"id":"sourceFile","fileName":"TransitionManager.java"}
    238:241:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    268:303:boolean onPreDraw() -> onPreDraw
    250:250:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    254:264:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    244:246:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
# {"id":"sourceFile","fileName":"TransitionManager.java"}
    287:287:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    290:293:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionPropagation -> androidx.transition.TransitionPropagation:
# {"id":"sourceFile","fileName":"TransitionPropagation.java"}
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
# {"id":"sourceFile","fileName":"TransitionSet.java"}
    80:111:void <init>() -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    179:195:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:201:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    536:544:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:553:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:532:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    649:655:androidx.transition.Transition clone() -> clone
    466:483:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    559:564:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    570:575:void resume(android.view.View) -> resume
    491:520:void runAnimators() -> runAnimators
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:246:androidx.transition.TransitionSet setDuration(long) -> setDuration
    630:636:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    135:146:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:397:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    620:626:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:423:void setupStartEndListeners() -> setupStartEndListeners
    640:644:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
# {"id":"sourceFile","fileName":"TransitionSet.java"}
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:508:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
# {"id":"sourceFile","fileName":"TransitionSet.java"}
    433:435:void <init>(androidx.transition.TransitionSet) -> <init>
    447:454:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:443:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
# {"id":"sourceFile","fileName":"TransitionUtils.java"}
    35:39:void <clinit>() -> <clinit>
    51:72:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:140:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    144:151:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.TransitionUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Bitmap androidx.transition.TransitionUtils$$InternalSyntheticApiModelOutline$1$9416c06dc39a009fed7ca9c0ead9daf511aa61a11d1961633bbdb6fafacab622$0.m(android.graphics.Picture) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
# {"id":"sourceFile","fileName":"TransitionValues.java"}
    52:70:void <init>(android.view.View) -> <init>
    74:81:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:97:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
# {"id":"sourceFile","fileName":"TransitionValuesMaps.java"}
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
# {"id":"sourceFile","fileName":"ViewGroupOverlayApi18.java"}
    32:34:void <init>(android.view.ViewGroup) -> <init>
    38:39:void add(android.graphics.drawable.Drawable) -> add
    48:49:void add(android.view.View) -> add
    43:44:void remove(android.graphics.drawable.Drawable) -> remove
    53:54:void remove(android.view.View) -> remove
androidx.transition.ViewGroupOverlayImpl -> androidx.transition.ViewGroupOverlayImpl:
# {"id":"sourceFile","fileName":"ViewGroupOverlayImpl.java"}
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
# {"id":"sourceFile","fileName":"ViewGroupUtils.java"}
    37:37:void <clinit>() -> <clinit>
    46:47:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:77:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:63:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewGroupUtils$$InternalSyntheticApiModelOutline$1$2ab1cc39db7549dd3b28eb6099cdb18bc8cc034ae623df1348498e4679a218c9$0.m(android.view.ViewGroup,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
# {"id":"sourceFile","fileName":"ViewOverlayApi18.java"}
    31:33:void <init>(android.view.View) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> add
    42:43:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewOverlayImpl -> androidx.transition.ViewOverlayImpl:
# {"id":"sourceFile","fileName":"ViewOverlayImpl.java"}
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    38:71:void <clinit>() -> <clinit>
    128:129:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    90:91:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    100:101:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:120:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    199:200:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:108:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:146:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:162:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:178:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:67:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:82:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
# {"id":"sourceFile","fileName":"ViewUtilsApi19.java"}
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    72:72:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    67:67:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    36:47:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi19$$InternalSyntheticApiModelOutline$1$16bfbe38408d9150895ea4817f7da1d805cf1d879cd5fd76a40ef36206b1c548$0.m(android.view.View,float) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline1 -> androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:float androidx.transition.ViewUtilsApi19$$InternalSyntheticApiModelOutline$1$e6a5fb68daad6de4e6979e9114ed51fd3b504908f3799d4c175931795a16d324$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
# {"id":"sourceFile","fileName":"ViewUtilsApi21.java"}
    33:41:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    46:55:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:69:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi21$$InternalSyntheticApiModelOutline$1$44de3dc28985816055ba9e5d9db3fa449c1d4e90eb342a9dca4b1b21d3dac1dd$0.m(android.view.View,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline1 -> androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi21$$InternalSyntheticApiModelOutline$1$ed0869bb598a5d125288394564fb83af37f3bd674256bf3261dd965caf50814f$0.m(android.view.View,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
# {"id":"sourceFile","fileName":"ViewUtilsApi22.java"}
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:45:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi22$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi22$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi22$$InternalSyntheticApiModelOutline$1$ed8ee0c16186165fba021a58a05307f9b0cf07af9834a444742c9fd671009be2$0.m(android.view.View,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
# {"id":"sourceFile","fileName":"ViewUtilsApi23.java"}
    32:32:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    38:51:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi23$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi23$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi23$$InternalSyntheticApiModelOutline$1$ddcfad1908d065ad511569cc2ccd156ca5bc7dd85a867708e34a0441950cee7e$0.m(android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
# {"id":"sourceFile","fileName":"ViewUtilsApi29.java"}
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    46:47:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:32:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:42:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:57:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
# {"id":"sourceFile","fileName":"ViewUtilsBase.java"}
    32:32:void <init>() -> <init>
    155:172:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.Visibility -> androidx.transition.Visibility:
# {"id":"sourceFile","fileName":"Visibility.java"}
    81:81:void <clinit>() -> <clinit>
    98:101:void <init>() -> <init>
    165:166:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:161:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:156:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:262:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:243:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    507:518:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    283:297:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    340:481:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    126:130:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
# {"id":"sourceFile","fileName":"Visibility.java"}
    438:438:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    456:459:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    442:443:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    447:452:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
# {"id":"sourceFile","fileName":"Visibility.java"}
    531:540:void <init>(android.view.View,int,boolean) -> <init>
    604:613:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    562:563:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    575:576:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    546:549:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    567:567:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    555:558:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    571:571:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    591:591:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    585:587:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    595:596:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    600:601:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    581:581:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
    616:620:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
# {"id":"sourceFile","fileName":"Visibility.java"}
    87:88:void <init>() -> <init>
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
# {"id":"sourceFile","fileName":"WindowIdApi18.java"}
    29:31:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.transition.WindowIdImpl -> androidx.transition.WindowIdImpl:
# {"id":"sourceFile","fileName":"WindowIdImpl.java"}
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
# {"id":"sourceFile","fileName":"AndroidResources.java"}
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
# {"id":"sourceFile","fileName":"Animatable2Compat.java"}
    57:57:void <init>() -> <init>
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
# {"id":"sourceFile","fileName":"Animatable2Compat.java"}
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    156:733:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:527:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:536:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    212:219:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:512:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:518:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    763:811:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    820:821:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    827:831:void removeAnimatorSetListener() -> removeAnimatorSetListener
    329:334:void setAlpha(int) -> setAlpha
    436:441:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:696:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    709:721:void start() -> start
    725:731:void stop() -> stop
    836:851:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:737:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:742:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:747:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:797:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    599:630:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:652:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    548:550:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:558:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:567:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:576:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
# {"id":"sourceFile","fileName":"AnimatorInflaterCompat.java"}
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
# {"id":"sourceFile","fileName":"VectorDrawableCommon.java"}
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    280:280:void <clinit>() -> <clinit>
    311:323:void <init>() -> <init>
    311:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:690:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:650:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    360:428:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:879:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    907:909:boolean needMirroring() -> needMirroring
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    734:748:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:903:void setAllowCaching(boolean) -> setAllowCaching
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:812:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    477:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1810:1810:boolean isClipPath() -> isClipPath
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1822:1837:void <init>() -> <init>
    1822:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1859:1867:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1872:1880:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1967:boolean onStateChanged(int[]) -> onStateChanged
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1445:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1445:1507:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1669:boolean isStateful() -> isStateful
    1674:1678:boolean onStateChanged(int[]) -> onStateChanged
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
    1563:1568:void updateLocalMatrix() -> updateLocalMatrix
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> isStateful
    1438:1438:boolean onStateChanged(int[]) -> onStateChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1687:1695:void <init>() -> <init>
    1687:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1744:1744:boolean isClipPath() -> isClipPath
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1730:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1170:1170:void <clinit>() -> <clinit>
    1171:1195:void <init>() -> <init>
    1171:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1379:1379:float cross(float,float,float,float) -> cross
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1015:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1015:1123:void <init>() -> <init>
    1093:1097:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1108:boolean canReuseCache() -> canReuseCache
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1149:boolean onStateChanged(int[]) -> onStateChanged
    1114:1119:void updateCacheStates() -> updateCacheStates
    1078:1081:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
# {"id":"sourceFile","fileName":"CustomVersionedParcelable.java"}
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    60:60:void <clinit>() -> <clinit>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
# {"id":"sourceFile","fileName":"VersionedParcel.java"}
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    96:96:boolean isStream() -> isStream
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    269:269:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    294:296:void writeBoolean(boolean,int) -> writeBoolean
    304:306:void writeByteArray(byte[],int) -> writeByteArray
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:336:void writeInt(int,int) -> writeInt
    391:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:372:void writeString(java.lang.String,int) -> writeString
    1586:1600:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1040:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
# {"id":"sourceFile","fileName":"VersionedParcelParcel.java"}
    51:54:void <init>(android.os.Parcel) -> <init>
    41:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:111:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:242:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:95:void setOutputField(int) -> setOutputField
    181:182:void writeBoolean(boolean) -> writeBoolean
    126:132:void writeByteArray(byte[]) -> writeByteArray
    196:197:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:147:void writeInt(int) -> writeInt
    176:177:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:167:void writeString(java.lang.String) -> writeString
androidx.versionedparcelable.VersionedParcelable -> androidx.versionedparcelable.VersionedParcelable:
# {"id":"sourceFile","fileName":"VersionedParcelable.java"}
androidx.viewbinding.ViewBinding -> androidx.viewbinding.ViewBinding:
# {"id":"sourceFile","fileName":"ViewBinding.java"}
androidx.viewbinding.ViewBindings -> androidx.viewbinding.ViewBindings:
# {"id":"sourceFile","fileName":"ViewBindings.java"}
    40:51:android.view.View findChildViewById(android.view.View,int) -> findChildViewById
androidx.viewpager2.adapter.FragmentStateAdapter -> androidx.viewpager2.adapter.FragmentStateAdapter:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    351:351:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    588:592:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    657:658:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
com.chad.library.adapter.base.BaseQuickAdapter -> com.chad.library.adapter.base.BaseQuickAdapter:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
    0:0:void $r8$lambda$UNqwjGQJcuMuWNwQuAhaAq2ddZ4(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> $r8$lambda$UNqwjGQJcuMuWNwQuAhaAq2ddZ4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$fEMY2W6KGEJF-Cm7P29GNFSUR04(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> $r8$lambda$fEMY2W6KGEJF-Cm7P29GNFSUR04
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$lQFDK21TKQYoJ8ankuS58d3x1Qw(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> $r8$lambda$lQFDK21TKQYoJ8ankuS58d3x1Qw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$zQwt1Hs3CqHRdnSrmhOVnADE29Y(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> $r8$lambda$zQwt1Hs3CqHRdnSrmhOVnADE29Y
      # {"id":"com.android.tools.r8.synthesized"}
    31:31:void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    32:32:void setItems(java.util.List) -> <init>
    32:32:void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker):32 -> <init>
    31:768:void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    33:33:void <init>(java.util.List) -> <init>
    32:32:void setItems(java.util.List) -> <init>
    32:32:void <init>(java.util.List):32 -> <init>
    37:37:void <init>(java.util.List) -> <init>
    121:121:void setAnimationFirstOnly(boolean) -> <init>
    121:121:void <init>(java.util.List):121 -> <init>
    31:31:void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    31:31:void <init>(java.util.List):31 -> <init>
    298:349:void bindViewClickListener(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewClickListener
    323:328:void bindViewClickListener$lambda$11$lambda$10$lambda$9(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> bindViewClickListener$lambda$11$lambda$10$lambda$9
    339:343:boolean bindViewClickListener$lambda$14$lambda$13$lambda$12(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> bindViewClickListener$lambda$14$lambda$13$lambda$12
    300:305:void bindViewClickListener$lambda$6$lambda$5(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> bindViewClickListener$lambda$6$lambda$5
    309:313:boolean bindViewClickListener$lambda$8$lambda$7(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View) -> bindViewClickListener$lambda$8$lambda$7
    429:430:boolean displayEmptyView(java.util.List) -> displayEmptyView
    428:428:boolean displayEmptyView$default(com.chad.library.adapter.base.BaseQuickAdapter,java.util.List,int,java.lang.Object) -> displayEmptyView$default
    403:403:java.lang.Object getItem(int) -> getItem
    169:169:int getItemCount(java.util.List) -> getItemCount
    185:188:int getItemCount() -> getItemCount
    247:247:long getItemId(int) -> getItemId
    176:176:int getItemViewType(int,java.util.List) -> getItemViewType
    200:201:int getItemViewType(int) -> getItemViewType
    32:32:void setItems(java.util.List) -> getItems
    32:32:java.util.List getItems():32 -> getItems
    49:52:androidx.recyclerview.widget.RecyclerView getRecyclerView() -> getRecyclerView
    392:392:boolean isFullSpanItem(int) -> isFullSpanItem
    282:284:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    161:162:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.lang.Object,java.util.List) -> onBindViewHolder
    222:228:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    233:244:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    207:218:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    288:290:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    375:376:void onItemChildClick(android.view.View,int) -> onItemChildClick
    379:380:boolean onItemChildLongClick(android.view.View,int) -> onItemChildLongClick
    359:360:void onItemClick(android.view.View,int) -> onItemClick
    371:371:boolean onItemLongClick(android.view.View,int) -> onItemLongClick
    260:268:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onViewAttachedToWindow
    1855:1855:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):268 -> onViewAttachedToWindow
    269:270:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    1855:1856:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onViewAttachedToWindow
    1855:1856:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):268 -> onViewAttachedToWindow
    271:271:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    275:275:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onViewDetachedFromWindow
    1855:1855:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):275 -> onViewDetachedFromWindow
    276:277:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    1855:1856:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onViewDetachedFromWindow
    1855:1856:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):275 -> onViewDetachedFromWindow
    278:278:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    439:448:void runAnimator(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> runAnimator
    32:32:void setItems(java.util.List) -> setItems
    672:674:com.chad.library.adapter.base.BaseQuickAdapter setOnItemClickListener(com.chad.library.adapter.base.BaseQuickAdapter$OnItemClickListener) -> setOnItemClickListener
    674:674:com.chad.library.adapter.base.BaseQuickAdapter setOnItemClickListener(com.chad.library.adapter.base.BaseQuickAdapter$OnItemClickListener) -> setOnItemClickListener
    678:680:com.chad.library.adapter.base.BaseQuickAdapter setOnItemLongClickListener(com.chad.library.adapter.base.BaseQuickAdapter$OnItemLongClickListener) -> setOnItemLongClickListener
    680:680:com.chad.library.adapter.base.BaseQuickAdapter setOnItemLongClickListener(com.chad.library.adapter.base.BaseQuickAdapter$OnItemLongClickListener) -> setOnItemLongClickListener
    460:461:void startItemAnimator(android.animation.Animator,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startItemAnimator
    486:509:void submitList(java.util.List) -> submitList
com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda0 -> com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.recyclerview.widget.RecyclerView$ViewHolder com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$0.f$0 -> f$0
    com.chad.library.adapter.base.BaseQuickAdapter com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$0.f$1 -> f$1
    0:0:void com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$0.<init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda1 -> com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.recyclerview.widget.RecyclerView$ViewHolder com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$1.f$0 -> f$0
    com.chad.library.adapter.base.BaseQuickAdapter com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$1.f$1 -> f$1
    0:0:void com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$1.<init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$1.onLongClick(android.view.View) -> onLongClick
      # {"id":"com.android.tools.r8.synthesized"}
com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda2 -> com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.recyclerview.widget.RecyclerView$ViewHolder com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$2.f$0 -> f$0
    com.chad.library.adapter.base.BaseQuickAdapter com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$2.f$1 -> f$1
    0:0:void com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$2.<init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$2.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda3 -> com.chad.library.adapter.base.BaseQuickAdapter$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.recyclerview.widget.RecyclerView$ViewHolder com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$3.f$0 -> f$0
    com.chad.library.adapter.base.BaseQuickAdapter com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$3.f$1 -> f$1
    0:0:void com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$3.<init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,com.chad.library.adapter.base.BaseQuickAdapter) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.chad.library.adapter.base.BaseQuickAdapter$$InternalSyntheticLambda$2$f91d012a3a960066617d54e4d398dc93d7fcdeec6d359777121473bcca868d5c$3.onLongClick(android.view.View) -> onLongClick
      # {"id":"com.android.tools.r8.synthesized"}
com.chad.library.adapter.base.BaseQuickAdapter$Companion -> com.chad.library.adapter.base.BaseQuickAdapter$Companion:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    763:763:void <init>() -> <init>
com.chad.library.adapter.base.BaseQuickAdapter$OnItemClickListener -> com.chad.library.adapter.base.BaseQuickAdapter$OnItemClickListener:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
com.chad.library.adapter.base.BaseQuickAdapter$OnItemLongClickListener -> com.chad.library.adapter.base.BaseQuickAdapter$OnItemLongClickListener:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
com.chad.library.adapter.base.BaseQuickAdapter$OnViewAttachStateChangeListener -> com.chad.library.adapter.base.BaseQuickAdapter$OnViewAttachStateChangeListener:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
com.chad.library.adapter.base.animation.AlphaInAnimation -> com.chad.library.adapter.base.animation.AlphaInAnimation:
# {"id":"sourceFile","fileName":"AlphaInAnimation.kt"}
    13:18:void <init>(long,float) -> <init>
    13:31:void <init>(long,float,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    21:24:android.animation.Animator animator(android.view.View) -> animator
com.chad.library.adapter.base.animation.AlphaInAnimation$Companion -> com.chad.library.adapter.base.animation.AlphaInAnimation$Companion:
# {"id":"sourceFile","fileName":"AlphaInAnimation.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    27:27:void <init>() -> <init>
com.chad.library.adapter.base.animation.ItemAnimator -> com.chad.library.adapter.base.animation.ItemAnimator:
# {"id":"sourceFile","fileName":"ItemAnimator.kt"}
com.chad.library.adapter.base.layoutmanager.QuickGridLayoutManager -> com.chad.library.adapter.base.layoutmanager.QuickGridLayoutManager:
# {"id":"sourceFile","fileName":"QuickGridLayoutManager.kt"}
    22:38:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    18:18:androidx.recyclerview.widget.RecyclerView$Adapter access$getAdapter$p(com.chad.library.adapter.base.layoutmanager.QuickGridLayoutManager) -> access$getAdapter$p
    43:44:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
com.chad.library.adapter.base.layoutmanager.QuickGridLayoutManager$FullSpanSizeLookup -> com.chad.library.adapter.base.layoutmanager.QuickGridLayoutManager$FullSpanSizeLookup:
# {"id":"sourceFile","fileName":"QuickGridLayoutManager.kt"}
    55:55:void <init>(com.chad.library.adapter.base.layoutmanager.QuickGridLayoutManager) -> <init>
    60:94:int getSpanSize(int) -> getSpanSize
    57:57:void setOriginalSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setOriginalSpanSizeLookup
com.chad.library.adapter.base.util.AdapterUtilsKt -> com.chad.library.adapter.base.util.AdapterUtilsKt:
# {"id":"sourceFile","fileName":"AdapterUtils.kt"}
    26:30:void asStaggeredGridFullSpan(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> asStaggeredGridFullSpan
com.chad.library.adapter.base.viewholder.EmptyLayoutVH -> com.chad.library.adapter.base.viewholder.EmptyLayoutVH:
# {"id":"sourceFile","fileName":"EmptyLayoutVH.kt"}
    16:16:void <init>(android.widget.FrameLayout) -> <init>
    19:37:void changeEmptyView(android.view.View) -> changeEmptyView
com.chad.library.adapter.base.viewholder.QuickViewHolder -> com.chad.library.adapter.base.viewholder.QuickViewHolder:
# {"id":"sourceFile","fileName":"QuickViewHolder.kt"}
    19:29:void <init>(android.view.View) -> <init>
    23:23:void <init>(int,android.view.ViewGroup) -> <init>
    32:110:android.view.View getView(int) -> getView
    39:42:android.view.View getViewOrNull(int) -> getViewOrNull
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    55:55:com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$Builder builder() -> builder
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1 -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityCBuilder -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityCBuilder:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    107:107:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    115:118:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl) -> <init>
    107:107:dagger.hilt.android.internal.builders.ActivityComponentBuilder activity(android.app.Activity) -> activity
    122:123:com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityCBuilder activity(android.app.Activity) -> activity
    107:107:dagger.hilt.android.components.ActivityComponent build() -> build
    128:129:com.daily.mydailylife.MyApplication_HiltComponents$ActivityC build() -> build
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityCImpl -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityCImpl:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    344:344:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,android.app.Activity,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    349:357:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,android.app.Activity) -> <init>
    373:373:dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$InternalFactoryFactory getHiltInternalFactoryFactory() -> getHiltInternalFactoryFactory
    378:378:java.util.Set getViewModelKeys() -> getViewModelKeys
    361:361:void injectAddOrUpdateNoteActivity(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity) -> injectAddOrUpdateNoteActivity
    365:365:void injectLoadingActivity(com.daily.mydailylife.ui.activity.loading.LoadingActivity) -> injectLoadingActivity
    369:369:void injectMainActivity(com.daily.mydailylife.ui.activity.main.MainActivity) -> injectMainActivity
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCBuilder -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCBuilder:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    94:94:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    97:99:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl) -> <init>
    94:94:dagger.hilt.android.components.ActivityRetainedComponent build() -> build
    103:103:com.daily.mydailylife.MyApplication_HiltComponents$ActivityRetainedC build() -> build
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    455:455:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    458:468:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl) -> <init>
    477:477:dagger.hilt.android.internal.builders.ActivityComponentBuilder activityComponentBuilder() -> activityComponentBuilder
    482:482:dagger.hilt.android.ActivityRetainedLifecycle getActivityRetainedLifecycle() -> getActivityRetainedLifecycle
    472:473:void initialize() -> initialize
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$SwitchingProvider -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$SwitchingProvider:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    493:497:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,int) -> <init>
    502:506:java.lang.Object get() -> get
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$Builder -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$Builder:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    58:58:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    61:62:void <init>() -> <init>
    65:66:com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$Builder applicationContextModule(dagger.hilt.android.internal.modules.ApplicationContextModule) -> applicationContextModule
    89:90:com.daily.mydailylife.MyApplication_HiltComponents$SingletonC build() -> build
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    524:524:void <init>(dagger.hilt.android.internal.modules.ApplicationContextModule,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    527:539:void <init>(dagger.hilt.android.internal.modules.ApplicationContextModule) -> <init>
    524:524:dagger.hilt.android.internal.modules.ApplicationContextModule access$1000(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl) -> access$1000
    524:524:javax.inject.Provider access$1400(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl) -> access$1400
    524:524:javax.inject.Provider access$1800(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl) -> access$1800
    524:524:javax.inject.Provider access$1900(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl) -> access$1900
    543:546:void initialize(dagger.hilt.android.internal.modules.ApplicationContextModule) -> initialize
    550:550:void injectMyApplication(com.daily.mydailylife.MyApplication) -> injectMyApplication
    559:559:dagger.hilt.android.internal.builders.ActivityRetainedComponentBuilder retainedComponentBuilder() -> retainedComponentBuilder
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl$SwitchingProvider -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl$SwitchingProvider:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    572:575:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,int) -> <init>
    580:590:java.lang.Object get() -> get
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCBuilder -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCBuilder:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    224:224:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    232:235:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl) -> <init>
    224:224:dagger.hilt.android.components.ViewModelComponent build() -> build
    245:246:com.daily.mydailylife.MyApplication_HiltComponents$ViewModelC build() -> build
    224:224:dagger.hilt.android.internal.builders.ViewModelComponentBuilder savedStateHandle(androidx.lifecycle.SavedStateHandle) -> savedStateHandle
    239:240:com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCBuilder savedStateHandle(androidx.lifecycle.SavedStateHandle) -> savedStateHandle
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCImpl -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCImpl:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    397:397:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,androidx.lifecycle.SavedStateHandle,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$1) -> <init>
    402:413:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,androidx.lifecycle.SavedStateHandle) -> <init>
    422:422:java.util.Map getHiltViewModelMap() -> getHiltViewModelMap
    417:418:void initialize(androidx.lifecycle.SavedStateHandle) -> initialize
com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCImpl$SwitchingProvider -> com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCImpl$SwitchingProvider:
# {"id":"sourceFile","fileName":"DaggerMyApplication_HiltComponents_SingletonC.java"}
    435:440:void <init>(com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$SingletonCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.daily.mydailylife.DaggerMyApplication_HiltComponents_SingletonC$ViewModelCImpl,int) -> <init>
    445:449:java.lang.Object get() -> get
com.daily.mydailylife.Hilt_MyApplication -> com.daily.mydailylife.Hilt_MyApplication:
# {"id":"sourceFile","fileName":"Hilt_MyApplication.java"}
    16:19:void <init>() -> <init>
    29:29:dagger.hilt.android.internal.managers.ApplicationComponentManager componentManager() -> componentManager
    34:34:java.lang.Object generatedComponent() -> generatedComponent
    45:51:void hiltInternalInject() -> hiltInternalInject
    40:42:void onCreate() -> onCreate
com.daily.mydailylife.Hilt_MyApplication$1 -> com.daily.mydailylife.Hilt_MyApplication$1:
# {"id":"sourceFile","fileName":"Hilt_MyApplication.java"}
    19:19:void <init>(com.daily.mydailylife.Hilt_MyApplication) -> <init>
    22:23:java.lang.Object get() -> get
com.daily.mydailylife.MyApplication -> com.daily.mydailylife.MyApplication:
# {"id":"sourceFile","fileName":"MyApplication.kt"}
    7:7:void <init>() -> <init>
com.daily.mydailylife.MyApplication_GeneratedInjector -> com.daily.mydailylife.MyApplication_GeneratedInjector:
# {"id":"sourceFile","fileName":"MyApplication_GeneratedInjector.java"}
com.daily.mydailylife.MyApplication_HiltComponents$ActivityC -> com.daily.mydailylife.MyApplication_HiltComponents$ActivityC:
# {"id":"sourceFile","fileName":"MyApplication_HiltComponents.java"}
    174:174:void <init>() -> <init>
com.daily.mydailylife.MyApplication_HiltComponents$ActivityRetainedC -> com.daily.mydailylife.MyApplication_HiltComponents$ActivityRetainedC:
# {"id":"sourceFile","fileName":"MyApplication_HiltComponents.java"}
    156:156:void <init>() -> <init>
com.daily.mydailylife.MyApplication_HiltComponents$SingletonC -> com.daily.mydailylife.MyApplication_HiltComponents$SingletonC:
# {"id":"sourceFile","fileName":"MyApplication_HiltComponents.java"}
    130:130:void <init>() -> <init>
com.daily.mydailylife.MyApplication_HiltComponents$ViewModelC -> com.daily.mydailylife.MyApplication_HiltComponents$ViewModelC:
# {"id":"sourceFile","fileName":"MyApplication_HiltComponents.java"}
    195:195:void <init>() -> <init>
com.daily.mydailylife.data.local.MyDatabase -> com.daily.mydailylife.data.local.MyDatabase:
# {"id":"sourceFile","fileName":"MyDatabase.kt"}
    8:8:void <init>() -> <init>
com.daily.mydailylife.data.local.MyDatabase_Impl -> com.daily.mydailylife.data.local.MyDatabase_Impl:
# {"id":"sourceFile","fileName":"MyDatabase_Impl.java"}
    32:32:void <init>() -> <init>
    32:32:java.util.List access$000(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$000
    32:32:java.util.List access$100(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$100
    32:32:java.util.List access$1000(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$1000
    32:32:java.util.List access$200(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$200
    32:32:java.util.List access$300(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$300
    32:32:java.util.List access$400(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$400
    32:32:java.util.List access$500(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$500
    32:32:androidx.sqlite.db.SupportSQLiteDatabase access$602(com.daily.mydailylife.data.local.MyDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$602
    32:32:void access$700(com.daily.mydailylife.data.local.MyDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$700
    32:32:java.util.List access$800(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$800
    32:32:java.util.List access$900(com.daily.mydailylife.data.local.MyDatabase_Impl) -> access$900
    115:117:androidx.room.InvalidationTracker createInvalidationTracker() -> createInvalidationTracker
    37:110:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> createOpenHelper
    153:153:java.util.List getAutoMigrations(java.util.Map) -> getAutoMigrations
    146:147:java.util.Set getRequiredAutoMigrationSpecs() -> getRequiredAutoMigrationSpecs
    139:141:java.util.Map getRequiredTypeConverters() -> getRequiredTypeConverters
    158:166:com.daily.mydailylife.data.local.NoteDao noteDao() -> noteDao
com.daily.mydailylife.data.local.MyDatabase_Impl$1 -> com.daily.mydailylife.data.local.MyDatabase_Impl$1:
# {"id":"sourceFile","fileName":"MyDatabase_Impl.java"}
    37:37:void <init>(com.daily.mydailylife.data.local.MyDatabase_Impl,int) -> <init>
    40:43:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> createAllTables
    47:53:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> dropAllTables
    57:62:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    66:73:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    82:82:void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> onPostMigrate
    77:78:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> onPreMigrate
    86:102:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase) -> onValidateSchema
com.daily.mydailylife.data.local.NoteDao -> com.daily.mydailylife.data.local.NoteDao:
# {"id":"sourceFile","fileName":"NoteDao.kt"}
com.daily.mydailylife.data.local.NoteDao_Impl -> com.daily.mydailylife.data.local.NoteDao_Impl:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    37:115:void <init>(androidx.room.RoomDatabase) -> <init>
    28:28:androidx.room.RoomDatabase access$000(com.daily.mydailylife.data.local.NoteDao_Impl) -> access$000
    28:28:androidx.room.EntityInsertionAdapter access$100(com.daily.mydailylife.data.local.NoteDao_Impl) -> access$100
    28:28:androidx.room.EntityDeletionOrUpdateAdapter access$200(com.daily.mydailylife.data.local.NoteDao_Impl) -> access$200
    28:28:androidx.room.EntityDeletionOrUpdateAdapter access$300(com.daily.mydailylife.data.local.NoteDao_Impl) -> access$300
    138:138:java.lang.Object deleteNote(com.daily.mydailylife.data.model.NoteModel,kotlin.coroutines.Continuation) -> deleteNote
    173:176:java.lang.Object getAllNotes(kotlin.coroutines.Continuation) -> getAllNotes
    231:231:java.util.List getRequiredConverters() -> getRequiredConverters
    120:120:java.lang.Object insertNote(com.daily.mydailylife.data.model.NoteModel,kotlin.coroutines.Continuation) -> insertNote
    156:156:java.lang.Object updateNote(com.daily.mydailylife.data.model.NoteModel,kotlin.coroutines.Continuation) -> updateNote
com.daily.mydailylife.data.local.NoteDao_Impl$1 -> com.daily.mydailylife.data.local.NoteDao_Impl$1:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    39:39:void <init>(com.daily.mydailylife.data.local.NoteDao_Impl,androidx.room.RoomDatabase) -> <init>
    39:39:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    47:69:void bind(androidx.sqlite.db.SupportSQLiteStatement,com.daily.mydailylife.data.model.NoteModel) -> bind
    42:42:java.lang.String createQuery() -> createQuery
com.daily.mydailylife.data.local.NoteDao_Impl$2 -> com.daily.mydailylife.data.local.NoteDao_Impl$2:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    71:71:void <init>(com.daily.mydailylife.data.local.NoteDao_Impl,androidx.room.RoomDatabase) -> <init>
    71:71:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    79:80:void bind(androidx.sqlite.db.SupportSQLiteStatement,com.daily.mydailylife.data.model.NoteModel) -> bind
    74:74:java.lang.String createQuery() -> createQuery
com.daily.mydailylife.data.local.NoteDao_Impl$3 -> com.daily.mydailylife.data.local.NoteDao_Impl$3:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    82:82:void <init>(com.daily.mydailylife.data.local.NoteDao_Impl,androidx.room.RoomDatabase) -> <init>
    82:82:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    90:113:void bind(androidx.sqlite.db.SupportSQLiteStatement,com.daily.mydailylife.data.model.NoteModel) -> bind
    85:85:java.lang.String createQuery() -> createQuery
com.daily.mydailylife.data.local.NoteDao_Impl$4 -> com.daily.mydailylife.data.local.NoteDao_Impl$4:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    120:120:void <init>(com.daily.mydailylife.data.local.NoteDao_Impl,com.daily.mydailylife.data.model.NoteModel) -> <init>
    120:120:java.lang.Object call() -> call
    123:129:java.lang.Long call() -> call
    129:130:java.lang.Long call() -> call
com.daily.mydailylife.data.local.NoteDao_Impl$5 -> com.daily.mydailylife.data.local.NoteDao_Impl$5:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    138:138:void <init>(com.daily.mydailylife.data.local.NoteDao_Impl,com.daily.mydailylife.data.model.NoteModel) -> <init>
    138:138:java.lang.Object call() -> call
    141:147:kotlin.Unit call() -> call
    147:148:kotlin.Unit call() -> call
com.daily.mydailylife.data.local.NoteDao_Impl$6 -> com.daily.mydailylife.data.local.NoteDao_Impl$6:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    156:156:void <init>(com.daily.mydailylife.data.local.NoteDao_Impl,com.daily.mydailylife.data.model.NoteModel) -> <init>
    156:156:java.lang.Object call() -> call
    159:165:kotlin.Unit call() -> call
    165:166:kotlin.Unit call() -> call
com.daily.mydailylife.data.local.NoteDao_Impl$7 -> com.daily.mydailylife.data.local.NoteDao_Impl$7:
# {"id":"sourceFile","fileName":"NoteDao_Impl.java"}
    176:176:void <init>(com.daily.mydailylife.data.local.NoteDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    176:176:java.lang.Object call() -> call
    179:224:java.util.List call() -> call
    224:225:java.util.List call() -> call
com.daily.mydailylife.data.model.FormattedDate -> com.daily.mydailylife.data.model.FormattedDate:
# {"id":"sourceFile","fileName":"FormattedDate.kt"}
    3:7:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    7:7:java.lang.String getDayName() -> getDayName
    6:6:java.lang.String getDayNum() -> getDayNum
    4:4:java.lang.String getMonth() -> getMonth
    5:5:java.lang.String getYear() -> getYear
com.daily.mydailylife.data.model.NoteModel -> com.daily.mydailylife.data.model.NoteModel:
# {"id":"sourceFile","fileName":"NoteModel.kt"}
    8:20:void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    13:13:java.lang.String getDate() -> getDate
    17:17:java.lang.String getDescription() -> getDescription
    19:19:java.lang.String getHashtags() -> getHashtags
    11:11:int getId() -> getId
    21:21:int getMood() -> getMood
    15:15:java.lang.String getTitle() -> getTitle
com.daily.mydailylife.data.repository.NoteRepository -> com.daily.mydailylife.data.repository.NoteRepository:
# {"id":"sourceFile","fileName":"NoteRepository.kt"}
    7:8:void <init>(com.daily.mydailylife.data.local.NoteDao) -> <init>
    20:21:java.lang.Object deleteNote(com.daily.mydailylife.data.model.NoteModel,kotlin.coroutines.Continuation) -> deleteNote
    24:24:java.lang.Object getAllNotes(kotlin.coroutines.Continuation) -> getAllNotes
    12:13:java.lang.Object insertNote(com.daily.mydailylife.data.model.NoteModel,kotlin.coroutines.Continuation) -> insertNote
    16:17:java.lang.Object updateNote(com.daily.mydailylife.data.model.NoteModel,kotlin.coroutines.Continuation) -> updateNote
com.daily.mydailylife.databinding.ActivityAddNoteBinding -> com.daily.mydailylife.databinding.ActivityAddNoteBinding:
# {"id":"sourceFile","fileName":"ActivityAddNoteBinding.java"}
    60:72:void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.RelativeLayout,android.widget.TextView,android.widget.LinearLayout,android.widget.EditText,android.widget.EditText,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView) -> <init>
    101:166:com.daily.mydailylife.databinding.ActivityAddNoteBinding bind(android.view.View) -> bind
    22:22:android.view.View getRoot() -> getRoot
    77:77:androidx.constraintlayout.widget.ConstraintLayout getRoot() -> getRoot
    82:82:com.daily.mydailylife.databinding.ActivityAddNoteBinding inflate(android.view.LayoutInflater) -> inflate
    88:92:com.daily.mydailylife.databinding.ActivityAddNoteBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.daily.mydailylife.databinding.ActivityLoadingBinding -> com.daily.mydailylife.databinding.ActivityLoadingBinding:
# {"id":"sourceFile","fileName":"ActivityLoadingBinding.java"}
    25:28:void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.ImageView) -> <init>
    57:66:com.daily.mydailylife.databinding.ActivityLoadingBinding bind(android.view.View) -> bind
    18:18:android.view.View getRoot() -> getRoot
    33:33:androidx.constraintlayout.widget.ConstraintLayout getRoot() -> getRoot
    38:38:com.daily.mydailylife.databinding.ActivityLoadingBinding inflate(android.view.LayoutInflater) -> inflate
    44:48:com.daily.mydailylife.databinding.ActivityLoadingBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.daily.mydailylife.databinding.ActivityMainBinding -> com.daily.mydailylife.databinding.ActivityMainBinding:
# {"id":"sourceFile","fileName":"ActivityMainBinding.java"}
    46:54:void <init>(androidx.constraintlayout.widget.ConstraintLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.widget.ImageView,android.widget.ImageView,androidx.recyclerview.widget.RecyclerView,android.widget.TextView,android.widget.TextView) -> <init>
    83:123:com.daily.mydailylife.databinding.ActivityMainBinding bind(android.view.View) -> bind
    21:21:android.view.View getRoot() -> getRoot
    59:59:androidx.constraintlayout.widget.ConstraintLayout getRoot() -> getRoot
    64:64:com.daily.mydailylife.databinding.ActivityMainBinding inflate(android.view.LayoutInflater) -> inflate
    70:74:com.daily.mydailylife.databinding.ActivityMainBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.daily.mydailylife.databinding.ActivityViewNoteBinding -> com.daily.mydailylife.databinding.ActivityViewNoteBinding:
# {"id":"sourceFile","fileName":"ActivityViewNoteBinding.java"}
    59:71:void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.RelativeLayout,android.widget.TextView,android.widget.LinearLayout,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView) -> <init>
    100:165:com.daily.mydailylife.databinding.ActivityViewNoteBinding bind(android.view.View) -> bind
    21:21:android.view.View getRoot() -> getRoot
    76:76:androidx.constraintlayout.widget.ConstraintLayout getRoot() -> getRoot
    81:81:com.daily.mydailylife.databinding.ActivityViewNoteBinding inflate(android.view.LayoutInflater) -> inflate
    87:91:com.daily.mydailylife.databinding.ActivityViewNoteBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.daily.mydailylife.di.DataModule -> com.daily.mydailylife.di.DataModule:
# {"id":"sourceFile","fileName":"DataModule.kt"}
    16:16:void <init>() -> <init>
    33:33:com.daily.mydailylife.data.local.NoteDao provideDao(com.daily.mydailylife.data.local.MyDatabase) -> provideDao
    23:27:com.daily.mydailylife.data.local.MyDatabase provideDataBase(android.content.Context) -> provideDataBase
    39:39:com.daily.mydailylife.data.repository.NoteRepository provideRepository(com.daily.mydailylife.data.local.NoteDao) -> provideRepository
com.daily.mydailylife.di.DataModule_ProvideDaoFactory -> com.daily.mydailylife.di.DataModule_ProvideDaoFactory:
# {"id":"sourceFile","fileName":"DataModule_ProvideDaoFactory.java"}
    37:37:com.daily.mydailylife.data.local.NoteDao provideDao(com.daily.mydailylife.data.local.MyDatabase) -> provideDao
com.daily.mydailylife.di.DataModule_ProvideDataBaseFactory -> com.daily.mydailylife.di.DataModule_ProvideDataBaseFactory:
# {"id":"sourceFile","fileName":"DataModule_ProvideDataBaseFactory.java"}
    37:37:com.daily.mydailylife.data.local.MyDatabase provideDataBase(android.content.Context) -> provideDataBase
com.daily.mydailylife.di.DataModule_ProvideRepositoryFactory -> com.daily.mydailylife.di.DataModule_ProvideRepositoryFactory:
# {"id":"sourceFile","fileName":"DataModule_ProvideRepositoryFactory.java"}
    37:37:com.daily.mydailylife.data.repository.NoteRepository provideRepository(com.daily.mydailylife.data.local.NoteDao) -> provideRepository
com.daily.mydailylife.ui.activity.BaseActivity -> com.daily.mydailylife.ui.activity.BaseActivity:
# {"id":"sourceFile","fileName":"BaseActivity.kt"}
    12:18:void <init>(kotlin.jvm.functions.Function1,kotlin.reflect.KClass) -> <init>
    12:12:kotlin.jvm.functions.Function1 access$getBindingInflater$p(com.daily.mydailylife.ui.activity.BaseActivity) -> access$getBindingInflater$p
    18:18:androidx.viewbinding.ViewBinding getBinding() -> getBinding
    17:17:androidx.lifecycle.ViewModel getViewModel() -> getViewModel
    21:24:void onCreate(android.os.Bundle) -> onCreate
com.daily.mydailylife.ui.activity.BaseActivity$binding$2 -> com.daily.mydailylife.ui.activity.BaseActivity$binding$2:
# {"id":"sourceFile","fileName":"BaseActivity.kt"}
    18:18:androidx.viewbinding.ViewBinding invoke() -> invoke
    18:18:java.lang.Object invoke() -> invoke
com.daily.mydailylife.ui.activity.BaseActivity$viewModel$2 -> com.daily.mydailylife.ui.activity.BaseActivity$viewModel$2:
# {"id":"sourceFile","fileName":"BaseActivity.kt"}
    17:17:androidx.lifecycle.ViewModelStore invoke() -> invoke
    17:17:java.lang.Object invoke() -> invoke
com.daily.mydailylife.ui.activity.BaseActivity$viewModel$3 -> com.daily.mydailylife.ui.activity.BaseActivity$viewModel$3:
# {"id":"sourceFile","fileName":"BaseActivity.kt"}
    17:17:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
    17:17:java.lang.Object invoke() -> invoke
com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity -> com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity:
# {"id":"sourceFile","fileName":"AddOrUpdateNoteActivity.kt"}
    0:0:void $r8$lambda$10zxuITTFdfwxkFQJhSJ5Xz6jd0(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,android.view.View) -> $r8$lambda$10zxuITTFdfwxkFQJhSJ5Xz6jd0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$CPCB073-SWQDmkvHIfgfP9M7Aw4(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,com.daily.mydailylife.ui.dialog.MoodsDialog,int) -> $r8$lambda$CPCB073-SWQDmkvHIfgfP9M7Aw4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$E30gq40ta59GvVreWhgN887Xpvo(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,android.view.View) -> $r8$lambda$E30gq40ta59GvVreWhgN887Xpvo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ym3sT4869mY6z6B8b5TOjcNA6a8(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,android.view.View) -> $r8$lambda$ym3sT4869mY6z6B8b5TOjcNA6a8
      # {"id":"com.android.tools.r8.synthesized"}
    22:23:void <init>() -> <init>
    49:57:void getDate() -> getDate
    41:46:void initOnClicks() -> initOnClicks
    42:42:void initOnClicks$lambda-3$lambda-0(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,android.view.View) -> initOnClicks$lambda-3$lambda-0
    43:43:void initOnClicks$lambda-3$lambda-1(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,android.view.View) -> initOnClicks$lambda-3$lambda-1
    44:44:void initOnClicks$lambda-3$lambda-2(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,android.view.View) -> initOnClicks$lambda-3$lambda-2
    100:122:boolean isUpdateNote() -> isUpdateNote
    137:142:void onBackPressed() -> onBackPressed
    32:38:void onCreate(android.os.Bundle) -> onCreate
    60:97:void saveNote() -> saveNote
    126:134:void showMoodDialog() -> showMoodDialog
    128:131:void showMoodDialog$lambda-9(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,com.daily.mydailylife.ui.dialog.MoodsDialog,int) -> showMoodDialog$lambda-9
com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda0 -> com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$0.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$0.<init>(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda1 -> com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$1.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$1.<init>(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda2 -> com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$2.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$2.<init>(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$1$c0a125e9c784e00dd14431edbd506cd86b89c76ed35d9d6c80f9536d5e9e889e$2.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda3 -> com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$2$e04d7db0e953970d9596a7f9492085404bc60d22ca67b2fe4491761b66a6af87$0.f$0 -> f$0
    com.daily.mydailylife.ui.dialog.MoodsDialog com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$2$e04d7db0e953970d9596a7f9492085404bc60d22ca67b2fe4491761b66a6af87$0.f$1 -> f$1
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$2$e04d7db0e953970d9596a7f9492085404bc60d22ca67b2fe4491761b66a6af87$0.<init>(com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity,com.daily.mydailylife.ui.dialog.MoodsDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$$InternalSyntheticLambda$2$e04d7db0e953970d9596a7f9492085404bc60d22ca67b2fe4491761b66a6af87$0.onItemClick(int) -> onItemClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$1 -> com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity$1:
# {"id":"sourceFile","fileName":"AddOrUpdateNoteActivity.kt"}
    23:23:com.daily.mydailylife.databinding.ActivityAddNoteBinding invoke(android.view.LayoutInflater) -> invoke
    23:23:java.lang.Object invoke(java.lang.Object) -> invoke
com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity_GeneratedInjector -> com.daily.mydailylife.ui.activity.add_note.AddOrUpdateNoteActivity_GeneratedInjector:
# {"id":"sourceFile","fileName":"AddOrUpdateNoteActivity_GeneratedInjector.java"}
com.daily.mydailylife.ui.activity.add_note.Hilt_AddOrUpdateNoteActivity -> com.daily.mydailylife.ui.activity.add_note.Hilt_AddOrUpdateNoteActivity:
# {"id":"sourceFile","fileName":"Hilt_AddOrUpdateNoteActivity.java"}
    25:33:void <init>(kotlin.jvm.functions.Function1,kotlin.reflect.KClass) -> <init>
    36:42:void _initHiltInternal() -> _initHiltInternal
    55:62:dagger.hilt.android.internal.managers.ActivityComponentManager componentManager() -> componentManager
    50:50:dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager() -> createComponentManager
    46:46:java.lang.Object generatedComponent() -> generatedComponent
    74:74:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    66:70:void inject() -> inject
com.daily.mydailylife.ui.activity.add_note.Hilt_AddOrUpdateNoteActivity$1 -> com.daily.mydailylife.ui.activity.add_note.Hilt_AddOrUpdateNoteActivity$1:
# {"id":"sourceFile","fileName":"Hilt_AddOrUpdateNoteActivity.java"}
    36:36:void <init>(com.daily.mydailylife.ui.activity.add_note.Hilt_AddOrUpdateNoteActivity) -> <init>
    39:40:void onContextAvailable(android.content.Context) -> onContextAvailable
com.daily.mydailylife.ui.activity.loading.Hilt_LoadingActivity -> com.daily.mydailylife.ui.activity.loading.Hilt_LoadingActivity:
# {"id":"sourceFile","fileName":"Hilt_LoadingActivity.java"}
    25:33:void <init>(kotlin.jvm.functions.Function1,kotlin.reflect.KClass) -> <init>
    36:42:void _initHiltInternal() -> _initHiltInternal
    55:62:dagger.hilt.android.internal.managers.ActivityComponentManager componentManager() -> componentManager
    50:50:dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager() -> createComponentManager
    46:46:java.lang.Object generatedComponent() -> generatedComponent
    74:74:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    66:70:void inject() -> inject
com.daily.mydailylife.ui.activity.loading.Hilt_LoadingActivity$1 -> com.daily.mydailylife.ui.activity.loading.Hilt_LoadingActivity$1:
# {"id":"sourceFile","fileName":"Hilt_LoadingActivity.java"}
    36:36:void <init>(com.daily.mydailylife.ui.activity.loading.Hilt_LoadingActivity) -> <init>
    39:40:void onContextAvailable(android.content.Context) -> onContextAvailable
com.daily.mydailylife.ui.activity.loading.LoadingActivity -> com.daily.mydailylife.ui.activity.loading.LoadingActivity:
# {"id":"sourceFile","fileName":"LoadingActivity.kt"}
    15:16:void <init>() -> <init>
    21:28:void onCreate(android.os.Bundle) -> onCreate
com.daily.mydailylife.ui.activity.loading.LoadingActivity$1 -> com.daily.mydailylife.ui.activity.loading.LoadingActivity$1:
# {"id":"sourceFile","fileName":"LoadingActivity.kt"}
    16:16:com.daily.mydailylife.databinding.ActivityLoadingBinding invoke(android.view.LayoutInflater) -> invoke
    16:16:java.lang.Object invoke(java.lang.Object) -> invoke
com.daily.mydailylife.ui.activity.loading.LoadingActivity$onCreate$1 -> com.daily.mydailylife.ui.activity.loading.LoadingActivity$onCreate$1:
# {"id":"sourceFile","fileName":"LoadingActivity.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    23:27:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    27:27:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.daily.mydailylife.ui.activity.loading.LoadingActivity_GeneratedInjector -> com.daily.mydailylife.ui.activity.loading.LoadingActivity_GeneratedInjector:
# {"id":"sourceFile","fileName":"LoadingActivity_GeneratedInjector.java"}
com.daily.mydailylife.ui.activity.main.Hilt_MainActivity -> com.daily.mydailylife.ui.activity.main.Hilt_MainActivity:
# {"id":"sourceFile","fileName":"Hilt_MainActivity.java"}
    25:33:void <init>(kotlin.jvm.functions.Function1,kotlin.reflect.KClass) -> <init>
    36:42:void _initHiltInternal() -> _initHiltInternal
    55:62:dagger.hilt.android.internal.managers.ActivityComponentManager componentManager() -> componentManager
    50:50:dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager() -> createComponentManager
    46:46:java.lang.Object generatedComponent() -> generatedComponent
    74:74:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    66:70:void inject() -> inject
com.daily.mydailylife.ui.activity.main.Hilt_MainActivity$1 -> com.daily.mydailylife.ui.activity.main.Hilt_MainActivity$1:
# {"id":"sourceFile","fileName":"Hilt_MainActivity.java"}
    36:36:void <init>(com.daily.mydailylife.ui.activity.main.Hilt_MainActivity) -> <init>
    39:40:void onContextAvailable(android.content.Context) -> onContextAvailable
com.daily.mydailylife.ui.activity.main.MainActivity -> com.daily.mydailylife.ui.activity.main.MainActivity:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    0:0:void $r8$lambda$BiZ8Ea5JZBpjkC69nRWkrNfwmf8(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List) -> $r8$lambda$BiZ8Ea5JZBpjkC69nRWkrNfwmf8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$FvxR9OpRZ2UL0ccYxYuSrzgQdXs(com.daily.mydailylife.ui.activity.main.MainActivity,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> $r8$lambda$FvxR9OpRZ2UL0ccYxYuSrzgQdXs
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$OwXqBCk0D0CEBbooDS5p8P73VDA(com.daily.mydailylife.data.model.NoteModel,com.daily.mydailylife.ui.activity.main.MainActivity,android.app.Dialog,android.view.View) -> $r8$lambda$OwXqBCk0D0CEBbooDS5p8P73VDA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$TTyhcI01YVbbubk2WVY6vTHeUEs(com.daily.mydailylife.ui.activity.main.MainActivity,androidx.activity.result.ActivityResult) -> $r8$lambda$TTyhcI01YVbbubk2WVY6vTHeUEs
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$TYf4TD-BDCEjJy0TtbzHnPDFK04(com.daily.mydailylife.ui.activity.main.MainActivity,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> $r8$lambda$TYf4TD-BDCEjJy0TtbzHnPDFK04
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$TmUfGf5OIz7Sb2y7QusuliAVI3Y(com.daily.mydailylife.ui.activity.main.MainActivity,com.daily.mydailylife.data.model.NoteModel) -> $r8$lambda$TmUfGf5OIz7Sb2y7QusuliAVI3Y
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$VBDUWTpeihOcmmmoxFm1xEkrEWM(android.app.Dialog,android.view.View) -> $r8$lambda$VBDUWTpeihOcmmmoxFm1xEkrEWM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$mPx5IzeAosqDasQqgZAcf3s2Byc(com.daily.mydailylife.ui.activity.main.MainActivity,android.view.View) -> $r8$lambda$mPx5IzeAosqDasQqgZAcf3s2Byc
      # {"id":"com.android.tools.r8.synthesized"}
    41:160:void <init>() -> <init>
    40:40:void access$setReadyToExit$p(com.daily.mydailylife.ui.activity.main.MainActivity,boolean) -> access$hideDeleteButton
    40:40:void access$hideDeleteButton(com.daily.mydailylife.ui.activity.main.MainActivity):40 -> access$hideDeleteButton
    40:40:void access$setReadyToExit$p(com.daily.mydailylife.ui.activity.main.MainActivity,boolean) -> access$setReadyToExit$p
    161:162:void addNoteResultLauncher$lambda-12(com.daily.mydailylife.ui.activity.main.MainActivity,androidx.activity.result.ActivityResult) -> addNoteResultLauncher$lambda-12
    115:116:void hideDeleteButton() -> hideDeleteButton
    1295:1295:void kotlin.sequences.SequencesKt___SequencesKt.forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> hideDeleteButton
    1295:1295:void hideDeleteButton():116 -> hideDeleteButton
    117:119:void hideDeleteButton() -> hideDeleteButton
    1296:1296:void kotlin.sequences.SequencesKt___SequencesKt.forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> hideDeleteButton
    1296:1296:void hideDeleteButton():116 -> hideDeleteButton
    120:122:void hideDeleteButton() -> hideDeleteButton
    76:112:void initAdapter() -> initAdapter
    79:81:void initAdapter$lambda-2(com.daily.mydailylife.ui.activity.main.MainActivity,com.daily.mydailylife.data.model.NoteModel) -> initAdapter$lambda-2
    84:92:void initAdapter$lambda-4(com.daily.mydailylife.ui.activity.main.MainActivity,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> initAdapter$lambda-4
    96:103:boolean initAdapter$lambda-5(com.daily.mydailylife.ui.activity.main.MainActivity,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> initAdapter$lambda-5
    125:136:void initOnClicks() -> initOnClicks
    127:134:void initOnClicks$lambda-8$lambda-7(com.daily.mydailylife.ui.activity.main.MainActivity,android.view.View) -> initOnClicks$lambda-8$lambda-7
    64:73:void initResponse() -> initResponse
    65:67:void initResponse$lambda-1(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List) -> initResponse$lambda-1
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> initResponse$lambda-1
    1549:1549:void initResponse$lambda-1(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List):67 -> initResponse$lambda-1
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> initResponse$lambda-1
    1620:1621:void initResponse$lambda-1(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List):67 -> initResponse$lambda-1
    68:71:void initResponse$lambda-1(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List) -> initResponse$lambda-1
    1622:1622:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> initResponse$lambda-1
    1622:1622:void initResponse$lambda-1(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List):67 -> initResponse$lambda-1
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> initResponse$lambda-1
    1549:1549:void initResponse$lambda-1(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List):67 -> initResponse$lambda-1
    72:72:void initResponse$lambda-1(com.daily.mydailylife.ui.activity.main.MainActivity,java.util.List) -> initResponse$lambda-1
    166:178:void onBackPressed() -> onBackPressed
    52:56:void onCreate(android.os.Bundle) -> onCreate
    59:61:void onResume() -> onResume
    139:148:void showConfirmDelete(com.daily.mydailylife.data.model.NoteModel) -> showConfirmDelete
    156:156:void showConfirmDelete$lambda-11(android.app.Dialog,android.view.View) -> showConfirmDelete
    156:156:void showConfirmDelete(com.daily.mydailylife.data.model.NoteModel):156 -> showConfirmDelete
    157:158:void showConfirmDelete(com.daily.mydailylife.data.model.NoteModel) -> showConfirmDelete
    149:155:void showConfirmDelete$lambda-10(com.daily.mydailylife.data.model.NoteModel,com.daily.mydailylife.ui.activity.main.MainActivity,android.app.Dialog,android.view.View) -> showConfirmDelete$lambda-10
    156:156:void showConfirmDelete$lambda-11(android.app.Dialog,android.view.View) -> showConfirmDelete$lambda-11
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda0 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.main.MainActivity com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$0.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$0.<init>(com.daily.mydailylife.ui.activity.main.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$0.onClickDelete(com.daily.mydailylife.data.model.NoteModel) -> onClickDelete
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda1 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.main.MainActivity com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$1.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$1.<init>(com.daily.mydailylife.ui.activity.main.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$1.onClick(com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda2 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.main.MainActivity com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$2.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$2.<init>(com.daily.mydailylife.ui.activity.main.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$610f26f112fb689401dee7a72260c14409a21b3e1287c98c073d255f5940e926$2.onLongClick(com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> onLongClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda3 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.main.MainActivity com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$83c2405e02fca6c8f5e6f8eddabc5146aeb2aba67c8e8bce3b31b006df8dab47$0.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$83c2405e02fca6c8f5e6f8eddabc5146aeb2aba67c8e8bce3b31b006df8dab47$0.<init>(com.daily.mydailylife.ui.activity.main.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$83c2405e02fca6c8f5e6f8eddabc5146aeb2aba67c8e8bce3b31b006df8dab47$0.onActivityResult(java.lang.Object) -> onActivityResult
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda4 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.main.MainActivity com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$97f35e5ed87379c6bfa2e1a403181705e6bd00f7cdb4b3d169dad1c8946cad5f$0.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$97f35e5ed87379c6bfa2e1a403181705e6bd00f7cdb4b3d169dad1c8946cad5f$0.<init>(com.daily.mydailylife.ui.activity.main.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$97f35e5ed87379c6bfa2e1a403181705e6bd00f7cdb4b3d169dad1c8946cad5f$0.onChanged(java.lang.Object) -> onChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda5 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.main.MainActivity com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$ffece293523138f4fec63f57ecc5d9ff7518e60b5cd92b9f0c0790bc7b5fab44$0.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$ffece293523138f4fec63f57ecc5d9ff7518e60b5cd92b9f0c0790bc7b5fab44$0.<init>(com.daily.mydailylife.ui.activity.main.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$1$ffece293523138f4fec63f57ecc5d9ff7518e60b5cd92b9f0c0790bc7b5fab44$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda6 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.data.model.NoteModel com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$0.f$0 -> f$0
    com.daily.mydailylife.ui.activity.main.MainActivity com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$0.f$1 -> f$1
    android.app.Dialog com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$0.f$2 -> f$2
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$0.<init>(com.daily.mydailylife.data.model.NoteModel,com.daily.mydailylife.ui.activity.main.MainActivity,android.app.Dialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda7 -> com.daily.mydailylife.ui.activity.main.MainActivity$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.Dialog com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$1.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$1.<init>(android.app.Dialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.main.MainActivity$$InternalSyntheticLambda$3$1574447db7a088dca919daf1853c1be66393eabb21b38e39ac1f8b86f1970097$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.main.MainActivity$1 -> com.daily.mydailylife.ui.activity.main.MainActivity$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    42:42:com.daily.mydailylife.databinding.ActivityMainBinding invoke(android.view.LayoutInflater) -> invoke
    42:42:java.lang.Object invoke(java.lang.Object) -> invoke
com.daily.mydailylife.ui.activity.main.MainActivity$initAdapter$4 -> com.daily.mydailylife.ui.activity.main.MainActivity$initAdapter$4:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    107:107:void <init>(com.daily.mydailylife.ui.activity.main.MainActivity) -> <init>
    109:110:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
com.daily.mydailylife.ui.activity.main.MainActivity$onBackPressed$1 -> com.daily.mydailylife.ui.activity.main.MainActivity$onBackPressed$1:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    174:177:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    177:177:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.daily.mydailylife.ui.activity.main.MainActivity_GeneratedInjector -> com.daily.mydailylife.ui.activity.main.MainActivity_GeneratedInjector:
# {"id":"sourceFile","fileName":"MainActivity_GeneratedInjector.java"}
com.daily.mydailylife.ui.activity.main.MainViewModel -> com.daily.mydailylife.ui.activity.main.MainViewModel:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    14:19:void <init>(com.daily.mydailylife.data.repository.NoteRepository) -> <init>
    13:13:com.daily.mydailylife.data.repository.NoteRepository access$getRepository$p(com.daily.mydailylife.ui.activity.main.MainViewModel) -> access$getRepository$p
    13:13:androidx.lifecycle.MutableLiveData access$get_noteListResponse$p(com.daily.mydailylife.ui.activity.main.MainViewModel) -> access$get_noteListResponse$p
    34:37:void deleteNote(com.daily.mydailylife.data.model.NoteModel) -> deleteNote
    40:43:void getAllNotes() -> getAllNotes
    19:19:androidx.lifecycle.LiveData getNoteListResponse() -> getNoteListResponse
    22:25:void insertNote(com.daily.mydailylife.data.model.NoteModel) -> insertNote
    28:31:void updateNote(com.daily.mydailylife.data.model.NoteModel) -> updateNote
com.daily.mydailylife.ui.activity.main.MainViewModel$deleteNote$1 -> com.daily.mydailylife.ui.activity.main.MainViewModel$deleteNote$1:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    34:36:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    36:36:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.daily.mydailylife.ui.activity.main.MainViewModel$getAllNotes$1 -> com.daily.mydailylife.ui.activity.main.MainViewModel$getAllNotes$1:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    40:42:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    42:42:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.daily.mydailylife.ui.activity.main.MainViewModel$insertNote$1 -> com.daily.mydailylife.ui.activity.main.MainViewModel$insertNote$1:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    22:24:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    24:24:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.daily.mydailylife.ui.activity.main.MainViewModel$updateNote$1 -> com.daily.mydailylife.ui.activity.main.MainViewModel$updateNote$1:
# {"id":"sourceFile","fileName":"MainViewModel.kt"}
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    28:30:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    30:30:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.daily.mydailylife.ui.activity.main.MainViewModel_HiltModules$KeyModule -> com.daily.mydailylife.ui.activity.main.MainViewModel_HiltModules$KeyModule:
# {"id":"sourceFile","fileName":"MainViewModel_HiltModules.java"}
    47:47:java.lang.String provide() -> provide
com.daily.mydailylife.ui.activity.main.MainViewModel_HiltModules_KeyModule_ProvideFactory -> com.daily.mydailylife.ui.activity.main.MainViewModel_HiltModules_KeyModule_ProvideFactory:
# {"id":"sourceFile","fileName":"MainViewModel_HiltModules_KeyModule_ProvideFactory.java"}
    28:28:java.lang.String provide() -> provide
com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity -> com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity:
# {"id":"sourceFile","fileName":"ViewNoteActivity.kt"}
    0:0:void $r8$lambda$EPJyJCiK89bX4dBF-0MLv6L_Y2g(com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity,android.view.View) -> $r8$lambda$EPJyJCiK89bX4dBF-0MLv6L_Y2g
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$cEfJOiOwievZaJlRdQvKQfMeZl8(com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity,android.view.View) -> $r8$lambda$cEfJOiOwievZaJlRdQvKQfMeZl8
      # {"id":"com.android.tools.r8.synthesized"}
    15:16:void <init>() -> <init>
    45:54:void initOnClicks() -> initOnClicks
    46:46:void initOnClicks$lambda-5$lambda-2(com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity,android.view.View) -> initOnClicks$lambda-5$lambda-2
    48:52:void initOnClicks$lambda-5$lambda-4(com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity,android.view.View) -> initOnClicks$lambda-5$lambda-4
    30:42:void initViews() -> initViews
    22:27:void onCreate(android.os.Bundle) -> onCreate
com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$ExternalSyntheticLambda0 -> com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$InternalSyntheticLambda$1$7e436647a5b5725103dca93110f6a40ac322b55976255fc0ceba8e2a025e6e52$0.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$InternalSyntheticLambda$1$7e436647a5b5725103dca93110f6a40ac322b55976255fc0ceba8e2a025e6e52$0.<init>(com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$InternalSyntheticLambda$1$7e436647a5b5725103dca93110f6a40ac322b55976255fc0ceba8e2a025e6e52$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$ExternalSyntheticLambda1 -> com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$InternalSyntheticLambda$1$7e436647a5b5725103dca93110f6a40ac322b55976255fc0ceba8e2a025e6e52$1.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$InternalSyntheticLambda$1$7e436647a5b5725103dca93110f6a40ac322b55976255fc0ceba8e2a025e6e52$1.<init>(com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$$InternalSyntheticLambda$1$7e436647a5b5725103dca93110f6a40ac322b55976255fc0ceba8e2a025e6e52$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$1 -> com.daily.mydailylife.ui.activity.view_note.ViewNoteActivity$1:
# {"id":"sourceFile","fileName":"ViewNoteActivity.kt"}
    16:16:com.daily.mydailylife.databinding.ActivityViewNoteBinding invoke(android.view.LayoutInflater) -> invoke
    16:16:java.lang.Object invoke(java.lang.Object) -> invoke
com.daily.mydailylife.ui.adapter.MoodAdapter -> com.daily.mydailylife.ui.adapter.MoodAdapter:
# {"id":"sourceFile","fileName":"MoodAdapter.kt"}
    10:10:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.content.Context,android.view.ViewGroup,int) -> <init>
    10:10:void <init>():10 -> <init>
    10:10:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.content.Context,android.view.ViewGroup,int) -> onBindViewHolder
    10:10:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.lang.Object):10 -> onBindViewHolder
    12:26:void onBindViewHolder(com.chad.library.adapter.base.viewholder.QuickViewHolder,int,java.lang.Integer) -> onBindViewHolder
    10:10:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.content.Context,android.view.ViewGroup,int) -> onCreateViewHolder
    23:23:com.chad.library.adapter.base.viewholder.QuickViewHolder onCreateViewHolder(android.content.Context,android.view.ViewGroup,int) -> onCreateViewHolder
com.daily.mydailylife.ui.adapter.NoteAdapter -> com.daily.mydailylife.ui.adapter.NoteAdapter:
# {"id":"sourceFile","fileName":"NoteAdapter.kt"}
    0:0:void $r8$lambda$dPAPdJD7m66l8oEZcr0ap0fXIgU(com.daily.mydailylife.ui.adapter.NoteAdapter,com.daily.mydailylife.data.model.NoteModel,android.view.View) -> $r8$lambda$dPAPdJD7m66l8oEZcr0ap0fXIgU
      # {"id":"com.android.tools.r8.synthesized"}
    17:17:void <init>() -> <init>
    17:17:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.lang.Object) -> onBindViewHolder
    25:49:void onBindViewHolder(com.chad.library.adapter.base.viewholder.QuickViewHolder,int,com.daily.mydailylife.data.model.NoteModel) -> onBindViewHolder
    47:48:void onBindViewHolder$lambda-1(com.daily.mydailylife.ui.adapter.NoteAdapter,com.daily.mydailylife.data.model.NoteModel,android.view.View) -> onBindViewHolder$lambda-1
    17:17:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.content.Context,android.view.ViewGroup,int) -> onCreateViewHolder
    56:56:com.chad.library.adapter.base.viewholder.QuickViewHolder onCreateViewHolder(android.content.Context,android.view.ViewGroup,int) -> onCreateViewHolder
    22:23:void setAdapterListener(com.daily.mydailylife.ui.adapter.NoteAdapterListener) -> setAdapterListener
com.daily.mydailylife.ui.adapter.NoteAdapter$$ExternalSyntheticLambda0 -> com.daily.mydailylife.ui.adapter.NoteAdapter$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.adapter.NoteAdapter com.daily.mydailylife.ui.adapter.NoteAdapter$$InternalSyntheticLambda$2$5c1f2c224ece7c3a238b881154c01d1c0e21c71ee5a00636742479741e8f542c$0.f$0 -> f$0
    com.daily.mydailylife.data.model.NoteModel com.daily.mydailylife.ui.adapter.NoteAdapter$$InternalSyntheticLambda$2$5c1f2c224ece7c3a238b881154c01d1c0e21c71ee5a00636742479741e8f542c$0.f$1 -> f$1
    0:0:void com.daily.mydailylife.ui.adapter.NoteAdapter$$InternalSyntheticLambda$2$5c1f2c224ece7c3a238b881154c01d1c0e21c71ee5a00636742479741e8f542c$0.<init>(com.daily.mydailylife.ui.adapter.NoteAdapter,com.daily.mydailylife.data.model.NoteModel) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.adapter.NoteAdapter$$InternalSyntheticLambda$2$5c1f2c224ece7c3a238b881154c01d1c0e21c71ee5a00636742479741e8f542c$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.adapter.NoteAdapterListener -> com.daily.mydailylife.ui.adapter.NoteAdapterListener:
# {"id":"sourceFile","fileName":"NoteAdapter.kt"}
com.daily.mydailylife.ui.dialog.DialogListener -> com.daily.mydailylife.ui.dialog.DialogListener:
# {"id":"sourceFile","fileName":"MoodsDialog.kt"}
com.daily.mydailylife.ui.dialog.MoodsDialog -> com.daily.mydailylife.ui.dialog.MoodsDialog:
# {"id":"sourceFile","fileName":"MoodsDialog.kt"}
    0:0:void $r8$lambda$MRn3BUeb2D00TgtBVsx2lthbO38(com.daily.mydailylife.ui.dialog.MoodsDialog,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> $r8$lambda$MRn3BUeb2D00TgtBVsx2lthbO38
      # {"id":"com.android.tools.r8.synthesized"}
    16:18:void <init>(android.content.Context) -> <init>
    35:44:void initAdapter() -> initAdapter
    42:43:void initAdapter$lambda-0(com.daily.mydailylife.ui.dialog.MoodsDialog,com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> initAdapter$lambda-0
    22:32:void onCreate(android.os.Bundle) -> onCreate
    47:48:void setDialogListener(com.daily.mydailylife.ui.dialog.DialogListener) -> setDialogListener
com.daily.mydailylife.ui.dialog.MoodsDialog$$ExternalSyntheticLambda0 -> com.daily.mydailylife.ui.dialog.MoodsDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.daily.mydailylife.ui.dialog.MoodsDialog com.daily.mydailylife.ui.dialog.MoodsDialog$$InternalSyntheticLambda$3$ba748e5bc013afcb086cf1b5b8f897ef16ee70d2e11f60954393bef3afe6d44e$0.f$0 -> f$0
    0:0:void com.daily.mydailylife.ui.dialog.MoodsDialog$$InternalSyntheticLambda$3$ba748e5bc013afcb086cf1b5b8f897ef16ee70d2e11f60954393bef3afe6d44e$0.<init>(com.daily.mydailylife.ui.dialog.MoodsDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.daily.mydailylife.ui.dialog.MoodsDialog$$InternalSyntheticLambda$3$ba748e5bc013afcb086cf1b5b8f897ef16ee70d2e11f60954393bef3afe6d44e$0.onClick(com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.daily.mydailylife.ui.extension.ExtensionsKt -> com.daily.mydailylife.ui.extension.ExtensionsKt:
# {"id":"sourceFile","fileName":"Extensions.kt"}
    36:38:java.lang.String getDateToday() -> getDateToday
    23:31:com.daily.mydailylife.data.model.FormattedDate getFormattedDateToday() -> getFormattedDateToday
    42:48:com.daily.mydailylife.data.model.FormattedDate parseDate(java.lang.String) -> parseDate
    13:20:void transparentStatusBar(android.app.Activity) -> transparentStatusBar
com.daily.mydailylife.ui.extension.ToastExtensionKt -> com.daily.mydailylife.ui.extension.ToastExtensionKt:
# {"id":"sourceFile","fileName":"ToastExtension.kt"}
    7:8:void toastShort(android.content.Context,java.lang.String) -> toastShort
com.daily.mydailylife.ui.util.MoodUtilKt -> com.daily.mydailylife.ui.util.MoodUtilKt:
# {"id":"sourceFile","fileName":"MoodUtil.kt"}
    47:47:int getMoodByIndex(int) -> getMoodByIndex
    6:42:java.util.List getMoodImages() -> getMoodImages
com.daily.mydailylife.ui.util.NoneViewModel -> com.daily.mydailylife.ui.util.NoneViewModel:
# {"id":"sourceFile","fileName":"NoneViewModel.kt"}
    5:5:void <init>() -> <init>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
# {"id":"sourceFile","fileName":"AnimationUtils.java"}
    36:43:void <clinit>() -> <clinit>
    47:47:float lerp(float,float,float) -> lerp
    52:52:int lerp(int,int,float) -> lerp
    64:71:float lerp(float,float,float,float,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
# {"id":"sourceFile","fileName":"AnimatorSetCompat.java"}
    38:48:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
# {"id":"sourceFile","fileName":"ChildrenAlphaProperty.java"}
    38:38:void <clinit>() -> <clinit>
    42:43:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:66:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
# {"id":"sourceFile","fileName":"ImageMatrixProperty.java"}
    28:32:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:37:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
# {"id":"sourceFile","fileName":"MatrixEvaluator.java"}
    26:29:void <init>() -> <init>
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
# {"id":"sourceFile","fileName":"MotionSpec.java"}
    66:71:void <init>() -> <init>
    215:222:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    175:181:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:201:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:211:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    226:235:boolean equals(java.lang.Object) -> equals
    84:87:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:124:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:93:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
# {"id":"sourceFile","fileName":"MotionTiming.java"}
    30:42:void <init>(long,long) -> <init>
    30:48:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:58:void apply(android.animation.Animator) -> apply
    83:88:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    116:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:110:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:147:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
# {"id":"sourceFile","fileName":"Positioning.java"}
    34:38:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    0:0:boolean $r8$lambda$QeS_UGSkShOdio730SqysJJGrYc(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,int,android.view.KeyEvent) -> $r8$lambda$QeS_UGSkShOdio730SqysJJGrYc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$n_zC0BmoMwb1UwxgpoyEBoSiwM4(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.KeyEvent) -> $r8$lambda$n_zC0BmoMwb1UwxgpoyEBoSiwM4
      # {"id":"com.android.tools.r8.synthesized"}
    1477:1477:void <init>() -> <init>
    1480:1481:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1446:1446:boolean access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1446:1446:int access$100(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$100
    1951:1994:boolean addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> addAccessibilityScrollActions
    2002:2013:void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean) -> addActionToExpand
    1606:1618:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1625:1651:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1729:1729:int calculateSnapOffset(int,int,int) -> calculateSnapOffset
    1446:1446:boolean canDragView(android.view.View) -> canDragView
    2017:2031:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1514:1515:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1733:1733:boolean checkFlag(int,int) -> checkFlag
    1934:1944:boolean childrenHaveScrollFlags(com.google.android.material.appbar.AppBarLayout) -> childrenHaveScrollFlags
    1860:1878:void controlExpansionOnKeyPress(android.view.KeyEvent,android.view.View,com.google.android.material.appbar.AppBarLayout) -> controlExpansionOnKeyPress
    2253:2261:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    2241:2248:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1654:1670:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1920:1930:android.view.View getChildWithScrollingBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout) -> getChildWithScrollingBehavior
    1446:1446:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    2046:2046:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1446:1446:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    2051:2051:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    2266:2266:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    2128:2172:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1837:1838:boolean lambda$onLayoutChild$0(android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.KeyEvent) -> lambda$onLayoutChild$0
    1848:1849:boolean lambda$onLayoutChild$1(android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,int,android.view.KeyEvent) -> lambda$onLayoutChild$1
    1446:1446:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    2038:2042:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1446:1446:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1768:1853:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1446:1446:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1744:1761:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1446:1446:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1527:1546:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1446:1446:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1559:1571:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1446:1446:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2279:2286:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1446:1446:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2271:2273:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1446:1446:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1493:1508:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1446:1446:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1580:1590:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    2313:2316:void restoreScrollState(com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState,boolean) -> restoreScrollState
    2290:2309:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState saveScrollState(android.os.Parcelable,com.google.android.material.appbar.AppBarLayout) -> saveScrollState
    1446:1446:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    2061:2119:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    2224:2235:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1674:1726:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1882:1916:void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> updateAccessibilityActions
    2181:2219:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticApiModelOutline$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$1.m(android.view.View,android.view.View$OnUnhandledKeyEventListener) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout$BaseBehavior com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$0 -> f$0
    android.view.View com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$1 -> f$1
    0:0:void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.<init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout$BaseBehavior com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$0 -> f$0
    android.view.View com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$1 -> f$1
    0:0:void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.<init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.onKey(android.view.View,int,android.view.KeyEvent) -> onKey
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1637:1637:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1640:1642:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$2:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1903:1903:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> <init>
    1907:1910:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.appbar.AppBarLayout$BaseBehavior$3 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$3:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1971:1971:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> <init>
    1974:1982:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$4 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$4:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2006:2006:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean) -> <init>
    2009:2010:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2349:2349:void <clinit>() -> <clinit>
    2327:2333:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2336:2337:void <init>(android.os.Parcelable) -> <init>
    2341:2347:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2350:2350:void <init>() -> <init>
    2350:2350:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2350:2350:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2354:2354:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2360:2360:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2350:2350:java.lang.Object[] newArray(int) -> newArray
    2366:2366:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1433:1434:void <init>() -> <init>
    1437:1438:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1427:1427:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1427:1427:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1427:1427:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1427:1427:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1427:1427:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1427:1427:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1427:1427:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1427:1427:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1427:1427:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1427:1427:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1427:1427:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1427:1427:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$ChildScrollEffect -> com.google.android.material.appbar.AppBarLayout$ChildScrollEffect:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2378:2378:void <init>() -> <init>
    2381:2388:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2376:2376:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    2489:2495:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    2457:2474:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2500:2503:int getScrollRange(android.view.View) -> getScrollRange
    2393:2393:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2440:2453:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    2399:2401:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2407:2412:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2376:2376:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2376:2376:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2420:2436:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2508:2514:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
# {"id":"sourceFile","fileName":"HeaderBehavior.java"}
    45:50:void <init>() -> <init>
    50:50:void <init>() -> <init>
    45:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    254:257:void ensureVelocityTracker() -> ensureVelocityTracker
    202:227:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    59:105:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    111:154:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    188:191:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    158:158:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
# {"id":"sourceFile","fileName":"HeaderBehavior.java"}
    263:266:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    270:279:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
# {"id":"sourceFile","fileName":"HeaderScrollingViewBehavior.java"}
    41:47:void <init>() -> <init>
    47:47:void <init>() -> <init>
    41:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    167:169:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    205:205:int getOverlayTop() -> getOverlayTop
    180:180:int getScrollRange(android.view.View) -> getScrollRange
    187:187:int getVerticalLayoutGap() -> getVerticalLayoutGap
    114:156:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:106:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    173:173:int resolveGravity(int) -> resolveGravity
    197:198:void setOverlayTop(int) -> setOverlayTop
    159:159:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
# {"id":"sourceFile","fileName":"MaterialToolbar.java"}
    74:76:void <clinit>() -> <clinit>
    99:100:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    103:130:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    178:195:android.util.Pair calculateTitleBoundLimits(android.widget.TextView,android.widget.TextView) -> calculateTitleBoundLimits
    242:242:android.widget.ImageView$ScaleType getLogoScaleType() -> getLogoScaleType
    328:328:java.lang.Integer getNavigationIconTint() -> getNavigationIconTint
    135:143:void inflateMenu(int) -> inflateMenu
    380:391:void initBackground(android.content.Context) -> initBackground
    200:220:void layoutTitleCenteredHorizontally(android.view.View,android.util.Pair) -> layoutTitleCenteredHorizontally
    154:174:void maybeCenterTitleViews() -> maybeCenterTitleViews
    395:400:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    272:275:void onAttachedToWindow() -> onAttachedToWindow
    147:151:void onLayout(boolean,int,int,int,int) -> onLayout
    280:283:void setElevation(float) -> setElevation
    264:268:void setLogoAdjustViewBounds(boolean) -> setLogoAdjustViewBounds
    247:251:void setLogoScaleType(android.widget.ImageView$ScaleType) -> setLogoScaleType
    287:288:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    296:302:void setNavigationIconTint(int) -> setNavigationIconTint
    363:367:void setSubtitleCentered(boolean) -> setSubtitleCentered
    339:343:void setTitleCentered(boolean) -> setTitleCentered
    223:233:void updateLogoImageView() -> updateLogoImageView
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
# {"id":"sourceFile","fileName":"ViewOffsetBehavior.java"}
    30:33:void <init>() -> <init>
    33:33:void <init>() -> <init>
    30:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    66:67:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:60:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    70:75:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
# {"id":"sourceFile","fileName":"ViewOffsetHelper.java"}
    37:42:void <init>(android.view.View) -> <init>
    51:53:void applyOffsets() -> applyOffsets
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    46:48:void onViewLayout() -> onViewLayout
    77:82:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:67:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
# {"id":"sourceFile","fileName":"HideBottomViewOnScrollBehavior.java"}
    71:73:void <clinit>() -> <clinit>
    65:102:void <init>() -> <init>
    102:102:void <init>() -> <init>
    65:106:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:47:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    259:272:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    215:215:boolean isScrolledDown() -> isScrolledDown
    178:178:boolean isScrolledUp() -> isScrolledUp
    111:130:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    169:174:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    155:155:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    223:224:void slideDown(android.view.View) -> slideDown
    233:248:void slideDown(android.view.View,boolean) -> slideDown
    186:187:void slideUp(android.view.View) -> slideUp
    196:211:void slideUp(android.view.View,boolean) -> slideUp
    251:255:void updateCurrentState(android.view.View,int) -> updateCurrentState
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
# {"id":"sourceFile","fileName":"HideBottomViewOnScrollBehavior.java"}
    266:266:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    269:270:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$OnScrollStateChangedListener -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$OnScrollStateChangedListener:
# {"id":"sourceFile","fileName":"HideBottomViewOnScrollBehavior.java"}
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    43:237:void <init>() -> <init>
    43:43:boolean access$002(com.google.android.material.behavior.SwipeDismissBehavior,boolean) -> access$002
    234:234:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    451:451:float clamp(float,float,float) -> clamp
    455:455:int clamp(int,int,int) -> clamp
    391:397:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    470:470:float fraction(float,float,float) -> fraction
    191:211:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    179:185:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    216:224:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    161:162:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    152:153:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    134:135:void setSwipeDirection(int) -> setSwipeDirection
    421:448:void updateAccessibilityActions(android.view.View) -> updateAccessibilityActions
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    238:242:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    336:362:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    367:367:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    331:331:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    253:267:void onViewCaptured(android.view.View,int) -> onViewCaptured
    271:274:void onViewDragStateChanged(int) -> onViewDragStateChanged
    372:387:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    279:289:void onViewReleased(android.view.View,float,float) -> onViewReleased
    289:301:void onViewReleased(android.view.View,float,float) -> onViewReleased
    304:326:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    247:248:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$2 -> com.google.android.material.behavior.SwipeDismissBehavior$2:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    427:427:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    430:444:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    403:406:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    410:417:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    122:126:void <clinit>() -> <clinit>
    120:120:void access$1400(com.google.android.material.bottomappbar.BottomAppBar) -> access$1400
    120:120:int access$2800(com.google.android.material.bottomappbar.BottomAppBar) -> access$2800
    120:120:int access$2900(com.google.android.material.bottomappbar.BottomAppBar) -> access$2900
    120:120:int access$3000(com.google.android.material.bottomappbar.BottomAppBar) -> access$3000
    120:120:int access$3100(com.google.android.material.bottomappbar.BottomAppBar) -> access$3100
    120:120:android.view.View access$3200(com.google.android.material.bottomappbar.BottomAppBar) -> access$3200
    120:120:void access$3300(com.google.android.material.bottomappbar.BottomAppBar,android.view.View) -> access$3300
    120:120:boolean access$3400(com.google.android.material.bottomappbar.BottomAppBar) -> access$3400
    120:120:void access$3500(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$3500
    120:120:int access$400(com.google.android.material.bottomappbar.BottomAppBar) -> access$400
    504:513:void updateFabAnchorGravity(com.google.android.material.bottomappbar.BottomAppBar,android.view.View) -> updateFabAnchorGravity
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1322:1398:void <init>() -> <init>
    1322:1403:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1314:1314:java.lang.ref.WeakReference access$2500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2500
    1314:1314:android.graphics.Rect access$2600(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2600
    1314:1314:int access$2700(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2700
    1314:1314:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1408:1451:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    1314:1314:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1463:1464:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1323:1323:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    1335:1393:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    273:273:void <clinit>() -> <clinit>
    204:1699:void <init>() -> <init>
    204:1699:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:87:void access$100(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int,boolean) -> access$100
    87:87:boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1000
    87:87:int access$1102(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$1102
    87:87:void access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> access$1200
    87:87:boolean access$1300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1300
    87:87:boolean access$1400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1400
    87:87:int access$1500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1500
    87:87:boolean access$1600(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1600
    87:87:int access$1900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1900
    87:87:com.google.android.material.shape.MaterialShapeDrawable access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    87:87:boolean access$2000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$2000
    87:87:int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$302
    87:87:boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    87:87:int access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    87:87:int access$502(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$502
    87:87:boolean access$600(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$600
    87:87:boolean access$700(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$700
    87:87:boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$800
    87:87:boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$900
    2260:2263:int addAccessibilityActionForState(android.view.View,int,int) -> addAccessibilityActionForState
    1441:1448:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1451:1452:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1428:1437:int calculatePeekHeight() -> calculatePeekHeight
    1455:1458:float calculateSlideOffsetWithTop(int) -> calculateSlideOffsetWithTop
    1932:1932:boolean canBeHiddenByDragging() -> canBeHiddenByDragging
    2238:2250:void clearAccessibilityAction(android.view.View,int) -> clearAccessibilityAction
    2267:2267:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    1533:1548:void createMaterialShapeDrawableIfNeeded(android.content.Context) -> createMaterialShapeDrawableIfNeeded
    1555:1567:void createShapeValueAnimator() -> createShapeValueAnimator
    1861:1868:void dispatchOnSlide(int) -> dispatchOnSlide
    1508:1523:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    502:515:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    514:515:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    1076:1078:int getExpandedOffset() -> getExpandedOffset
    1684:1696:int getTopOffsetForState(int) -> getTopOffsetForState
    1659:1663:float getYVelocity() -> getYVelocity
    1424:1424:boolean isExpandedAndShouldRemoveCorners() -> isExpandedAndShouldRemoveCorners
    1346:1346:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    1123:1123:boolean isHideable() -> isHideable
    1928:1928:boolean isHideableWhenDragging() -> isHideableWhenDragging
    1325:1326:boolean isLayouting(android.view.View) -> isLayouting
    1897:1897:boolean isNestedScrollingCheckEnabled() -> isNestedScrollingCheckEnabled
    452:457:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    461:465:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    599:656:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    523:593:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    475:497:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    856:861:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    712:758:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    846:846:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    436:448:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    430:430:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    698:700:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    766:832:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    662:687:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    2254:2256:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    1462:1467:void reset() -> reset
    1470:1487:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    1317:1322:void runAfterLayout(android.view.View,java.lang.Runnable) -> runAfterLayout
    1158:1159:void setDraggable(boolean) -> setDraggable
    1061:1066:void setExpandedOffset(int) -> setExpandedOffset
    882:897:void setFitToContents(boolean) -> setFitToContents
    1339:1340:void setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    1028:1037:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    1106:1114:void setHideable(boolean) -> setHideable
    932:933:void setMaxHeight(int) -> setMaxHeight
    909:910:void setMaxWidth(int) -> setMaxWidth
    955:956:void setPeekHeight(int) -> setPeekHeight
    969:985:void setPeekHeight(int,boolean) -> setPeekHeight
    1196:1197:void setSaveFlags(int) -> setSaveFlags
    1174:1175:void setSignificantVelocityThreshold(int) -> setSignificantVelocityThreshold
    1135:1136:void setSkipCollapsed(boolean) -> setSkipCollapsed
    1281:1314:void setState(int) -> setState
    1361:1392:void setStateInternal(int) -> setStateInternal
    1572:1656:void setWindowInsetsListener(android.view.View) -> setWindowInsetsListener
    1946:1946:boolean shouldExpandOnUpwardDrag(long,float) -> shouldExpandOnUpwardDrag
    1529:1529:boolean shouldHandleDraggingWithHelper() -> shouldHandleDraggingWithHelper
    1490:1502:boolean shouldHide(android.view.View,float) -> shouldHide
    1908:1908:boolean shouldSkipHalfExpandedStateWhenDragging() -> shouldSkipHalfExpandedStateWhenDragging
    1918:1918:boolean shouldSkipSmoothAnimation() -> shouldSkipSmoothAnimation
    1667:1681:void startSettling(android.view.View,int,boolean) -> startSettling
    2180:2187:void updateAccessibilityActions() -> updateAccessibilityActions
    2190:2235:void updateAccessibilityActions(android.view.View,int) -> updateAccessibilityActions
    1395:1420:void updateDrawableForTargetState(int,boolean) -> updateDrawableForTargetState
    2114:2166:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
    988:1001:void updatePeekHeight(boolean) -> updatePeekHeight
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1307:1307:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1310:1311:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1558:1558:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1561:1565:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1587:1587:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> <init>
    1592:1653:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1700:1700:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1847:1847:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1839:1842:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1852:1855:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1731:1734:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1726:1727:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1744:1835:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1738:1738:boolean releasedLow(android.view.View) -> releasedLow
    1706:1720:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$5 -> com.google.android.material.bottomsheet.BottomSheetBehavior$5:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    2267:2267:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    2270:2271:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    2058:2058:void <clinit>() -> <clinit>
    2016:2023:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2026:2032:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    2050:2056:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    2059:2059:void <init>() -> <init>
    2059:2059:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2059:2059:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2063:2063:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2069:2069:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2059:2059:java.lang.Object[] newArray(int) -> newArray
    2075:2075:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1973:1977:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1973:1973:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,com.google.android.material.bottomsheet.BottomSheetBehavior$1) -> <init>
    1973:1973:boolean access$1702(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker,boolean) -> access$1702
    1973:1973:int access$1800(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> access$1800
    1992:2000:void continueSettlingToState(int) -> continueSettlingToState
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1978:1978:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> <init>
    1981:1988:void run() -> run
com.google.android.material.bottomsheet.InsetsAnimationCallback -> com.google.android.material.bottomsheet.InsetsAnimationCallback:
# {"id":"sourceFile","fileName":"InsetsAnimationCallback.java"}
    34:39:void <init>(android.view.View) -> <init>
    81:82:void onEnd(androidx.core.view.WindowInsetsAnimationCompat) -> onEnd
    43:45:void onPrepare(androidx.core.view.WindowInsetsAnimationCompat) -> onPrepare
    67:76:androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List) -> onProgress
    52:59:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> onStart
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
    133:198:void <clinit>() -> <clinit>
    224:225:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    201:259:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    263:267:java.lang.String getA11yClassName() -> getA11yClassName
    542:557:android.text.Layout$Alignment getActualTextAlignment() -> getActualTextAlignment
    393:393:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    404:404:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1058:1058:int getCornerRadius() -> getCornerRadius
    520:529:android.text.Layout$Alignment getGravityTextAlignment() -> getGravityTextAlignment
    766:766:android.graphics.drawable.Drawable getIcon() -> getIcon
    1070:1070:int getIconGravity() -> getIconGravity
    691:691:int getIconPadding() -> getIconPadding
    721:721:int getIconSize() -> getIconSize
    805:805:android.content.res.ColorStateList getIconTint() -> getIconTint
    830:830:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    1105:1105:int getInsetBottom() -> getInsetBottom
    1125:1125:int getInsetTop() -> getInsetTop
    932:932:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1282:1285:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    974:974:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1017:1017:int getStrokeWidth() -> getStrokeWidth
    338:344:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    376:381:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    635:650:int getTextHeight() -> getTextHeight
    626:631:int getTextLayoutWidth() -> getTextLayoutWidth
    1241:1241:boolean isCheckable() -> isCheckable
    1197:1197:boolean isChecked() -> isChecked
    887:887:boolean isIconEnd() -> isIconEnd
    883:883:boolean isIconStart() -> isIconStart
    891:891:boolean isIconTop() -> isIconTop
    654:654:boolean isLayoutRTL() -> isLayoutRTL
    1308:1308:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    474:480:void onAttachedToWindow() -> onAttachedToWindow
    1130:1140:int[] onCreateDrawableState(int) -> onCreateDrawableState
    285:288:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    276:281:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    458:464:void onLayout(boolean,int,int,int,int) -> onLayout
    301:308:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    293:296:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    468:470:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    1207:1211:boolean performClick() -> performClick
    493:503:void refreshDrawableState() -> refreshDrawableState
    873:880:void resetIconDrawable() -> resetIconDrawable
    271:272:void setA11yClassName(java.lang.String) -> setA11yClassName
    420:421:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    409:416:void setBackgroundColor(int) -> setBackgroundColor
    434:454:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    425:430:void setBackgroundResource(int) -> setBackgroundResource
    387:388:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    398:399:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1251:1254:void setCheckable(boolean) -> setCheckable
    1173:1193:void setChecked(boolean) -> setChecked
    1029:1032:void setCornerRadius(int) -> setCornerRadius
    1043:1046:void setCornerRadiusResource(int) -> setCornerRadiusResource
    485:489:void setElevation(float) -> setElevation
    734:739:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1081:1085:void setIconGravity(int) -> setIconGravity
    676:680:void setIconPadding(int) -> setIconPadding
    750:755:void setIconResource(int) -> setIconResource
    702:710:void setIconSize(int) -> setIconSize
    778:782:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    816:820:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    793:794:void setIconTintResource(int) -> setIconTintResource
    1094:1095:void setInsetBottom(int) -> setInsetBottom
    1114:1115:void setInsetTop(int) -> setInsetTop
    665:666:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1296:1297:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1301:1305:void setPressed(boolean) -> setPressed
    903:906:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    917:920:void setRippleColorResource(int) -> setRippleColorResource
    1263:1270:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1312:1315:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    945:948:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    960:963:void setStrokeColorResource(int) -> setStrokeColorResource
    987:990:void setStrokeWidth(int) -> setStrokeWidth
    1002:1005:void setStrokeWidthResource(int) -> setStrokeWidthResource
    319:326:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    357:364:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    508:510:void setTextAlignment(int) -> setTextAlignment
    1231:1232:void setToggleCheckedStateOnClick(boolean) -> setToggleCheckedStateOnClick
    1202:1203:void toggle() -> toggle
    838:870:void updateIcon(boolean) -> updateIcon
    562:623:void updateIconPosition(int,int) -> updateIconPosition
com.google.android.material.button.MaterialButton$OnCheckedChangeListener -> com.google.android.material.button.MaterialButton$OnCheckedChangeListener:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
com.google.android.material.button.MaterialButton$OnPressedChangeListener -> com.google.android.material.button.MaterialButton$OnPressedChangeListener:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
com.google.android.material.button.MaterialButton$SavedState -> com.google.android.material.button.MaterialButton$SavedState:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
    1343:1343:void <clinit>() -> <clinit>
    1322:1323:void <init>(android.os.Parcelable) -> <init>
    1326:1331:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1340:1341:void readFromParcel(android.os.Parcel) -> readFromParcel
    1335:1337:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.button.MaterialButton$SavedState$1 -> com.google.android.material.button.MaterialButton$SavedState$1:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
    1344:1344:void <init>() -> <init>
    1344:1344:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1344:1344:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1348:1348:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1354:1354:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1344:1344:java.lang.Object[] newArray(int) -> newArray
    1360:1360:com.google.android.material.button.MaterialButton$SavedState[] newArray(int) -> newArray
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
# {"id":"sourceFile","fileName":"MaterialButtonHelper.java"}
    55:57:void <clinit>() -> <clinit>
    75:86:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    215:251:android.graphics.drawable.Drawable createBackground() -> createBackground
    336:336:int getCornerRadius() -> getCornerRadius
    437:437:int getInsetBottom() -> getInsetBottom
    467:467:int getInsetTop() -> getInsetTop
    410:419:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    341:353:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    358:358:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    283:283:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    429:429:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    295:295:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    306:306:int getStrokeWidth() -> getStrokeWidth
    188:188:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    201:201:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    379:379:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    170:170:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    366:366:boolean isCheckable() -> isCheckable
    370:370:boolean isToggleCheckedStateOnClick() -> isToggleCheckedStateOnClick
    89:143:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    262:265:void setBackgroundColor(int) -> setBackgroundColor
    162:167:void setBackgroundOverwritten() -> setBackgroundOverwritten
    362:363:void setCheckable(boolean) -> setCheckable
    327:333:void setCornerRadius(int) -> setCornerRadius
    433:434:void setInsetBottom(int) -> setInsetBottom
    441:442:void setInsetTop(int) -> setInsetTop
    268:279:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    423:425:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    205:207:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    287:291:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    299:303:void setStrokeWidth(int) -> setStrokeWidth
    179:185:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    192:198:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    374:375:void setToggleCheckedStateOnClick(boolean) -> setToggleCheckedStateOnClick
    446:464:void setVerticalInsets(int,int) -> setVerticalInsets
    146:154:void updateBackground() -> updateBackground
    385:406:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    310:322:void updateStroke() -> updateStroke
    175:175:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    145:145:void <clinit>() -> <clinit>
    186:187:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:210:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    127:127:int access$100(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View) -> access$100
    412:413:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    232:275:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    515:544:void adjustChildMarginsAndUpdateLayout() -> adjustChildMarginsAndUpdateLayout
    747:752:android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View) -> buildLayoutParams
    679:699:void checkInternal(int,boolean) -> checkInternal
    355:356:void clearChecked() -> clearChecked
    222:224:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    715:718:void dispatchOnButtonChecked(int,boolean) -> dispatchOnButtonChecked
    374:374:int getCheckedButtonId() -> getCheckedButtonId
    391:399:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    547:547:com.google.android.material.button.MaterialButton getChildButton(int) -> getChildButton
    761:766:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    590:597:int getFirstVisibleChildIndex() -> getFirstVisibleChildIndex
    627:639:int getIndexWithinVisibleButtons(android.view.View) -> getIndexWithinVisibleButtons
    601:608:int getLastVisibleChildIndex() -> getLastVisibleChildIndex
    645:661:com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int) -> getNewCornerData
    617:623:int getVisibleButtonCount() -> getVisibleButtonCount
    612:613:boolean isChildVisible(int) -> isChildVisible
    437:437:boolean isSingleSelection() -> isSingleSelection
    781:785:void onButtonCheckedStateChanged(com.google.android.material.button.MaterialButton,boolean) -> onButtonCheckedStateChanged
    214:218:void onFinishInflate() -> onFinishInflate
    304:314:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    296:300:void onMeasure(int,int) -> onMeasure
    279:292:void onViewRemoved(android.view.View) -> onViewRemoved
    551:567:void resetChildMargins(int) -> resetChildMargins
    495:501:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    794:800:void setEnabled(boolean) -> setEnabled
    722:725:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    470:471:void setSelectionRequired(boolean) -> setSelectionRequired
    449:454:void setSingleSelection(boolean) -> setSingleSelection
    491:492:void setSingleSelection(int) -> setSingleSelection
    735:743:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
    666:676:void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> updateBuilderWithCornerData
    702:712:void updateCheckedIds(java.util.Set) -> updateCheckedIds
    770:777:void updateChildOrder() -> updateChildOrder
    572:587:void updateChildShapes() -> updateChildShapes
    457:462:void updateChildrenA11yClassName() -> updateChildrenA11yClassName
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$1:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    154:154:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    154:154:int compare(java.lang.Object,java.lang.Object) -> compare
    157:168:int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton) -> compare
com.google.android.material.button.MaterialButtonToggleGroup$2 -> com.google.android.material.button.MaterialButtonToggleGroup$2:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    260:260:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    264:273:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$CornerData:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    812:812:void <clinit>() -> <clinit>
    820:825:void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> <init>
    854:854:com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> bottom
    834:834:com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> end
    839:839:com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> left
    844:844:com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> right
    829:829:com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> start
    849:849:com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> top
com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener -> com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    802:802:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    802:802:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    806:807:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> onPressedChanged
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
# {"id":"sourceFile","fileName":"CanvasCompat.java"}
    58:59:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.carousel.Carousel -> com.google.android.material.carousel.Carousel:
# {"id":"sourceFile","fileName":"Carousel.java"}
com.google.android.material.carousel.CarouselLayoutManager -> com.google.android.material.carousel.CarouselLayoutManager:
# {"id":"sourceFile","fileName":"CarouselLayoutManager.java"}
    79:117:void <init>() -> <init>
    64:64:com.google.android.material.carousel.KeylineStateList access$000(com.google.android.material.carousel.CarouselLayoutManager) -> access$000
    64:64:int access$100(com.google.android.material.carousel.CarouselLayoutManager,com.google.android.material.carousel.KeylineState,int) -> access$100
    64:64:int access$200(com.google.android.material.carousel.CarouselLayoutManager) -> access$200
    64:64:int access$300(com.google.android.material.carousel.CarouselLayoutManager) -> access$300
    64:64:int access$400(com.google.android.material.carousel.CarouselLayoutManager) -> access$400
    377:385:void addAndLayoutView(android.view.View,int,float) -> addAndLayoutView
    827:827:int addEnd(int,int) -> addEnd
    822:822:int addStart(int,int) -> addStart
    272:288:void addViewsEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> addViewsEnd
    245:261:void addViewsStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> addViewsStart
    685:712:float calculateChildOffsetCenterForLocation(android.view.View,float,com.google.android.material.carousel.CarouselLayoutManager$KeylineRange) -> calculateChildOffsetCenterForLocation
    669:672:int calculateChildStartForFill(int) -> calculateChildStartForFill
    635:654:int calculateEndHorizontalScroll(androidx.recyclerview.widget.RecyclerView$State,com.google.android.material.carousel.KeylineStateList) -> calculateEndHorizontalScroll
    605:611:int calculateShouldHorizontallyScrollBy(int,int,int,int) -> calculateShouldHorizontallyScrollBy
    620:627:int calculateStartHorizontalScroll(com.google.android.material.carousel.KeylineStateList) -> calculateStartHorizontalScroll
    904:904:boolean canScrollHorizontally() -> canScrollHorizontally
    1024:1024:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1012:1012:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1036:1036:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    208:223:void fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> fill
    121:121:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    813:813:int getContainerWidth() -> getContainerWidth
    439:450:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    453:455:float getDecoratedCenterXWithMargins(android.view.View) -> getDecoratedCenterXWithMargins
    726:726:float getMaskedItemSizeForLocOffset(float,com.google.android.material.carousel.CarouselLayoutManager$KeylineRange) -> getMaskedItemSizeForLocOffset
    808:808:int getParentBottom() -> getParentBottom
    800:800:int getParentEnd() -> getParentEnd
    796:796:int getParentStart() -> getParentStart
    804:804:int getParentTop() -> getParentTop
    848:857:int getScrollOffsetForPosition(com.google.android.material.carousel.KeylineState,int) -> getScrollOffsetForPosition
    519:569:com.google.android.material.carousel.CarouselLayoutManager$KeylineRange getSurroundingKeylineRange(java.util.List,float,boolean) -> getSurroundingKeylineRange
    817:817:boolean isLayoutRtl() -> isLayoutRtl
    418:420:boolean isLocOffsetOutOfFillBoundsEnd(float,com.google.android.material.carousel.CarouselLayoutManager$KeylineRange) -> isLocOffsetOutOfFillBoundsEnd
    400:402:boolean isLocOffsetOutOfFillBoundsStart(float,com.google.android.material.carousel.CarouselLayoutManager$KeylineRange) -> isLocOffsetOutOfFillBoundsStart
    292:307:void logChildrenIfDebugging() -> logChildrenIfDebugging
    353:364:com.google.android.material.carousel.CarouselLayoutManager$ChildCalculations makeChildCalculations(androidx.recyclerview.widget.RecyclerView$Recycler,float,int) -> makeChildCalculations
    759:760:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    987:998:void offsetChildLeftAndRight(android.view.View,float,float,android.graphics.Rect) -> offsetChildLeftAndRight
    832:837:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    137:184:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    227:235:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    469:493:void removeAndRecycleOutOfBoundsViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleOutOfBoundsViews
    919:933:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    948:972:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    909:909:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    863:871:void scrollToPosition(int) -> scrollToPosition
    130:133:void setCarouselStrategy(com.google.android.material.carousel.CarouselStrategy) -> setCarouselStrategy
    875:900:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    743:755:void updateChildMaskForLocation(android.view.View,float,com.google.android.material.carousel.CarouselLayoutManager$KeylineRange) -> updateChildMaskForLocation
    578:589:void updateCurrentKeylineStateForScrollOffset() -> updateCurrentKeylineStateForScrollOffset
    317:338:void validateChildOrderIfDebugging() -> validateChildOrderIfDebugging
com.google.android.material.carousel.CarouselLayoutManager$1 -> com.google.android.material.carousel.CarouselLayoutManager$1:
# {"id":"sourceFile","fileName":"CarouselLayoutManager.java"}
    876:876:void <init>(com.google.android.material.carousel.CarouselLayoutManager,android.content.Context) -> <init>
    893:895:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    880:886:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
com.google.android.material.carousel.CarouselLayoutManager$ChildCalculations -> com.google.android.material.carousel.CarouselLayoutManager$ChildCalculations:
# {"id":"sourceFile","fileName":"CarouselLayoutManager.java"}
    108:112:void <init>(android.view.View,float,com.google.android.material.carousel.CarouselLayoutManager$KeylineRange) -> <init>
com.google.android.material.carousel.CarouselLayoutManager$DebugItemDecoration -> com.google.android.material.carousel.CarouselLayoutManager$DebugItemDecoration:
# {"id":"sourceFile","fileName":"CarouselLayoutManager.java"}
    1085:1091:void <init>() -> <init>
    1100:1112:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    1095:1096:void setKeylines(java.util.List) -> setKeylines
com.google.android.material.carousel.CarouselLayoutManager$KeylineRange -> com.google.android.material.carousel.CarouselLayoutManager$KeylineRange:
# {"id":"sourceFile","fileName":"CarouselLayoutManager.java"}
    1072:1076:void <init>(com.google.android.material.carousel.KeylineState$Keyline,com.google.android.material.carousel.KeylineState$Keyline) -> <init>
com.google.android.material.carousel.CarouselStrategy -> com.google.android.material.carousel.CarouselStrategy:
# {"id":"sourceFile","fileName":"CarouselStrategy.java"}
    27:27:void <init>() -> <init>
    103:103:float getChildMaskPercentage(float,float,float) -> getChildMaskPercentage
com.google.android.material.carousel.KeylineState -> com.google.android.material.carousel.KeylineState:
# {"id":"sourceFile","fileName":"KeylineState.java"}
    48:48:void <init>(float,java.util.List,int,int,com.google.android.material.carousel.KeylineState$1) -> <init>
    59:64:void <init>(float,java.util.List,int,int) -> <init>
    82:82:com.google.android.material.carousel.KeylineState$Keyline getFirstFocalKeyline() -> getFirstFocalKeyline
    87:87:int getFirstFocalKeylineIndex() -> getFirstFocalKeylineIndex
    102:102:com.google.android.material.carousel.KeylineState$Keyline getFirstKeyline() -> getFirstKeyline
    72:72:float getItemSize() -> getItemSize
    77:77:java.util.List getKeylines() -> getKeylines
    92:92:com.google.android.material.carousel.KeylineState$Keyline getLastFocalKeyline() -> getLastFocalKeyline
    97:97:int getLastFocalKeylineIndex() -> getLastFocalKeylineIndex
    107:107:com.google.android.material.carousel.KeylineState$Keyline getLastKeyline() -> getLastKeyline
    119:143:com.google.android.material.carousel.KeylineState lerp(com.google.android.material.carousel.KeylineState,com.google.android.material.carousel.KeylineState,float) -> lerp
    156:171:com.google.android.material.carousel.KeylineState reverse(com.google.android.material.carousel.KeylineState) -> reverse
com.google.android.material.carousel.KeylineState$1 -> com.google.android.material.carousel.KeylineState$1:
# {"id":"sourceFile","fileName":"KeylineState.java"}
com.google.android.material.carousel.KeylineState$Builder -> com.google.android.material.carousel.KeylineState$Builder:
# {"id":"sourceFile","fileName":"KeylineState.java"}
    203:219:void <init>(float) -> <init>
    231:231:com.google.android.material.carousel.KeylineState$Builder addKeyline(float,float,float) -> addKeyline
    258:294:com.google.android.material.carousel.KeylineState$Builder addKeyline(float,float,float,boolean) -> addKeyline
    311:311:com.google.android.material.carousel.KeylineState$Builder addKeylineRange(float,float,float,int) -> addKeylineRange
    341:350:com.google.android.material.carousel.KeylineState$Builder addKeylineRange(float,float,float,int,boolean) -> addKeylineRange
    356:373:com.google.android.material.carousel.KeylineState build() -> build
    391:391:float calculateKeylineLocationForItemPosition(float,float,int,int) -> calculateKeylineLocationForItemPosition
com.google.android.material.carousel.KeylineState$Keyline -> com.google.android.material.carousel.KeylineState$Keyline:
# {"id":"sourceFile","fileName":"KeylineState.java"}
    416:421:void <init>(float,float,float,float) -> <init>
    425:429:com.google.android.material.carousel.KeylineState$Keyline lerp(com.google.android.material.carousel.KeylineState$Keyline,com.google.android.material.carousel.KeylineState$Keyline,float) -> lerp
com.google.android.material.carousel.KeylineStateList -> com.google.android.material.carousel.KeylineStateList:
# {"id":"sourceFile","fileName":"KeylineStateList.java"}
    57:78:void <init>(com.google.android.material.carousel.KeylineState,java.util.List,java.util.List) -> <init>
    459:465:int findFirstInBoundsKeylineIndex(com.google.android.material.carousel.KeylineState) -> findFirstInBoundsKeylineIndex
    437:444:int findFirstIndexAfterLastFocalKeylineWithMask(com.google.android.material.carousel.KeylineState,float) -> findFirstIndexAfterLastFocalKeylineWithMask
    469:475:int findLastInBoundsKeylineIndex(com.google.android.material.carousel.Carousel,com.google.android.material.carousel.KeylineState) -> findLastInBoundsKeylineIndex
    448:455:int findLastIndexBeforeFirstFocalKeylineWithMask(com.google.android.material.carousel.KeylineState,float) -> findLastIndexBeforeFirstFocalKeylineWithMask
    82:83:com.google.android.material.carousel.KeylineStateList from(com.google.android.material.carousel.Carousel,com.google.android.material.carousel.KeylineState) -> from
    88:88:com.google.android.material.carousel.KeylineState getDefaultState() -> getDefaultState
    93:93:com.google.android.material.carousel.KeylineState getLeftState() -> getLeftState
    98:98:com.google.android.material.carousel.KeylineState getRightState() -> getRightState
    118:139:com.google.android.material.carousel.KeylineState getShiftedState(float,float,float) -> getShiftedState
    210:229:float[] getStateStepInterpolationPoints(float,java.util.List,boolean) -> getStateStepInterpolationPoints
    263:309:java.util.List getStateStepsLeft(com.google.android.material.carousel.KeylineState) -> getStateStepsLeft
    346:394:java.util.List getStateStepsRight(com.google.android.material.carousel.Carousel,com.google.android.material.carousel.KeylineState) -> getStateStepsRight
    241:243:boolean isFirstFocalItemAtLeftOfContainer(com.google.android.material.carousel.KeylineState) -> isFirstFocalItemAtLeftOfContainer
    322:325:boolean isLastFocalItemAtRightOfContainer(com.google.android.material.carousel.Carousel,com.google.android.material.carousel.KeylineState) -> isLastFocalItemAtRightOfContainer
    157:177:com.google.android.material.carousel.KeylineState lerp(java.util.List,float,float[]) -> lerp
    418:433:com.google.android.material.carousel.KeylineState moveKeylineAndCreateKeylineState(com.google.android.material.carousel.KeylineState,int,int,float,int,int) -> moveKeylineAndCreateKeylineState
com.google.android.material.carousel.MultiBrowseCarouselStrategy -> com.google.android.material.carousel.MultiBrowseCarouselStrategy:
# {"id":"sourceFile","fileName":"MultiBrowseCarouselStrategy.java"}
    55:57:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    79:81:void <init>(boolean) -> <init>
    227:258:com.google.android.material.carousel.MultiBrowseCarouselStrategy$Arrangement findLowestCostArrangement(float,float,float,float,int[],float,int[],float,int[]) -> findLowestCostArrangement
    84:84:float getExtraSmallSize(android.content.Context) -> getExtraSmallSize
    92:92:float getSmallSizeMax(android.content.Context) -> getSmallSizeMax
    88:88:float getSmallSizeMin(android.content.Context) -> getSmallSizeMin
    262:269:int maxValue(int[]) -> maxValue
    98:192:com.google.android.material.carousel.KeylineState onFirstChildMeasuredWithMargins(com.google.android.material.carousel.Carousel,android.view.View) -> onFirstChildMeasuredWithMargins
com.google.android.material.carousel.MultiBrowseCarouselStrategy$Arrangement -> com.google.android.material.carousel.MultiBrowseCarouselStrategy$Arrangement:
# {"id":"sourceFile","fileName":"MultiBrowseCarouselStrategy.java"}
    320:331:void <init>(int,float,float,float,int,float,int,float,int,float) -> <init>
    427:428:float calculateLargeSize(float,int,float,int,int) -> calculateLargeSize
    450:455:float cost(float) -> cost
    374:406:void fit(float,float,float,float) -> fit
    357:357:float getSpace() -> getSpace
    433:439:boolean isValid() -> isValid
    336:336:java.lang.String toString() -> toString
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    83:134:void <clinit>() -> <clinit>
    227:228:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:283:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:81:int[] access$000(com.google.android.material.checkbox.MaterialCheckBox) -> access$000
    567:567:android.graphics.drawable.Drawable getButtonDrawable() -> getButtonDrawable
    630:630:android.graphics.drawable.Drawable getButtonIconDrawable() -> getButtonIconDrawable
    658:658:android.content.res.ColorStateList getButtonIconTintList() -> getButtonIconTintList
    686:686:android.graphics.PorterDuff$Mode getButtonIconTintMode() -> getButtonIconTintMode
    811:816:java.lang.String getButtonStateDescription() -> getButtonStateDescription
    582:582:android.content.res.ColorStateList getButtonTintList() -> getButtonTintList
    429:429:int getCheckedState() -> getCheckedState
    521:521:java.lang.CharSequence getErrorAccessibilityLabel() -> getErrorAccessibilityLabel
    844:864:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    822:828:android.content.res.ColorStateList getSuperButtonTintList() -> getSuperButtonTintList
    832:839:boolean isButtonDrawableLegacy(androidx.appcompat.widget.TintTypedArray) -> isButtonDrawableLegacy
    353:353:boolean isChecked() -> isChecked
    486:486:boolean isErrorShown() -> isErrorShown
    314:319:void onAttachedToWindow() -> onAttachedToWindow
    323:337:int[] onCreateDrawableState(int) -> onCreateDrawableState
    288:310:void onDraw(android.graphics.Canvas) -> onDraw
    368:376:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    880:887:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    870:875:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    724:738:void refreshButtonDrawable() -> refreshButtonDrawable
    554:555:void setButtonDrawable(int) -> setButtonDrawable
    559:562:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    616:618:void setButtonIconDrawable(android.graphics.drawable.Drawable) -> setButtonIconDrawable
    602:603:void setButtonIconDrawableResource(int) -> setButtonIconDrawableResource
    643:648:void setButtonIconTintList(android.content.res.ColorStateList) -> setButtonIconTintList
    671:676:void setButtonIconTintMode(android.graphics.PorterDuff$Mode) -> setButtonIconTintMode
    572:577:void setButtonTintList(android.content.res.ColorStateList) -> setButtonTintList
    587:589:void setButtonTintMode(android.graphics.PorterDuff$Mode) -> setButtonTintMode
    712:713:void setCenterIfNoTextEnabled(boolean) -> setCenterIfNoTextEnabled
    348:349:void setChecked(boolean) -> setChecked
    385:420:void setCheckedState(int) -> setCheckedState
    804:807:void setDefaultStateDescription() -> setDefaultStateDescription
    342:344:void setEnabled(boolean) -> setEnabled
    510:511:void setErrorAccessibilityLabel(java.lang.CharSequence) -> setErrorAccessibilityLabel
    498:499:void setErrorAccessibilityLabelResource(int) -> setErrorAccessibilityLabelResource
    469:477:void setErrorShown(boolean) -> setErrorShown
    363:364:void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    795:801:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    745:767:void setUpDefaultButtonDrawableAnimationIfNeeded() -> setUpDefaultButtonDrawableAnimationIfNeeded
    694:700:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
    358:359:void toggle() -> toggle
    770:777:void updateButtonTints() -> updateButtonTints
    783:790:void updateIconTintIfNeeded() -> updateIconTintIfNeeded
com.google.android.material.checkbox.MaterialCheckBox$1 -> com.google.android.material.checkbox.MaterialCheckBox$1:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    168:168:void <init>(com.google.android.material.checkbox.MaterialCheckBox) -> <init>
    183:189:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    171:179:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener -> com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener -> com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
com.google.android.material.checkbox.MaterialCheckBox$SavedState -> com.google.android.material.checkbox.MaterialCheckBox$SavedState:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    923:923:void <clinit>() -> <clinit>
    889:889:void <init>(android.os.Parcel,com.google.android.material.checkbox.MaterialCheckBox$1) -> <init>
    897:898:void <init>(android.os.Parcelable) -> <init>
    904:906:void <init>(android.os.Parcel) -> <init>
    938:945:java.lang.String getCheckedStateString() -> getCheckedStateString
    917:919:java.lang.String toString() -> toString
    910:912:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.checkbox.MaterialCheckBox$SavedState$1 -> com.google.android.material.checkbox.MaterialCheckBox$SavedState$1:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    924:924:void <init>() -> <init>
    924:924:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    927:927:com.google.android.material.checkbox.MaterialCheckBox$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    924:924:java.lang.Object[] newArray(int) -> newArray
    932:932:com.google.android.material.checkbox.MaterialCheckBox$SavedState[] newArray(int) -> newArray
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
# {"id":"sourceFile","fileName":"Chip.java"}
    0:0:void $r8$lambda$SrupMt7y9EGNLPrqW-9UBo9kKNA(com.google.android.material.chip.Chip,android.widget.CompoundButton,boolean) -> $r8$lambda$SrupMt7y9EGNLPrqW-9UBo9kKNA
      # {"id":"com.android.tools.r8.synthesized"}
    136:143:void <clinit>() -> <clinit>
    198:199:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    177:265:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    131:131:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    131:131:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    131:131:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    131:131:android.view.View$OnClickListener access$300(com.google.android.material.chip.Chip) -> access$300
    131:131:boolean access$402(com.google.android.material.chip.Chip,boolean) -> access$402
    131:131:android.graphics.Rect access$500(com.google.android.material.chip.Chip) -> access$500
    131:131:android.graphics.Rect access$600() -> access$600
    497:498:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    898:938:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    822:826:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    831:845:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    883:894:void drawableStateChanged() -> drawableStateChanged
    2278:2327:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    462:467:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    2342:2354:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    471:474:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1842:1842:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1877:1877:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1076:1076:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1144:1144:float getChipCornerRadius() -> getChipCornerRadius
    434:434:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2220:2220:float getChipEndPadding() -> getChipEndPadding
    1467:1467:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1539:1539:float getChipIconSize() -> getChipIconSize
    1502:1502:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1110:1110:float getChipMinHeight() -> getChipMinHeight
    1982:1982:float getChipStartPadding() -> getChipStartPadding
    1192:1192:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1226:1226:float getChipStrokeWidth() -> getChipStrokeWidth
    1301:1301:java.lang.CharSequence getChipText() -> getChipText
    1629:1629:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1745:1745:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2186:2186:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1700:1700:float getCloseIconSize() -> getCloseIconSize
    2152:2152:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1666:1666:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    947:954:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    959:961:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    650:650:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    858:865:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1948:1948:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2050:2050:float getIconEndPadding() -> getIconEndPadding
    2016:2016:float getIconStartPadding() -> getIconStartPadding
    1261:1261:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1168:1168:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1913:1913:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1404:1404:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2118:2118:float getTextEndPadding() -> getTextEndPadding
    2084:2084:float getTextStartPadding() -> getTextStartPadding
    942:942:boolean hasCloseIcon() -> hasCloseIcon
    321:338:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    416:430:void initOutlineProvider() -> initOutlineProvider
    2369:2371:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1755:1755:boolean isCheckable() -> isCheckable
    1577:1577:boolean isCloseIconVisible() -> isCloseIconVisible
    258:264:void lambda$new$0(android.widget.CompoundButton,boolean) -> lambda$new$0
    269:272:void onAttachedToWindow() -> onAttachedToWindow
    709:714:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    502:509:int[] onCreateDrawableState(int) -> onCreateDrawableState
    850:854:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    806:817:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    285:304:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    968:971:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    372:380:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    770:801:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    749:763:boolean performCloseIconClick() -> performCloseIconClick
    2359:2365:void removeBackgroundInset() -> removeBackgroundInset
    2336:2337:void setAccessibilityClassName(java.lang.CharSequence) -> setAccessibilityClassName
    542:547:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    532:533:void setBackgroundColor(int) -> setBackgroundColor
    551:556:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    537:538:void setBackgroundResource(int) -> setBackgroundResource
    522:523:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    527:528:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1777:1780:void setCheckable(boolean) -> setCheckable
    1765:1768:void setCheckableResource(int) -> setCheckableResource
    718:724:void setChecked(boolean) -> setChecked
    1864:1867:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1831:1832:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1825:1826:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1852:1855:void setCheckedIconResource(int) -> setCheckedIconResource
    1900:1903:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    1887:1890:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1805:1808:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1817:1820:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1098:1101:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1086:1089:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1179:1182:void setChipCornerRadius(float) -> setChipCornerRadius
    1155:1158:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    439:448:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2242:2245:void setChipEndPadding(float) -> setChipEndPadding
    2230:2233:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1489:1492:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1456:1457:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1450:1451:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1477:1480:void setChipIconResource(int) -> setChipIconResource
    1565:1568:void setChipIconSize(float) -> setChipIconSize
    1551:1554:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1525:1528:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1512:1515:void setChipIconTintResource(int) -> setChipIconTintResource
    1430:1433:void setChipIconVisible(int) -> setChipIconVisible
    1442:1445:void setChipIconVisible(boolean) -> setChipIconVisible
    1132:1135:void setChipMinHeight(float) -> setChipMinHeight
    1120:1123:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2004:2007:void setChipStartPadding(float) -> setChipStartPadding
    1992:1995:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1214:1217:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1202:1205:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1248:1251:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1236:1239:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1337:1338:void setChipText(java.lang.CharSequence) -> setChipText
    1331:1332:void setChipTextResource(int) -> setChipTextResource
    1652:1656:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1733:1736:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1618:1619:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1612:1613:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2208:2211:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2196:2199:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    875:879:void setCloseIconHovered(boolean) -> setCloseIconHovered
    868:872:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1639:1643:void setCloseIconResource(int) -> setCloseIconResource
    1722:1725:void setCloseIconSize(float) -> setCloseIconSize
    1710:1713:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2174:2177:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2162:2165:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1688:1691:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1676:1679:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1593:1594:void setCloseIconVisible(int) -> setCloseIconVisible
    1603:1607:void setCloseIconVisible(boolean) -> setCloseIconVisible
    564:572:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    609:617:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    622:630:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    638:645:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:584:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    592:600:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    277:281:void setElevation(float) -> setElevation
    655:665:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2266:2268:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    514:519:void setGravity(int) -> setGravity
    1970:1973:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1958:1961:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2072:2075:void setIconEndPadding(float) -> setIconEndPadding
    2060:2063:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2038:2041:void setIconStartPadding(float) -> setIconStartPadding
    2026:2029:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    979:980:void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener) -> setInternalOnCheckedChangeListener
    1306:1312:void setLayoutDirection(int) -> setLayoutDirection
    677:681:void setLines(int) -> setLines
    693:697:void setMaxLines(int) -> setMaxLines
    701:705:void setMaxWidth(int) -> setMaxWidth
    685:689:void setMinLines(int) -> setMinLines
    730:731:void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    735:737:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1286:1292:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1271:1277:void setRippleColorResource(int) -> setRippleColorResource
    1162:1163:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1935:1938:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1923:1926:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    669:673:void setSingleLine(boolean) -> setSingleLine
    1316:1326:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1357:1361:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1365:1370:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1374:1379:void setTextAppearance(int) -> setTextAppearance
    1347:1348:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2140:2143:void setTextEndPadding(float) -> setTextEndPadding
    2128:2131:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1383:1389:void setTextSize(int,float) -> setTextSize
    2106:2109:void setTextStartPadding(float) -> setTextStartPadding
    2094:2097:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    2255:2255:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    491:494:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    309:317:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    451:459:void updateBackgroundDrawable() -> updateBackgroundDrawable
    479:488:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    345:367:void updatePaddingInternal() -> updatePaddingInternal
    1392:1400:void updateTextPaintDrawState() -> updateTextPaintDrawState
    383:413:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$$ExternalSyntheticLambda0 -> com.google.android.material.chip.Chip$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.chip.Chip com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.f$0 -> f$0
    0:0:void com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.<init>(com.google.android.material.chip.Chip) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
# {"id":"sourceFile","fileName":"Chip.java"}
    180:180:void <init>(com.google.android.material.chip.Chip) -> <init>
    190:190:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    184:187:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
# {"id":"sourceFile","fileName":"Chip.java"}
    418:418:void <init>(com.google.android.material.chip.Chip) -> <init>
    422:427:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
# {"id":"sourceFile","fileName":"Chip.java"}
    985:987:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    991:993:int getVirtualViewAt(float,float) -> getVirtualViewAt
    998:1002:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1055:1062:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1039:1050:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1015:1035:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    1006:1010:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
# {"id":"sourceFile","fileName":"ChipDrawable.java"}
    166:170:void <clinit>() -> <clinit>
    176:334:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1326:1347:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    823:841:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    538:541:float calculateChipIconWidth() -> calculateChipIconWidth
    933:949:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    914:930:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    952:973:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    578:581:float calculateCloseIconWidth() -> calculateCloseIconWidth
    888:907:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    879:880:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    846:863:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    533:533:boolean canShowCheckedIcon() -> canShowCheckedIcon
    280:282:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    590:637:void draw(android.graphics.Canvas) -> draw
    709:721:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    649:656:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    694:706:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    663:679:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    640:646:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    760:779:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    682:691:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    782:816:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    725:757:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1238:1238:int getAlpha() -> getAlpha
    2040:2040:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    2079:2079:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1422:1422:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1489:1489:float getChipCornerRadius() -> getChipCornerRadius
    2432:2432:float getChipEndPadding() -> getChipEndPadding
    1718:1718:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1786:1786:float getChipIconSize() -> getChipIconSize
    1747:1747:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1455:1455:float getChipMinHeight() -> getChipMinHeight
    2180:2180:float getChipStartPadding() -> getChipStartPadding
    1526:1526:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1562:1562:float getChipStrokeWidth() -> getChipStrokeWidth
    1868:1868:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1958:1958:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2396:2396:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1930:1930:float getCloseIconSize() -> getCloseIconSize
    2360:2360:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1013:1013:int[] getCloseIconState() -> getCloseIconState
    1910:1910:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    492:493:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1252:1252:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    561:570:float getCurrentChipIconHeight() -> getCurrentChipIconHeight
    549:553:float getCurrentChipIconWidth() -> getCurrentChipIconWidth
    1663:1663:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    2150:2150:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2253:2253:float getIconEndPadding() -> getIconEndPadding
    2214:2214:float getIconStartPadding() -> getIconStartPadding
    513:513:int getIntrinsicHeight() -> getIntrinsicHeight
    498:507:int getIntrinsicWidth() -> getIntrinsicWidth
    1274:1274:int getOpacity() -> getOpacity
    1280:1292:void getOutline(android.graphics.Outline) -> getOutline
    1601:1601:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    2119:2119:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1630:1630:java.lang.CharSequence getText() -> getText
    1651:1651:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2326:2326:float getTextEndPadding() -> getTextEndPadding
    2292:2292:float getTextStartPadding() -> getTextStartPadding
    1355:1355:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    463:463:boolean getUseCompatRipple() -> getUseCompatRipple
    1372:1381:boolean hasState(int[],int) -> hasState
    1296:1300:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1962:1962:boolean isCheckable() -> isCheckable
    993:993:boolean isCloseIconStateful() -> isCloseIconStateful
    1821:1821:boolean isCloseIconVisible() -> isCloseIconVisible
    979:987:boolean isStateful() -> isStateful
    1151:1151:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1155:1155:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1159:1161:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    338:450:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1166:1181:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1186:1201:boolean onLevelChange(int) -> onLevelChange
    473:477:void onSizeChange() -> onSizeChange
    1024:1027:boolean onStateChange(int[]) -> onStateChange
    1033:1089:boolean onStateChange(int[],int[]) -> onStateChange
    1089:1093:boolean onStateChange(int[],int[]) -> onStateChange
    1093:1147:boolean onStateChange(int[],int[]) -> onStateChange
    1018:1020:void onTextSizeChange() -> onTextSizeChange
    1304:1308:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1230:1234:void setAlpha(int) -> setAlpha
    1970:1984:void setCheckable(boolean) -> setCheckable
    1966:1967:void setCheckableResource(int) -> setCheckableResource
    2060:2074:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    2050:2051:void setCheckedIconResource(int) -> setCheckedIconResource
    2100:2109:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    2089:2090:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1997:1998:void setCheckedIconVisible(int) -> setCheckedIconVisible
    2001:2018:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1442:1446:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1432:1433:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1511:1516:void setChipCornerRadius(float) -> setChipCornerRadius
    1500:1501:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    2452:2457:void setChipEndPadding(float) -> setChipEndPadding
    2442:2443:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1726:1742:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1722:1723:void setChipIconResource(int) -> setChipIconResource
    1808:1818:void setChipIconSize(float) -> setChipIconSize
    1797:1798:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1767:1776:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1757:1758:void setChipIconTintResource(int) -> setChipIconTintResource
    1681:1682:void setChipIconVisible(int) -> setChipIconVisible
    1685:1702:void setChipIconVisible(boolean) -> setChipIconVisible
    1475:1480:void setChipMinHeight(float) -> setChipMinHeight
    1465:1466:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2200:2205:void setChipStartPadding(float) -> setChipStartPadding
    2190:2191:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1546:1553:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1536:1537:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1582:1591:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1572:1573:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1364:1368:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1876:1895:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1948:1954:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    2416:2423:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2406:2407:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1872:1873:void setCloseIconResource(int) -> setCloseIconResource
    1938:1945:void setCloseIconSize(float) -> setCloseIconSize
    1934:1935:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2380:2387:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2370:2371:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1001:1007:boolean setCloseIconState(int[]) -> setCloseIconState
    1918:1927:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1914:1915:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1835:1852:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1243:1247:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    468:469:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1667:1668:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2170:2171:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2160:2161:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2273:2283:void setIconEndPadding(float) -> setIconEndPadding
    2263:2264:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2234:2244:void setIconStartPadding(float) -> setIconStartPadding
    2224:2225:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    2475:2476:void setMaxWidth(int) -> setMaxWidth
    1621:1626:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1611:1612:void setRippleColorResource(int) -> setRippleColorResource
    2489:2490:void setShouldDrawText(boolean) -> setShouldDrawText
    2139:2140:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    2129:2130:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1638:1647:void setText(java.lang.CharSequence) -> setText
    1659:1660:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1655:1656:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2346:2351:void setTextEndPadding(float) -> setTextEndPadding
    2336:2337:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1385:1391:void setTextSize(float) -> setTextSize
    2312:2317:void setTextStartPadding(float) -> setTextStartPadding
    2302:2303:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1257:1261:void setTintList(android.content.res.ColorStateList) -> setTintList
    1265:1270:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    454:459:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1206:1221:boolean setVisible(boolean,boolean) -> setVisible
    2479:2479:boolean shouldDrawText() -> shouldDrawText
    523:523:boolean showsCheckedIcon() -> showsCheckedIcon
    518:518:boolean showsChipIcon() -> showsChipIcon
    528:528:boolean showsCloseIcon() -> showsCloseIcon
    1319:1322:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1312:1316:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1359:1361:void updateCompatRippleColor() -> updateCompatRippleColor
    1899:1906:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipDrawable$Delegate -> com.google.android.material.chip.ChipDrawable$Delegate:
# {"id":"sourceFile","fileName":"ChipDrawable.java"}
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
# {"id":"sourceFile","fileName":"MaterialColors.java"}
    233:234:int compositeARGBWithAlpha(int,int) -> compositeARGBWithAlpha
    74:76:int getColor(android.view.View,int) -> getColor
    87:89:int getColor(android.content.Context,int,java.lang.String) -> getColor
    100:100:int getColor(android.view.View,int,int) -> getColor
    110:114:int getColor(android.content.Context,int,int) -> getColor
    142:150:android.content.res.ColorStateList getColorStateListOrNull(android.content.Context,int) -> getColorStateListOrNull
    239:239:boolean isColorLight(int) -> isColorLight
    194:196:int layer(android.view.View,int,int,float) -> layer
    208:210:int layer(int,int,float) -> layer
    219:219:int layer(int,int) -> layer
    154:159:int resolveColor(android.content.Context,android.util.TypedValue) -> resolveColor
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
    186:186:void <clinit>() -> <clinit>
    35:35:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,int,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    64:85:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,int) -> <init>
    35:35:com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints) -> access$100
    35:35:com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints) -> access$200
    35:35:com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints) -> access$300
    35:35:int access$400(com.google.android.material.datepicker.CalendarConstraints) -> access$400
    35:35:com.google.android.material.datepicker.CalendarConstraints$DateValidator access$500(com.google.android.material.datepicker.CalendarConstraints) -> access$500
    208:208:int describeContents() -> describeContents
    163:174:boolean equals(java.lang.Object) -> equals
    95:95:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    107:107:com.google.android.material.datepicker.Month getEnd() -> getEnd
    123:123:int getFirstDayOfWeek() -> getFirstDayOfWeek
    131:131:int getMonthSpan() -> getMonthSpan
    113:113:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    101:101:com.google.android.material.datepicker.Month getStart() -> getStart
    139:139:int getYearSpan() -> getYearSpan
    179:180:int hashCode() -> hashCode
    213:218:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
    187:187:void <init>() -> <init>
    187:187:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    191:196:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    187:187:java.lang.Object[] newArray(int) -> newArray
    202:202:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarConstraints$Builder -> com.google.android.material.datepicker.CalendarConstraints$Builder:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
    242:249:void <clinit>() -> <clinit>
    253:267:void <init>(com.google.android.material.datepicker.CalendarConstraints) -> <init>
    379:385:com.google.android.material.datepicker.CalendarConstraints build() -> build
    349:350:com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long) -> setOpenAt
com.google.android.material.datepicker.CalendarConstraints$DateValidator -> com.google.android.material.datepicker.CalendarConstraints$DateValidator:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
# {"id":"sourceFile","fileName":"CalendarItemStyle.java"}
    67:79:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    88:131:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    179:179:int getBottomInset() -> getBottomInset
    175:175:int getTopInset() -> getTopInset
    140:141:void styleItem(android.widget.TextView) -> styleItem
    148:164:void styleItem(android.widget.TextView,android.content.res.ColorStateList) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
# {"id":"sourceFile","fileName":"CalendarStyle.java"}
    74:116:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.DateSelector -> com.google.android.material.datepicker.DateSelector:
# {"id":"sourceFile","fileName":"DateSelector.java"}
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
# {"id":"sourceFile","fileName":"DateStrings.java"}
    224:237:java.lang.String getDayContentDescription(android.content.Context,long,boolean,boolean,boolean) -> getDayContentDescription
    88:88:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    92:93:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    116:119:java.lang.String getOptionalYearMonthDayOfWeekDay(long) -> getOptionalYearMonthDayOfWeekDay
    248:253:java.lang.String getYearContentDescription(android.content.Context,int) -> getYearContentDescription
    38:39:java.lang.String getYearMonth(long) -> getYearMonth
    99:99:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    103:104:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
    148:151:boolean isDateWithinCurrentYear(long) -> isDateWithinCurrentYear
com.google.android.material.datepicker.DateValidatorPointForward -> com.google.android.material.datepicker.DateValidatorPointForward:
# {"id":"sourceFile","fileName":"DateValidatorPointForward.java"}
    57:57:void <clinit>() -> <clinit>
    30:30:void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1) -> <init>
    34:36:void <init>(long) -> <init>
    79:79:int describeContents() -> describeContents
    89:96:boolean equals(java.lang.Object) -> equals
    44:44:com.google.android.material.datepicker.DateValidatorPointForward from(long) -> from
    101:102:int hashCode() -> hashCode
    74:74:boolean isValid(long) -> isValid
    84:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointForward$1 -> com.google.android.material.datepicker.DateValidatorPointForward$1:
# {"id":"sourceFile","fileName":"DateValidatorPointForward.java"}
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    68:68:com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int) -> newArray
com.google.android.material.datepicker.DayViewDecorator -> com.google.android.material.datepicker.DayViewDecorator:
# {"id":"sourceFile","fileName":"DayViewDecorator.java"}
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
# {"id":"sourceFile","fileName":"DaysOfWeekAdapter.java"}
    46:47:void <clinit>() -> <clinit>
    40:55:void <init>() -> <init>
    40:59:void <init>(int) -> <init>
    78:78:int getCount() -> getCount
    38:38:java.lang.Object getItem(int) -> getItem
    64:67:java.lang.Integer getItem(int) -> getItem
    73:73:long getItemId(int) -> getItemId
    85:99:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    104:108:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    76:82:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    61:61:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    61:61:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    61:61:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    61:61:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    61:61:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    408:489:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    525:525:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    267:267:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    328:328:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    362:362:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    322:322:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    358:358:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    373:373:int getDayHeight(android.content.Context) -> getDayHeight
    502:515:int getDialogPickerHeight(android.content.Context) -> getDialogPickerHeight
    520:520:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    112:120:com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator) -> newInstance
    135:142:void onCreate(android.os.Bundle) -> onCreate
    150:249:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    125:131:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    492:499:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    338:353:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    377:396:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    253:263:void setUpForAccessibility() -> setUpForAccessibility
    399:404:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    171:171:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    175:178:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    480:480:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    483:487:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$11 -> com.google.android.material.datepicker.MaterialCalendar$11:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    493:493:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    496:497:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    189:189:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    192:199:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    210:210:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    214:225:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    255:255:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    259:261:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    267:270:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    275:282:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    412:412:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    417:422:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    435:435:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    450:458:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    439:446:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    462:462:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    465:466:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    470:470:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    473:477:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    64:66:void <clinit>() -> <clinit>
    64:64:void <init>(java.lang.String,int) -> <init>
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener -> com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
# {"id":"sourceFile","fileName":"MaterialCalendarGridView.java"}
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    229:236:void gainFocus(int,android.graphics.Rect) -> gainFocus
    41:41:android.widget.Adapter getAdapter() -> getAdapter
    41:41:android.widget.ListAdapter getAdapter() -> getAdapter
    109:109:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    239:239:android.view.View getChildAtPosition(int) -> getChildAtPosition
    254:254:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    76:78:void onAttachedToWindow() -> onAttachedToWindow
    126:203:void onDraw(android.graphics.Canvas) -> onDraw
    221:226:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    91:103:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    207:217:void onMeasure(int,int) -> onMeasure
    41:41:void setAdapter(android.widget.Adapter) -> setAdapter
    114:122:void setAdapter(android.widget.ListAdapter) -> setAdapter
    82:87:void setSelection(int) -> setSelection
    247:250:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
# {"id":"sourceFile","fileName":"MaterialCalendarGridView.java"}
    63:63:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    67:70:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    87:89:void <clinit>() -> <clinit>
    73:130:void <init>() -> <init>
    73:73:com.google.android.material.datepicker.DateSelector access$100(com.google.android.material.datepicker.MaterialDatePicker) -> access$100
    73:73:android.widget.Button access$300(com.google.android.material.datepicker.MaterialDatePicker) -> access$300
    512:519:android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context) -> createHeaderToggleDrawable
    392:420:void enableEdgeToEdgeIfNeeded(android.view.Window) -> enableEdgeToEdgeIfNeeded
    503:506:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    524:528:java.lang.CharSequence getFirstLineBySeparator(java.lang.CharSequence) -> getFirstLineBySeparator
    435:435:java.lang.String getHeaderContentDescription() -> getHeaderContentDescription
    121:121:java.lang.String getHeaderText() -> getHeaderText
    555:561:int getPaddedPickerWidth(android.content.Context) -> getPaddedPickerWidth
    221:224:int getThemeResId(android.content.Context) -> getThemeResId
    472:492:void initHeaderToggle(android.content.Context) -> initHeaderToggle
    536:536:boolean isFullscreen(android.content.Context) -> isFullscreen
    532:532:boolean isLandscape() -> isLandscape
    540:540:boolean isNestedScrollable(android.content.Context) -> isNestedScrollable
    364:368:void onCancel(android.content.DialogInterface) -> onCancel
    201:218:void onCreate(android.os.Bundle) -> onCreate
    230:245:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    254:280:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    372:380:void onDismiss(android.content.DialogInterface) -> onDismiss
    179:197:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    336:354:void onStart() -> onStart
    358:360:void onStop() -> onStop
    544:551:boolean readMaterialCalendarStyleBoolean(android.content.Context,int) -> readMaterialCalendarStyleBoolean
    439:469:void startPickerFragment() -> startPickerFragment
    430:432:void updateHeader(java.lang.String) -> updateHeader
    424:426:void updateTitle(boolean) -> updateTitle
    496:500:void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton) -> updateToggleContentDescription
com.google.android.material.datepicker.MaterialDatePicker$4 -> com.google.android.material.datepicker.MaterialDatePicker$4:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    403:403:void <init>(com.google.android.material.datepicker.MaterialDatePicker,int,android.view.View,int) -> <init>
    406:416:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.datepicker.MaterialDatePicker$5 -> com.google.android.material.datepicker.MaterialDatePicker$5:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    457:457:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
com.google.android.material.datepicker.MaterialDatePicker$6 -> com.google.android.material.datepicker.MaterialDatePicker$6:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    481:481:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    485:485:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialTextInputPicker -> com.google.android.material.datepicker.MaterialTextInputPicker:
# {"id":"sourceFile","fileName":"MaterialTextInputPicker.java"}
    35:35:void <init>() -> <init>
    50:56:com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    69:74:void onCreate(android.os.Bundle) -> onCreate
    82:84:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    61:65:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.material.datepicker.MaterialTextInputPicker$1 -> com.google.android.material.datepicker.MaterialTextInputPicker$1:
# {"id":"sourceFile","fileName":"MaterialTextInputPicker.java"}
    89:89:void <init>(com.google.android.material.datepicker.MaterialTextInputPicker) -> <init>
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
# {"id":"sourceFile","fileName":"Month.java"}
    203:203:void <clinit>() -> <clinit>
    59:67:void <init>(java.util.Calendar) -> <init>
    30:30:int compareTo(java.lang.Object) -> compareTo
    135:135:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    75:77:com.google.android.material.datepicker.Month create(long) -> create
    90:93:com.google.android.material.datepicker.Month create(int,int) -> create
    102:102:com.google.android.material.datepicker.Month current() -> current
    106:112:int daysFromStartOfWeekToFirstOfMonth(int) -> daysFromStartOfWeekToFirstOfMonth
    222:222:int describeContents() -> describeContents
    117:124:boolean equals(java.lang.Object) -> equals
    169:171:long getDay(int) -> getDay
    175:177:int getDayOfMonth(long) -> getDayOfMonth
    194:197:java.lang.String getLongName() -> getLongName
    156:156:long getStableId() -> getStableId
    129:130:int hashCode() -> hashCode
    186:188:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    148:151:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    227:229:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
# {"id":"sourceFile","fileName":"Month.java"}
    204:204:void <init>() -> <init>
    204:204:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    208:210:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    204:204:java.lang.Object[] newArray(int) -> newArray
    216:216:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
# {"id":"sourceFile","fileName":"MonthAdapter.java"}
    47:52:void <clinit>() -> <clinit>
    74:80:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator) -> <init>
    320:321:int dayToPosition(int) -> dayToPosition
    293:293:int firstPositionInMonth() -> firstPositionInMonth
    119:119:int getCount() -> getCount
    242:243:java.lang.String getDayContentDescription(android.content.Context,long) -> getDayContentDescription
    42:42:java.lang.Object getItem(int) -> getItem
    99:102:java.lang.Long getItem(int) -> getItem
    107:107:long getItemId(int) -> getItemId
    42:42:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    125:151:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    84:84:boolean hasStableIds() -> hasStableIds
    280:283:void initializeStyles(android.content.Context) -> initializeStyles
    262:262:boolean isEndOfRange(long) -> isEndOfRange
    334:334:boolean isFirstInRow(int) -> isFirstInRow
    342:342:boolean isLastInRow(int) -> isLastInRow
    271:271:boolean isSelected(long) -> isSelected
    252:252:boolean isStartOfRange(long) -> isStartOfRange
    247:247:boolean isToday(long) -> isToday
    304:304:int lastPositionInMonth() -> lastPositionInMonth
    315:315:int positionToDay(int) -> positionToDay
    184:239:void updateSelectedState(android.widget.TextView,long,int) -> updateSelectedState
    171:181:void updateSelectedStateForDate(com.google.android.material.datepicker.MaterialCalendarGridView,long) -> updateSelectedStateForDate
    156:168:void updateSelectedStates(com.google.android.material.datepicker.MaterialCalendarGridView) -> updateSelectedStates
    326:326:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
# {"id":"sourceFile","fileName":"MonthsPagerAdapter.java"}
    52:74:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    39:39:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    142:142:int getItemCount() -> getItemCount
    137:137:long getItemId(int) -> getItemId
    152:152:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    147:147:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    156:156:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    39:39:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    110:133:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    39:39:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    95:104:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
# {"id":"sourceFile","fileName":"MonthsPagerAdapter.java"}
    125:125:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    128:131:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
# {"id":"sourceFile","fileName":"MonthsPagerAdapter.java"}
    82:89:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.OnSelectionChangedListener -> com.google.android.material.datepicker.OnSelectionChangedListener:
# {"id":"sourceFile","fileName":"OnSelectionChangedListener.java"}
    24:24:void <init>() -> <init>
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
# {"id":"sourceFile","fileName":"PickerFragment.java"}
    21:23:void <init>() -> <init>
    30:30:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    40:41:void clearOnSelectionChangedListeners() -> clearOnSelectionChangedListeners
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
# {"id":"sourceFile","fileName":"SmoothCalendarLayoutManager.java"}
    34:35:void <init>(android.content.Context,int,boolean) -> <init>
    40:50:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
# {"id":"sourceFile","fileName":"SmoothCalendarLayoutManager.java"}
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.TimeSource -> com.google.android.material.datepicker.TimeSource:
# {"id":"sourceFile","fileName":"TimeSource.java"}
    25:25:void <clinit>() -> <clinit>
    31:34:void <init>(java.lang.Long,java.util.TimeZone) -> <init>
    80:80:java.util.Calendar now() -> now
    90:95:java.util.Calendar now(java.util.TimeZone) -> now
    43:43:com.google.android.material.datepicker.TimeSource system() -> system
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
# {"id":"sourceFile","fileName":"UtcDates.java"}
    41:41:void <clinit>() -> <clinit>
    131:134:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    205:205:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    139:143:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    114:120:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    48:49:com.google.android.material.datepicker.TimeSource getTimeSource() -> getTimeSource
    55:55:java.util.TimeZone getTimeZone() -> getTimeZone
    67:73:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    60:60:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    84:84:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    96:102:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    210:210:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
    190:190:android.icu.text.DateFormat getYearMonthFormat(java.util.Locale) -> getYearMonthFormat
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
# {"id":"sourceFile","fileName":"YearGridAdapter.java"}
    45:47:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    94:94:int getItemCount() -> getItemCount
    98:98:int getPositionForYear(int) -> getPositionForYear
    102:102:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:68:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    52:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
# {"id":"sourceFile","fileName":"YearGridAdapter.java"}
    40:42:void <init>(android.widget.TextView) -> <init>
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.InsetDialogOnTouchListener:
# {"id":"sourceFile","fileName":"InsetDialogOnTouchListener.java"}
    45:50:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    54:76:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    202:250:android.graphics.drawable.Drawable compositeTwoLayeredDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> compositeTwoLayeredDrawable
    168:168:android.graphics.drawable.Drawable createTintableMutatedDrawableIfNeeded(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintableMutatedDrawableIfNeeded
    178:189:android.graphics.drawable.Drawable createTintableMutatedDrawableIfNeeded(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> createTintableMutatedDrawableIfNeeded
    256:267:int[] getCheckedState(int[]) -> getCheckedState
    285:299:void setOutlineToPath(android.graphics.Outline,android.graphics.Path) -> setOutlineToPath
    92:97:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.drawable.DrawableUtils$$InternalSyntheticApiModelOutline$1$f5923863e87451774c032344458021795757d7a20f0d93fc99337241970341f1$0.m(android.graphics.Outline,android.graphics.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
# {"id":"sourceFile","fileName":"ElevationOverlayProvider.java"}
    36:36:void <clinit>() -> <clinit>
    45:51:void <init>(android.content.Context) -> <init>
    58:64:void <init>(boolean,int,int,int,float) -> <init>
    158:164:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    132:142:int compositeOverlay(int,float) -> compositeOverlay
    109:112:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    169:169:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    193:193:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.expandable.ExpandableWidget -> com.google.android.material.expandable.ExpandableWidget:
# {"id":"sourceFile","fileName":"ExpandableWidget.java"}
com.google.android.material.expandable.ExpandableWidgetHelper -> com.google.android.material.expandable.ExpandableWidgetHelper:
# {"id":"sourceFile","fileName":"ExpandableWidgetHelper.java"}
    36:42:void <init>(com.google.android.material.expandable.ExpandableWidget) -> <init>
    91:95:void dispatchExpandedStateChanged() -> dispatchExpandedStateChanged
    87:87:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    56:56:boolean isExpanded() -> isExpanded
    71:77:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    62:66:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    81:82:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
com.google.android.material.floatingactionbutton.BorderDrawable -> com.google.android.material.floatingactionbutton.BorderDrawable:
# {"id":"sourceFile","fileName":"BorderDrawable.java"}
    61:87:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    223:248:android.graphics.Shader createGradientShader() -> createGradientShader
    126:144:void draw(android.graphics.Canvas) -> draw
    172:173:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    255:255:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    193:193:int getOpacity() -> getOpacity
    149:159:void getOutline(android.graphics.Outline) -> getOutline
    163:167:boolean getPadding(android.graphics.Rect) -> getPadding
    203:203:boolean isStateful() -> isStateful
    198:199:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    208:218:boolean onStateChange(int[]) -> onStateChange
    187:189:void setAlpha(int) -> setAlpha
    99:105:void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    90:96:void setBorderWidth(float) -> setBorderWidth
    109:111:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    118:122:void setGradientColors(int,int,int,int) -> setGradientColors
    181:183:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
com.google.android.material.floatingactionbutton.BorderDrawable$1 -> com.google.android.material.floatingactionbutton.BorderDrawable$1:
# {"id":"sourceFile","fileName":"BorderDrawable.java"}
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState -> com.google.android.material.floatingactionbutton.BorderDrawable$BorderState:
# {"id":"sourceFile","fileName":"BorderDrawable.java"}
    262:262:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable) -> <init>
    262:262:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1) -> <init>
    272:272:int getChangingConfigurations() -> getChangingConfigurations
    267:267:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    83:986:void <clinit>() -> <clinit>
    81:81:void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$400
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    918:918:void <init>(java.lang.Class,java.lang.String) -> <init>
    918:918:java.lang.Object get(java.lang.Object) -> get
    932:932:java.lang.Float get(android.view.View) -> get
    918:918:void set(java.lang.Object,java.lang.Object) -> set
    923:925:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    941:941:void <init>(java.lang.Class,java.lang.String) -> <init>
    941:941:java.lang.Object get(java.lang.Object) -> get
    955:955:java.lang.Float get(android.view.View) -> get
    941:941:void set(java.lang.Object,java.lang.Object) -> set
    946:948:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$8 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$8:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    964:964:void <init>(java.lang.Class,java.lang.String) -> <init>
    964:964:java.lang.Object get(java.lang.Object) -> get
    978:978:java.lang.Float get(android.view.View) -> get
    964:964:void set(java.lang.Object,java.lang.Object) -> set
    967:973:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$9 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$9:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    987:987:void <init>(java.lang.Class,java.lang.String) -> <init>
    987:987:java.lang.Object get(java.lang.Object) -> get
    1001:1001:java.lang.Float get(android.view.View) -> get
    987:987:void set(java.lang.Object,java.lang.Object) -> set
    990:996:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    1038:1041:void <init>() -> <init>
    1047:1060:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1259:1264:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    1025:1025:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1122:1122:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1148:1152:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1127:1132:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    1025:1025:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1137:1144:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    1025:1025:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1272:1287:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    1169:1181:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    1239:1244:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    1214:1223:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    110:110:void <clinit>() -> <clinit>
    201:202:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    188:272:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    101:101:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    101:101:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    1444:1445:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    835:837:void drawableStateChanged() -> drawableStateChanged
    364:364:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    390:390:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    352:352:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1200:1200:float getCompatElevation() -> getCompatElevation
    1236:1236:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1273:1273:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    913:913:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    885:890:boolean getContentRect(android.graphics.Rect) -> getContentRect
    782:782:int getCustomSize() -> getCustomSize
    663:663:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1327:1327:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1436:1439:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    899:901:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    304:304:int getRippleColor() -> getRippleColor
    315:315:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    539:539:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1303:1303:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    723:723:int getSize() -> getSize
    796:796:int getSizeDimension() -> getSizeDimension
    800:817:int getSizeDimension(int) -> getSizeDimension
    424:424:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    443:443:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    457:457:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    471:471:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    691:691:boolean getUseCompatPadding() -> getUseCompatPadding
    635:636:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    653:653:boolean isExpanded() -> isExpanded
    841:843:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    904:908:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    475:494:void onApplySupportImageTint() -> onApplySupportImageTint
    823:825:void onAttachedToWindow() -> onAttachedToWindow
    829:831:void onDetachedFromWindow() -> onDetachedFromWindow
    276:292:void onMeasure(int,int) -> onMeasure
    863:873:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    847:856:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    918:924:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    508:509:void setBackgroundColor(int) -> setBackgroundColor
    498:499:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    503:504:void setBackgroundResource(int) -> setBackgroundResource
    375:379:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    402:406:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1212:1213:void setCompatElevation(float) -> setCompatElevation
    1224:1225:void setCompatElevationResource(int) -> setCompatElevationResource
    1249:1250:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1262:1263:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1285:1286:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1297:1298:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    765:773:void setCustomSize(int) -> setCustomSize
    1188:1190:void setElevation(float) -> setElevation
    560:564:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    658:659:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1336:1337:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1345:1346:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    520:527:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    514:516:void setImageResource(int) -> setImageResource
    578:580:void setMaxImageSize(int) -> setMaxImageSize
    329:330:void setRippleColor(int) -> setRippleColor
    343:347:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1414:1416:void setScaleX(float) -> setScaleX
    1420:1422:void setScaleY(float) -> setScaleY
    1432:1433:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    532:533:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1312:1313:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1321:1322:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    708:713:void setSize(int) -> setSize
    414:415:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    433:434:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    448:452:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    462:466:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1396:1398:void setTranslationX(float) -> setTranslationX
    1402:1404:void setTranslationY(float) -> setTranslationY
    1408:1410:void setTranslationZ(float) -> setTranslationZ
    676:680:void setUseCompatPadding(boolean) -> setUseCompatPadding
    568:569:void setVisibility(int) -> setVisibility
    603:604:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    729:733:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    733:733:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    741:742:void onHidden() -> onHidden
    736:737:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    959:961:void <init>() -> <init>
    964:972:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    950:950:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1133:1139:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1021:1025:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1151:1182:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1000:1005:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    950:950:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1010:1017:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    950:950:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1106:1123:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    1037:1055:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1088:1097:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    936:937:void <init>() -> <init>
    940:941:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    933:933:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    933:933:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    933:933:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    933:933:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    1452:1452:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1475:1475:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1468:1471:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1461:1464:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    70:150:void <clinit>() -> <clinit>
    103:191:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    68:68:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    68:68:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    68:68:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    68:68:void access$300(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,android.graphics.Matrix) -> access$300
    302:316:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    581:618:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    633:671:android.animation.AnimatorSet createDefaultAnimator(float,float,float,int,int) -> createDefaultAnimator
    840:846:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    727:727:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    361:361:boolean getEnsureMinTouchTargetSize() -> getEnsureMinTouchTargetSize
    349:349:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    259:259:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    799:810:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    742:750:void getPadding(android.graphics.Rect) -> getPadding
    263:263:float getPressedTranslationZ() -> getPressedTranslationZ
    335:335:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    340:340:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    426:498:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    829:834:boolean isOrWillBeHidden() -> isOrWillBeHidden
    819:824:boolean isOrWillBeShown() -> isOrWillBeShown
    768:775:void onAttachedToWindow() -> onAttachedToWindow
    778:783:void onDetachedFromWindow() -> onDetachedFromWindow
    753:761:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    790:795:void onPreDraw() -> onPreDraw
    718:723:void onScaleChanged() -> onScaleChanged
    710:715:void onTranslationChanged() -> onTranslationChanged
    222:228:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    231:234:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    248:252:void setElevation(float) -> setElevation
    365:366:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    353:354:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    267:271:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    294:299:void setImageMatrixScale(float) -> setImageMatrixScale
    281:285:void setMaxImageSize(int) -> setMaxImageSize
    237:238:void setMinTouchTargetSize(int) -> setMinTouchTargetSize
    274:278:void setPressedTranslationZ(float) -> setPressedTranslationZ
    241:245:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    369:371:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    319:331:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    344:345:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    917:917:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    357:357:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    501:576:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    290:291:void updateImageMatrixScale() -> updateImageMatrixScale
    735:739:void updatePadding() -> updatePadding
    380:383:void updateShapeElevation(float) -> updateShapeElevation
    679:691:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    455:455:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    469:470:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    474:483:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    460:465:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    541:541:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    552:558:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    544:548:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    602:602:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    602:602:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    608:609:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    642:642:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,float,float,float,float,float,float,android.graphics.Matrix) -> <init>
    645:655:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    683:684:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    683:683:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    687:688:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    801:801:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    804:805:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    908:908:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    912:912:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    890:890:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    894:894:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    899:899:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    903:903:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    881:881:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    885:885:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    849:849:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    849:849:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    872:874:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    858:868:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
# {"id":"sourceFile","fileName":"FloatingActionButtonImplLollipop.java"}
    54:55:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    228:237:com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    125:163:android.animation.StateListAnimator createDefaultStateListAnimator(float,float,float) -> createDefaultStateListAnimator
    168:174:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    243:244:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> createShapeDrawable
    179:179:float getElevation() -> getElevation
    249:257:void getPadding(android.graphics.Rect) -> getPadding
    64:86:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> initializeBackgroundDrawable
    214:214:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    184:185:void onCompatShadowChanged() -> onCompatShadowChanged
    194:209:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    104:118:void onElevationsChanged(float,float,float) -> onElevationsChanged
    223:223:boolean requirePreDrawListener() -> requirePreDrawListener
    90:96:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    189:189:boolean shouldAddPadding() -> shouldAddPadding
    219:219:void updateFromViewRotation() -> updateFromViewRotation
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable:
# {"id":"sourceFile","fileName":"FloatingActionButtonImplLollipop.java"}
    268:269:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    273:273:boolean isStateful() -> isStateful
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
# {"id":"sourceFile","fileName":"BaselineLayout.java"}
    31:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:110:void onLayout(boolean,int,int,int,int) -> onLayout
    47:81:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    41:41:void <clinit>() -> <clinit>
    52:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:132:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:120:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:140:void setCheckable(boolean) -> setCheckable
    79:84:void setChecked(boolean) -> setChecked
    149:150:void setPressable(boolean) -> setPressable
    98:101:void setPressed(boolean) -> setPressed
    93:94:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:65:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:73:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    180:180:void <clinit>() -> <clinit>
    162:163:void <init>(android.os.Parcelable) -> <init>
    166:168:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:178:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:174:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    181:181:void <init>() -> <init>
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.ClippableRoundedCornerLayout -> com.google.android.material.internal.ClippableRoundedCornerLayout:
# {"id":"sourceFile","fileName":"ClippableRoundedCornerLayout.java"}
    47:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:65:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
# {"id":"sourceFile","fileName":"CollapsingTextHelper.java"}
    76:91:void <clinit>() -> <clinit>
    104:193:void <init>(android.view.View) -> <init>
    1282:1287:int blendARGB(int,int,float) -> blendARGB
    721:808:void calculateBaseOffsets(boolean) -> calculateBaseOffsets
    603:604:void calculateCurrentOffsets() -> calculateCurrentOffsets
    681:689:float calculateFadeModeTextAlpha(float) -> calculateFadeModeTextAlpha
    336:336:float calculateFadeModeThresholdFraction() -> calculateFadeModeThresholdFraction
    955:958:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    607:678:void calculateOffsets(float) -> calculateOffsets
    987:988:void calculateUsingTextSize(float) -> calculateUsingTextSize
    992:1079:void calculateUsingTextSize(float,boolean) -> calculateUsingTextSize
    1175:1179:void clearTexture() -> clearTexture
    1082:1101:android.text.StaticLayout createStaticLayout(int,float,boolean) -> createStaticLayout
    839:878:void draw(android.graphics.Canvas) -> draw
    885:952:void drawMultilineTransition(android.graphics.Canvas,float,float) -> drawMultilineTransition
    1120:1140:void ensureExpandedTexture() -> ensureExpandedTexture
    276:282:void getCollapsedTextActualBounds(android.graphics.RectF,int,int) -> getCollapsedTextActualBounds
    1263:1263:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    321:323:float getCollapsedTextHeight() -> getCollapsedTextHeight
    285:292:float getCollapsedTextLeftBound(int,int) -> getCollapsedTextLeftBound
    297:304:float getCollapsedTextRightBound(android.graphics.RectF,int,int) -> getCollapsedTextRightBound
    705:705:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    710:716:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    700:700:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    309:311:float getExpandedTextHeight() -> getExpandedTextHeight
    583:583:float getExpansionFraction() -> getExpansionFraction
    1105:1115:android.text.Layout$Alignment getMultilineTextLayoutAlignment() -> getMultilineTextLayoutAlignment
    1115:1115:android.text.Layout$Alignment getMultilineTextLayoutAlignment() -> getMultilineTextLayoutAlignment
    353:358:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    345:350:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    815:826:void interpolateBounds(float) -> interpolateBounds
    1255:1255:boolean isClose(float,float) -> isClose
    962:962:boolean isDefaultIsRtl() -> isDefaultIsRtl
    574:575:boolean isStateful() -> isStateful
    966:969:boolean isTextDirectionHeuristicsIsRtl(java.lang.CharSequence,boolean) -> isTextDirectionHeuristicsIsRtl
    1292:1295:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    528:544:void maybeUpdateFontWeightAdjustment(android.content.res.Configuration) -> maybeUpdateFontWeightAdjustment
    811:811:float measureTextWidth(android.text.TextPaint,java.lang.CharSequence) -> measureTextWidth
    1143:1144:void recalculate() -> recalculate
    1147:1153:void recalculate(boolean) -> recalculate
    1299:1299:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    239:244:void setCollapsedAndExpandedTextColor(android.content.res.ColorStateList) -> setCollapsedAndExpandedTextColor
    265:269:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    272:273:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    383:415:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    829:831:void setCollapsedTextBlend(float) -> setCollapsedTextBlend
    225:229:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    372:376:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    462:465:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    485:497:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    254:258:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    261:262:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    247:251:void setExpandedLetterSpacing(float) -> setExpandedLetterSpacing
    834:836:void setExpandedTextBlend(float) -> setExpandedTextBlend
    361:365:void setExpandedTextGravity(int) -> setExpandedTextGravity
    211:215:void setExpandedTextSize(float) -> setExpandedTextSize
    504:516:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    554:560:void setExpansionFraction(float) -> setExpansionFraction
    973:984:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    201:203:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    563:570:boolean setState(int[]) -> setState
    1161:1167:void setText(java.lang.CharSequence) -> setText
    196:198:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    474:479:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    881:881:boolean shouldDrawMultiline() -> shouldDrawMultiline
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
# {"id":"sourceFile","fileName":"CollapsingTextHelper.java"}
    405:405:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    408:409:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
# {"id":"sourceFile","fileName":"DescendantOffsetUtils.java"}
    37:38:void <clinit>() -> <clinit>
    83:85:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:101:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:72:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.EdgeToEdgeUtils -> com.google.android.material.internal.EdgeToEdgeUtils:
# {"id":"sourceFile","fileName":"EdgeToEdgeUtils.java"}
    77:112:void applyEdgeToEdge(android.view.Window,boolean,java.lang.Integer,java.lang.Integer) -> applyEdgeToEdge
    159:167:int getNavigationBarColor(android.content.Context,boolean) -> getNavigationBarColor
    142:152:int getStatusBarColor(android.content.Context,boolean) -> getStatusBarColor
    171:171:boolean isUsingLightSystemBar(int,boolean) -> isUsingLightSystemBar
    135:138:void setLightNavigationBar(android.view.Window,boolean) -> setLightNavigationBar
    122:125:void setLightStatusBar(android.view.Window,boolean) -> setLightStatusBar
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
# {"id":"sourceFile","fileName":"ForegroundLinearLayout.java"}
    43:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:236:void draw(android.graphics.Canvas) -> draw
    242:246:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    137:141:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    129:133:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:195:void onLayout(boolean,int,int,int,int) -> onLayout
    199:201:void onSizeChanged(int,int,int,int) -> onSizeChanged
    152:177:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:120:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ManufacturerUtils -> com.google.android.material.internal.ManufacturerUtils:
# {"id":"sourceFile","fileName":"ManufacturerUtils.java"}
    36:36:boolean isMeizuDevice() -> isMeizuDevice
com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener -> com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener:
# {"id":"sourceFile","fileName":"MaterialCheckable.java"}
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
# {"id":"sourceFile","fileName":"NavigationMenuItemView.java"}
    56:56:void <clinit>() -> <clinit>
    92:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    137:153:void adjustAppearance() -> adjustAppearance
    176:185:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    190:190:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    108:128:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    258:262:int[] onCreateDrawableState(int) -> onCreateDrawableState
    248:248:boolean prefersCondensedTitle() -> prefersCondensedTitle
    163:172:void setActionView(android.view.View) -> setActionView
    200:206:void setCheckable(boolean) -> setCheckable
    210:214:void setChecked(boolean) -> setChecked
    287:288:void setHorizontalPadding(int) -> setHorizontalPadding
    221:240:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    291:292:void setIconPadding(int) -> setIconPadding
    243:244:void setIconSize(int) -> setIconSize
    266:272:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    295:296:void setMaxLines(int) -> setMaxLines
    283:284:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    275:276:void setTextAppearance(int) -> setTextAppearance
    279:280:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    195:196:void setTitle(java.lang.CharSequence) -> setTitle
    131:133:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
# {"id":"sourceFile","fileName":"NavigationMenuItemView.java"}
    77:77:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    82:84:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
# {"id":"sourceFile","fileName":"NavigationMenuView.java"}
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:int getWindowAnimations() -> getWindowAnimations
    47:47:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
# {"id":"sourceFile","fileName":"StateListAnimator.java"}
    37:44:void <init>() -> <init>
    62:65:void addState(int[],android.animation.ValueAnimator) -> addState
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
# {"id":"sourceFile","fileName":"StateListAnimator.java"}
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:51:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
# {"id":"sourceFile","fileName":"StateListAnimator.java"}
    120:123:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.StaticLayoutBuilderCompat -> com.google.android.material.internal.StaticLayoutBuilderCompat:
# {"id":"sourceFile","fileName":"StaticLayoutBuilderCompat.java"}
    57:58:void <clinit>() -> <clinit>
    90:103:void <init>(java.lang.CharSequence,android.text.TextPaint,int) -> <init>
    246:287:android.text.StaticLayout build() -> build
    116:116:com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int) -> obtain
    128:129:com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment) -> setAlignment
    228:229:com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    213:214:com.google.android.material.internal.StaticLayoutBuilderCompat setHyphenationFrequency(int) -> setHyphenationFrequency
    143:144:com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean) -> setIncludePad
    378:379:com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean) -> setIsRtl
    198:200:com.google.android.material.internal.StaticLayoutBuilderCompat setLineSpacing(float,float) -> setLineSpacing
    183:184:com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int) -> setMaxLines
    240:241:com.google.android.material.internal.StaticLayoutBuilderCompat setStaticLayoutBuilderConfigurer(com.google.android.material.internal.StaticLayoutBuilderConfigurer) -> setStaticLayoutBuilderConfigurer
com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException -> com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException:
# {"id":"sourceFile","fileName":"StaticLayoutBuilderCompat.java"}
com.google.android.material.internal.StaticLayoutBuilderConfigurer -> com.google.android.material.internal.StaticLayoutBuilderConfigurer:
# {"id":"sourceFile","fileName":"StaticLayoutBuilderConfigurer.java"}
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
# {"id":"sourceFile","fileName":"TextDrawableHelper.java"}
    41:78:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    110:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:106:float getTextWidth(java.lang.String) -> getTextWidth
    82:83:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:153:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:92:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:157:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
# {"id":"sourceFile","fileName":"TextDrawableHelper.java"}
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:65:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    47:55:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate -> com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate:
# {"id":"sourceFile","fileName":"TextDrawableHelper.java"}
com.google.android.material.internal.TextWatcherAdapter -> com.google.android.material.internal.TextWatcherAdapter:
# {"id":"sourceFile","fileName":"TextWatcherAdapter.java"}
    33:33:void <init>() -> <init>
    36:36:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    39:39:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
# {"id":"sourceFile","fileName":"ThemeEnforcement.java"}
    44:47:void <clinit>() -> <clinit>
    212:213:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    128:148:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    216:217:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    157:190:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    246:252:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    199:208:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    228:229:boolean isMaterial3Theme(android.content.Context) -> isMaterial3Theme
    233:241:boolean isTheme(android.content.Context,int[]) -> isTheme
    76:82:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    114:120:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ToolbarUtils -> com.google.android.material.internal.ToolbarUtils:
# {"id":"sourceFile","fileName":"ToolbarUtils.java"}
    48:48:void <clinit>() -> <clinit>
    93:108:android.widget.ImageView getImageView(androidx.appcompat.widget.Toolbar,android.graphics.drawable.Drawable) -> getImageView
    88:88:android.widget.ImageView getLogoImageView(androidx.appcompat.widget.Toolbar) -> getLogoImageView
    68:69:android.widget.TextView getSubtitleTextView(androidx.appcompat.widget.Toolbar) -> getSubtitleTextView
    73:83:java.util.List getTextViewsWithText(androidx.appcompat.widget.Toolbar,java.lang.CharSequence) -> getTextViewsWithText
    62:63:android.widget.TextView getTitleTextView(androidx.appcompat.widget.Toolbar) -> getTitleTextView
com.google.android.material.internal.ToolbarUtils$1 -> com.google.android.material.internal.ToolbarUtils$1:
# {"id":"sourceFile","fileName":"ToolbarUtils.java"}
    49:49:void <init>() -> <init>
    49:49:int compare(java.lang.Object,java.lang.Object) -> compare
    52:52:int compare(android.view.View,android.view.View) -> compare
com.google.android.material.internal.TouchObserverFrameLayout -> com.google.android.material.internal.TouchObserverFrameLayout:
# {"id":"sourceFile","fileName":"TouchObserverFrameLayout.java"}
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:57:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    62:63:void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    297:315:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    160:161:float dpToPx(android.content.Context,int) -> dpToPx
    428:430:java.lang.Integer getBackgroundColor(android.view.View) -> getBackgroundColor
    343:349:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    156:156:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    137:151:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    319:336:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
    165:176:void requestFocusAndShowKeyboard(android.view.View) -> requestFocusAndShowKeyboard
com.google.android.material.internal.ViewUtils$1 -> com.google.android.material.internal.ViewUtils$1:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    167:167:void <init>(android.view.View) -> <init>
    170:174:void run() -> run
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    307:307:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    310:310:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$4 -> com.google.android.material.internal.ViewUtils$4:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    325:325:void <init>() -> <init>
    328:330:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    333:333:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener -> com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    203:208:void <init>(int,int,int,int) -> <init>
    210:215:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
# {"id":"sourceFile","fileName":"VisibilityAwareImageButton.java"}
    47:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:61:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:54:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
# {"id":"sourceFile","fileName":"MathUtils.java"}
    28:30:float dist(float,float,float,float) -> dist
com.google.android.material.motion.MotionUtils -> com.google.android.material.motion.MotionUtils:
# {"id":"sourceFile","fileName":"MotionUtils.java"}
    129:135:float getLegacyControlPoint(java.lang.String[],int) -> getLegacyControlPoint
    123:125:java.lang.String getLegacyEasingContent(java.lang.String,java.lang.String) -> getLegacyEasingContent
    89:108:android.animation.TimeInterpolator getLegacyThemeInterpolator(java.lang.String) -> getLegacyThemeInterpolator
    113:114:boolean isLegacyEasingAttribute(java.lang.String) -> isLegacyEasingAttribute
    118:119:boolean isLegacyEasingType(java.lang.String,java.lang.String) -> isLegacyEasingType
    50:50:int resolveThemeDuration(android.content.Context,int,int) -> resolveThemeDuration
    68:85:android.animation.TimeInterpolator resolveThemeInterpolator(android.content.Context,int,android.animation.TimeInterpolator) -> resolveThemeInterpolator
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
# {"id":"sourceFile","fileName":"MaterialRadioButton.java"}
    45:47:void <clinit>() -> <clinit>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:136:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    92:97:void onAttachedToWindow() -> onAttachedToWindow
    105:111:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
# {"id":"sourceFile","fileName":"CancelableFontCallback.java"}
    42:45:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:65:void cancel() -> cancel
    54:55:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:50:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:71:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.CancelableFontCallback$ApplyFont -> com.google.android.material.resources.CancelableFontCallback$ApplyFont:
# {"id":"sourceFile","fileName":"CancelableFontCallback.java"}
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
# {"id":"sourceFile","fileName":"MaterialAttributes.java"}
    46:50:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    121:124:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    133:136:int resolveInteger(android.content.Context,int,int) -> resolveInteger
    89:89:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    56:57:android.util.TypedValue resolveTypedValueOrThrow(android.view.View,int) -> resolveTypedValueOrThrow
    65:77:android.util.TypedValue resolveTypedValueOrThrow(android.content.Context,int,java.lang.String) -> resolveTypedValueOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
# {"id":"sourceFile","fileName":"MaterialResources.java"}
    62:81:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    91:110:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    173:181:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    122:131:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    259:262:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    142:148:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
    188:188:boolean isFontScaleAtLeast1_3(android.content.Context) -> isFontScaleAtLeast1_3
    195:195:boolean isFontScaleAtLeast2_0(android.content.Context) -> isFontScaleAtLeast2_0
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
# {"id":"sourceFile","fileName":"TextAppearance.java"}
    77:122:void <init>(android.content.Context,int) -> <init>
    48:48:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    48:48:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    48:48:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    269:291:void createFallbackFont() -> createFallbackFont
    263:264:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    132:154:android.graphics.Typeface getFont(android.content.Context) -> getFont
    172:218:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    235:252:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    363:363:android.content.res.ColorStateList getTextColor() -> getTextColor
    371:371:float getTextSize() -> getTextSize
    367:368:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    375:376:void setTextSize(float) -> setTextSize
    379:386:boolean shouldLoadFontSynchronously(android.content.Context) -> shouldLoadFontSynchronously
    303:316:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    328:333:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    342:359:void updateTextPaintMeasureState(android.content.Context,android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
# {"id":"sourceFile","fileName":"TextAppearance.java"}
    194:194:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    204:206:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    197:200:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
# {"id":"sourceFile","fileName":"TextAppearance.java"}
    239:239:void <init>(com.google.android.material.resources.TextAppearance,android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    249:250:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    243:245:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
# {"id":"sourceFile","fileName":"TextAppearanceConfig.java"}
    43:43:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
# {"id":"sourceFile","fileName":"TextAppearanceFontCallback.java"}
    30:30:void <init>() -> <init>
com.google.android.material.resources.TypefaceUtils -> com.google.android.material.resources.TypefaceUtils:
# {"id":"sourceFile","fileName":"TypefaceUtils.java"}
    45:45:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.Context,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
    52:63:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.res.Configuration,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.resources.TypefaceUtils$$InternalSyntheticApiModelOutline$2$f820dc1d60c05b76a07a4eb308cb98f479c398dd077248d8ad415c710cd4497f$0.m(android.content.res.Configuration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.resources.TypefaceUtils$$InternalSyntheticApiModelOutline$2$f820dc1d60c05b76a07a4eb308cb98f479c398dd077248d8ad415c710cd4497f$2.m(android.graphics.Typeface) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Typeface com.google.android.material.resources.TypefaceUtils$$InternalSyntheticApiModelOutline$2$f820dc1d60c05b76a07a4eb308cb98f479c398dd077248d8ad415c710cd4497f$4.m(android.graphics.Typeface,int,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
# {"id":"sourceFile","fileName":"RippleDrawableCompat.java"}
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:59:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:64:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:129:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    104:104:boolean isStateful() -> isStateful
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:148:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:135:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:120:boolean onStateChange(int[]) -> onStateChange
    153:154:void setAlpha(int) -> setAlpha
    158:159:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:84:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:69:void setTint(int) -> setTint
    78:79:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:74:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$1 -> com.google.android.material.ripple.RippleDrawableCompat$1:
# {"id":"sourceFile","fileName":"RippleDrawableCompat.java"}
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
# {"id":"sourceFile","fileName":"RippleDrawableCompat.java"}
    175:178:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:183:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    193:193:int getChangingConfigurations() -> getChangingConfigurations
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
# {"id":"sourceFile","fileName":"RippleUtils.java"}
    55:90:void <clinit>() -> <clinit>
    220:230:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    238:252:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.search.SearchBar$ScrollingViewBehavior -> com.google.android.material.search.SearchBar$ScrollingViewBehavior:
# {"id":"sourceFile","fileName":"SearchBar.java"}
    805:807:void <init>() -> <init>
    807:807:void <init>() -> <init>
    805:811:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    816:822:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    840:840:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.search.SearchView -> com.google.android.material.search.SearchView:
# {"id":"sourceFile","fileName":"SearchView.java"}
com.google.android.material.search.SearchView$Behavior -> com.google.android.material.search.SearchView$Behavior:
# {"id":"sourceFile","fileName":"SearchView.java"}
    889:889:void <init>() -> <init>
    892:893:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    887:887:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    898:901:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.search.SearchView,android.view.View) -> onDependentViewChanged
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
# {"id":"sourceFile","fileName":"ShadowRenderer.java"}
    60:66:void <clinit>() -> <clinit>
    72:73:void <init>() -> <init>
    68:84:void <init>(int) -> <init>
    130:184:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    96:117:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    218:218:android.graphics.Paint getShadowPaint() -> getShadowPaint
    87:91:void setShadowColor(int) -> setShadowColor
com.google.android.material.shadow.ShadowViewDelegate -> com.google.android.material.shadow.ShadowViewDelegate:
# {"id":"sourceFile","fileName":"ShadowViewDelegate.java"}
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
# {"id":"sourceFile","fileName":"AbsoluteCornerSize.java"}
    28:30:void <init>(float) -> <init>
    46:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
# {"id":"sourceFile","fileName":"AdjustedCornerSize.java"}
    37:46:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    55:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerSize -> com.google.android.material.shape.CornerSize:
# {"id":"sourceFile","fileName":"CornerSize.java"}
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
# {"id":"sourceFile","fileName":"CornerTreatment.java"}
    30:30:void <init>() -> <init>
    98:99:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
# {"id":"sourceFile","fileName":"CutCornerTreatment.java"}
    24:26:void <init>() -> <init>
    26:26:void <init>() -> <init>
    47:53:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
# {"id":"sourceFile","fileName":"EdgeTreatment.java"}
    29:29:void <init>() -> <init>
    73:73:boolean forceIntersection() -> forceIntersection
    64:65:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    78:114:void <clinit>() -> <clinit>
    187:188:void <init>() -> <init>
    195:196:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    204:205:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    119:233:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    76:76:java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    76:76:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    76:76:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable) -> access$200
    76:76:boolean access$302(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$302
    1270:1278:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1220:1231:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1166:1172:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1178:1199:void calculateStrokePath() -> calculateStrokePath
    1286:1291:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1262:1264:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    623:627:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    176:183:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    959:985:void draw(android.graphics.Canvas) -> draw
    1113:1137:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1066:1067:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    1045:1046:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1055:1063:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1079:1081:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    461:461:int getAlpha() -> getAlpha
    490:491:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1348:1351:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    238:238:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    674:674:float getElevation() -> getElevation
    321:321:android.content.res.ColorStateList getFillColor() -> getFillColor
    456:456:int getOpacity() -> getOpacity
    1204:1217:void getOutline(android.graphics.Outline) -> getOutline
    524:528:boolean getPadding(android.graphics.Rect) -> getPadding
    657:657:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    1141:1143:int getShadowOffsetX() -> getShadowOffsetX
    1148:1150:int getShadowOffsetY() -> getShadowOffsetY
    275:275:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1340:1343:float getStrokeInsetLength() -> getStrokeInsetLength
    1356:1359:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    695:695:float getTranslationZ() -> getTranslationZ
    480:485:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    716:716:float getZ() -> getZ
    933:935:boolean hasCompatShadow() -> hasCompatShadow
    940:940:boolean hasFill() -> hasFill
    946:948:boolean hasStroke() -> hasStroke
    616:618:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    871:873:void invalidateSelf() -> invalidateSelf
    880:881:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    600:601:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    1394:1394:boolean isRoundRect() -> isRoundRect
    1296:1300:boolean isStateful() -> isStateful
    988:1032:void maybeDrawCompatShadow(android.graphics.Canvas) -> maybeDrawCompatShadow
    250:251:int modulateAlpha(int,int) -> modulateAlpha
    244:246:android.graphics.drawable.Drawable mutate() -> mutate
    953:955:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1305:1311:boolean onStateChange(int[]) -> onStateChange
    1085:1103:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    844:845:boolean requiresCompatShadow() -> requiresCompatShadow
    466:470:void setAlpha(int) -> setAlpha
    474:476:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    501:502:void setCornerSize(com.google.android.material.shape.CornerSize) -> setCornerSize
    683:687:void setElevation(float) -> setElevation
    308:312:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    648:653:void setInterpolation(float) -> setInterpolation
    541:547:void setPadding(int,int,int,int) -> setPadding
    662:666:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    262:264:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    410:412:void setStroke(float,int) -> setStroke
    421:423:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    330:334:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    440:442:void setStrokeWidth(float) -> setStrokeWidth
    380:381:void setTint(int) -> setTint
    357:360:void setTintList(android.content.res.ColorStateList) -> setTintList
    348:353:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1315:1336:boolean updateColorsForState(int[]) -> updateColorsForState
    1234:1253:boolean updateTintFilter() -> updateTintFilter
    729:735:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    219:219:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    223:225:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    229:231:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    1182:1182:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1188:1190:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    1409:1438:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1409:1465:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1478:1478:int getChangingConfigurations() -> getChangingConfigurations
    1470:1473:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
# {"id":"sourceFile","fileName":"MaterialShapeUtils.java"}
    31:37:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:61:void setElevation(android.view.View,float) -> setElevation
    70:74:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:86:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
# {"id":"sourceFile","fileName":"RelativeCornerSize.java"}
    58:60:void <init>(float) -> <init>
    75:82:boolean equals(java.lang.Object) -> equals
    70:70:float getCornerSize(android.graphics.RectF) -> getCornerSize
    51:51:float getMaxCornerSize(android.graphics.RectF) -> getMaxCornerSize
    87:88:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
# {"id":"sourceFile","fileName":"RoundedCornerTreatment.java"}
    24:26:void <init>() -> <init>
    26:26:void <init>() -> <init>
    43:45:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
    593:593:void <clinit>() -> <clinit>
    42:42:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    608:623:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    626:641:void <init>() -> <init>
    465:465:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    474:474:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    484:484:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    495:502:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    510:510:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    519:519:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    533:568:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    568:569:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    760:760:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    680:680:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    720:720:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    670:670:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    710:710:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    575:588:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    730:730:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    750:750:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    740:740:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    650:650:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    690:690:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    660:660:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    700:700:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    819:838:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    766:766:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    775:775:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    780:780:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize) -> withCornerSize
    803:808:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$1 -> com.google.android.material.shape.ShapeAppearanceModel$1:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
    47:69:void <init>() -> <init>
    69:69:void <init>() -> <init>
    47:86:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    45:45:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    45:45:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    45:45:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    45:45:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    45:45:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    45:45:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    45:45:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    45:45:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    45:45:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    45:45:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    45:45:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    45:45:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    459:459:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    448:453:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    126:129:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize) -> setAllCornerSizes
    136:139:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    363:364:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    375:381:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    194:195:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    202:203:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    318:319:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    330:336:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    178:179:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    186:187:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    229:230:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    241:247:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    146:147:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    154:155:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    273:274:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    285:291:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    162:163:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    170:171:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator -> com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
    55:77:void <init>() -> <init>
    325:325:float angleOfEdge(int) -> angleOfEdge
    170:182:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    185:230:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    99:100:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    118:145:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    307:322:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    278:287:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    263:272:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    247:257:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    293:302:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    83:83:com.google.android.material.shape.ShapeAppearancePathProvider getInstance() -> getInstance
    234:243:boolean pathOverlapsCorner(android.graphics.Path,int) -> pathOverlapsCorner
    148:157:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    160:167:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$Lazy -> com.google.android.material.shape.ShapeAppearancePathProvider$Lazy:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
    39:39:void <clinit>() -> <clinit>
com.google.android.material.shape.ShapeAppearancePathProvider$PathListener -> com.google.android.material.shape.ShapeAppearancePathProvider$PathListener:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
    348:354:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    92:98:void <init>() -> <init>
    253:275:void addArc(float,float,float,float,float,float) -> addArc
    335:350:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    317:320:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    284:288:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    327:327:boolean containsIncompatibleShadowOp() -> containsIncompatibleShadowOp
    297:300:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    369:369:float getCurrentShadowAngle() -> getCurrentShadowAngle
    373:373:float getEndShadowAngle() -> getEndShadowAngle
    361:361:float getEndX() -> getEndX
    365:365:float getEndY() -> getEndY
    353:353:float getStartX() -> getStartX
    357:357:float getStartY() -> getStartY
    132:147:void lineTo(float,float) -> lineTo
    109:110:void reset(float,float) -> reset
    114:123:void reset(float,float,float,float) -> reset
    393:394:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    397:398:void setEndShadowAngle(float) -> setEndShadowAngle
    385:386:void setEndX(float) -> setEndX
    389:390:void setEndY(float) -> setEndY
    377:378:void setStartX(float) -> setStartX
    381:382:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    300:300:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    304:307:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    547:549:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    557:564:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    426:430:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    438:446:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    449:449:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    659:659:void <clinit>() -> <clinit>
    692:697:void <init>(float,float,float,float) -> <init>
    658:658:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    658:658:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    658:658:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    658:658:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    658:658:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    658:658:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    658:658:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    658:658:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    701:707:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    722:722:float getBottom() -> getBottom
    710:710:float getLeft() -> getLeft
    718:718:float getRight() -> getRight
    742:742:float getStartAngle() -> getStartAngle
    746:746:float getSweepAngle() -> getSweepAngle
    714:714:float getTop() -> getTop
    738:739:void setBottom(float) -> setBottom
    726:727:void setLeft(float) -> setLeft
    734:735:void setRight(float) -> setRight
    750:751:void setStartAngle(float) -> setStartAngle
    754:755:void setSweepAngle(float) -> setSweepAngle
    730:731:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    578:578:void <init>() -> <init>
    578:578:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    578:578:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    578:578:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    578:578:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    584:589:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    568:571:void <init>() -> <init>
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    406:406:void <clinit>() -> <clinit>
    404:407:void <init>() -> <init>
    411:412:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.Shapeable -> com.google.android.material.shape.Shapeable:
# {"id":"sourceFile","fileName":"Shapeable.java"}
com.google.android.material.sidesheet.RightSheetDelegate -> com.google.android.material.sidesheet.RightSheetDelegate:
# {"id":"sourceFile","fileName":"RightSheetDelegate.java"}
    38:40:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    150:150:int calculateInnerMargin(android.view.ViewGroup$MarginLayoutParams) -> calculateInnerMargin
    130:133:float calculateSlideOffset(int) -> calculateSlideOffset
    76:99:int calculateTargetStateOnViewReleased(android.view.View,float,float) -> calculateTargetStateOnViewReleased
    60:61:int getExpandedOffset() -> getExpandedOffset
    53:53:int getHiddenOffset() -> getHiddenOffset
    125:125:int getOuterEdge(android.view.View) -> getOuterEdge
    45:45:int getSheetEdge() -> getSheetEdge
    68:68:boolean isReleasedCloseToOriginEdge(android.view.View) -> isReleasedCloseToOriginEdge
    115:120:boolean isSettling(android.view.View,int,boolean) -> isSettling
    103:104:boolean isSwipeSignificant(float,float) -> isSwipeSignificant
    109:110:boolean shouldHide(android.view.View,float) -> shouldHide
    139:146:void updateCoplanarSiblingLayoutParams(android.view.ViewGroup$MarginLayoutParams,int,int) -> updateCoplanarSiblingLayoutParams
com.google.android.material.sidesheet.SheetCallback -> com.google.android.material.sidesheet.SheetCallback:
# {"id":"sourceFile","fileName":"SheetCallback.java"}
com.google.android.material.sidesheet.SheetDelegate -> com.google.android.material.sidesheet.SheetDelegate:
# {"id":"sourceFile","fileName":"SheetDelegate.java"}
    29:29:void <init>() -> <init>
com.google.android.material.sidesheet.SheetUtils -> com.google.android.material.sidesheet.SheetUtils:
# {"id":"sourceFile","fileName":"SheetUtils.java"}
    33:33:boolean isSwipeMostlyHorizontal(float,float) -> isSwipeMostlyHorizontal
com.google.android.material.sidesheet.SideSheetBehavior -> com.google.android.material.sidesheet.SideSheetBehavior:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    0:0:void $r8$lambda$BqwTUDu32X3pYkD_jSNGWG9fjsM(com.google.android.material.sidesheet.SideSheetBehavior,int) -> $r8$lambda$BqwTUDu32X3pYkD_jSNGWG9fjsM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$tYSQPZMO83x5k0C9LPAWDL-Rmyo(com.google.android.material.sidesheet.SideSheetBehavior,int,android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> $r8$lambda$tYSQPZMO83x5k0C9LPAWDL-Rmyo
      # {"id":"com.android.tools.r8.synthesized"}
    66:90:void <clinit>() -> <clinit>
    88:693:void <init>() -> <init>
    88:693:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:63:int access$000(com.google.android.material.sidesheet.SideSheetBehavior) -> access$000
    63:63:java.lang.ref.WeakReference access$100(com.google.android.material.sidesheet.SideSheetBehavior) -> access$100
    63:63:com.google.android.material.sidesheet.SheetDelegate access$200(com.google.android.material.sidesheet.SideSheetBehavior) -> access$200
    63:63:void access$300(com.google.android.material.sidesheet.SideSheetBehavior,android.view.View,int) -> access$300
    63:63:boolean access$400(com.google.android.material.sidesheet.SideSheetBehavior) -> access$400
    63:63:void access$500(com.google.android.material.sidesheet.SideSheetBehavior,android.view.View,int,boolean) -> access$500
    63:63:int access$600(com.google.android.material.sidesheet.SideSheetBehavior) -> access$600
    63:63:androidx.customview.widget.ViewDragHelper access$700(com.google.android.material.sidesheet.SideSheetBehavior) -> access$700
    373:387:int calculateCurrentOffset(int,android.view.View) -> calculateCurrentOffset
    473:473:float calculateDragDistance(float,float) -> calculateDragDistance
    812:816:void clearCoplanarSiblingView() -> clearCoplanarSiblingView
    963:963:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    642:657:void createMaterialShapeDrawableIfNeeded(android.content.Context) -> createMaterialShapeDrawableIfNeeded
    753:759:void dispatchOnSlide(android.view.View,int) -> dispatchOnSlide
    343:347:void ensureAccessibilityPaneTitleIsSet(android.view.View) -> ensureAccessibilityPaneTitleIsSet
    256:269:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    268:269:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    359:359:int getChildWidth() -> getChildWidth
    808:808:android.view.View getCoplanarSiblingView() -> getCoplanarSiblingView
    167:167:int getDefaultSheetEdge() -> getDefaultSheetEdge
    481:481:int getExpandedOffset() -> getExpandedOffset
    516:516:float getHideFriction() -> getHideFriction
    520:520:float getHideThreshold() -> getHideThreshold
    367:367:int getInnerMargin() -> getInnerMargin
    678:684:int getOuterEdgeOffsetForState(int) -> getOuterEdgeOffsetForState
    363:363:int getParentWidth() -> getParentWidth
    430:430:int getSignificantVelocityThreshold() -> getSignificantVelocityThreshold
    690:690:androidx.customview.widget.ViewDragHelper getViewDragHelper() -> getViewDragHelper
    465:469:boolean isDraggedFarEnough(android.view.MotionEvent) -> isDraggedFarEnough
    581:582:boolean isLayingOut(android.view.View) -> isLayingOut
    964:965:boolean lambda$createAccessibilityViewCommandForState$1(int,android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> lambda$createAccessibilityViewCommandForState$1
    564:568:void lambda$setState$0(int) -> lambda$setState$0
    350:356:void maybeAssignCoplanarSiblingViewBasedId(androidx.coordinatorlayout.widget.CoordinatorLayout) -> maybeAssignCoplanarSiblingViewBasedId
    206:211:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    215:219:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    393:422:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    277:329:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    229:251:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    195:202:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    189:189:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    436:461:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    957:959:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    625:629:void resetVelocity() -> resetVelocity
    573:578:void runAfterLayout(android.view.View,java.lang.Runnable) -> runAfterLayout
    769:780:void setCoplanarSiblingViewId(int) -> setCoplanarSiblingViewId
    492:493:void setDraggable(boolean) -> setDraggable
    153:163:void setSheetEdge(int) -> setSheetEdge
    550:570:void setState(int) -> setState
    598:622:void setStateInternal(int) -> setStateInternal
    638:638:boolean shouldHandleDraggingWithHelper() -> shouldHandleDraggingWithHelper
    426:426:boolean shouldInterceptTouchEvent(android.view.View) -> shouldInterceptTouchEvent
    825:825:boolean shouldSkipSmoothAnimation() -> shouldSkipSmoothAnimation
    668:675:void startSettling(android.view.View,int,boolean) -> startSettling
    935:953:void updateAccessibilityActions() -> updateAccessibilityActions
    335:339:void updateSheetVisibility(android.view.View) -> updateSheetVisibility
com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda0 -> com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.f$0 -> f$0
    int com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.f$1 -> f$1
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda1 -> com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.f$0 -> f$0
    int com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.f$1 -> f$1
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.sidesheet.SideSheetBehavior$1 -> com.google.android.material.sidesheet.SideSheetBehavior$1:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    694:694:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    743:743:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    738:738:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    748:748:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    723:726:void onViewDragStateChanged(int) -> onViewDragStateChanged
    707:719:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    731:734:void onViewReleased(android.view.View,float,float) -> onViewReleased
    698:701:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.sidesheet.SideSheetBehavior$SavedState -> com.google.android.material.sidesheet.SideSheetBehavior$SavedState:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    892:892:void <clinit>() -> <clinit>
    876:879:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    882:884:void <init>(android.os.Parcelable,com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    888:890:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.sidesheet.SideSheetBehavior$SavedState$1 -> com.google.android.material.sidesheet.SideSheetBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    893:893:void <init>() -> <init>
    893:893:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    893:893:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    897:897:com.google.android.material.sidesheet.SideSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    903:903:com.google.android.material.sidesheet.SideSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    893:893:java.lang.Object[] newArray(int) -> newArray
    909:909:com.google.android.material.sidesheet.SideSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker -> com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    0:0:void $r8$lambda$cX4rrUBRviTi9l99dj1EmckVARg(com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker) -> $r8$lambda$cX4rrUBRviTi9l99dj1EmckVARg
      # {"id":"com.android.tools.r8.synthesized"}
    840:844:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    856:864:void continueSettlingToState(int) -> continueSettlingToState
    846:853:void lambda$new$0() -> lambda$new$0
com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$ExternalSyntheticLambda0 -> com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.f$0 -> f$0
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    220:272:void <clinit>() -> <clinit>
    101:101:com.google.android.material.shape.MaterialShapeDrawable access$1900(int,com.google.android.material.shape.ShapeAppearanceModel) -> access$1900
    101:101:android.graphics.drawable.GradientDrawable access$2000(int,android.content.res.Resources) -> access$2000
    1389:1394:android.graphics.drawable.GradientDrawable createGradientDrawableBackground(int,android.content.res.Resources) -> createGradientDrawableBackground
    1381:1383:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(int,com.google.android.material.shape.ShapeAppearanceModel) -> createMaterialShapeDrawableBackground
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    257:257:void <init>() -> <init>
    260:268:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1401:1403:void <init>() -> <init>
    1412:1412:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1418:1419:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1429:1433:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1441:1441:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1446:1461:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1155:1155:void <clinit>() -> <clinit>
    1183:1220:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1359:1373:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    1331:1331:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1319:1319:int getAnimationMode() -> getAnimationMode
    1327:1327:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1339:1339:int getMaxInlineActionWidth() -> getMaxInlineActionWidth
    1335:1335:int getMaxWidth() -> getMaxWidth
    1288:1293:void onAttachedToWindow() -> onAttachedToWindow
    1297:1301:void onDetachedFromWindow() -> onDetachedFromWindow
    1280:1284:void onLayout(boolean,int,int,int,int) -> onLayout
    1271:1276:void onMeasure(int,int) -> onMeasure
    1323:1324:void setAnimationMode(int) -> setAnimationMode
    1224:1225:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    1229:1235:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1239:1248:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    1252:1260:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1349:1350:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
    1305:1315:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    1265:1267:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1353:1355:void updateOriginalMargins(android.view.ViewGroup$MarginLayoutParams) -> updateOriginalMargins
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1156:1156:void <init>() -> <init>
    1161:1161:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
# {"id":"sourceFile","fileName":"Snackbar.java"}
    508:509:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    513:528:void onMeasure(int,int) -> onMeasure
    501:501:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    501:501:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    501:501:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    501:501:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    501:501:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    501:501:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
# {"id":"sourceFile","fileName":"SnackbarContentLayout.java"}
    52:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:72:android.widget.Button getActionView() -> getActionView
    68:68:android.widget.TextView getMessageView() -> getMessageView
    62:65:void onFinishInflate() -> onFinishInflate
    87:120:void onMeasure(int,int) -> onMeasure
    178:179:void setMaxInlineActionWidth(int) -> setMaxInlineActionWidth
    139:149:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    124:134:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
    49:66:void <init>() -> <init>
    205:212:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:245:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    216:216:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    145:151:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:160:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:62:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$Callback -> com.google.android.material.snackbar.SnackbarManager$Callback:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
# {"id":"sourceFile","fileName":"ExtendableSavedState.java"}
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:43:void <init>(android.os.Parcelable) -> <init>
    46:60:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:85:java.lang.String toString() -> toString
    64:79:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
# {"id":"sourceFile","fileName":"ExtendableSavedState.java"}
    92:92:void <init>() -> <init>
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
# {"id":"sourceFile","fileName":"ClearTextEndIconDelegate.java"}
    0:0:void $r8$lambda$Abvjkt9KmYeJvJ7_vHGwZ-xlmVA(com.google.android.material.textfield.ClearTextEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$Abvjkt9KmYeJvJ7_vHGwZ-xlmVA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$nI62G89ozUOuRnvjwrP0IYYoGyA(com.google.android.material.textfield.ClearTextEndIconDelegate,android.view.View) -> $r8$lambda$nI62G89ozUOuRnvjwrP0IYYoGyA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$tQahUbi3HJfsEhbpmdlHLxzqxv4(com.google.android.material.textfield.ClearTextEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$tQahUbi3HJfsEhbpmdlHLxzqxv4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ycpHjhDocuatJlJAPKZepsuRHG8(com.google.android.material.textfield.ClearTextEndIconDelegate,android.view.View,boolean) -> $r8$lambda$ycpHjhDocuatJlJAPKZepsuRHG8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ypc1RVfDDE8vNgAyrsAm7Dre9Zs(com.google.android.material.textfield.ClearTextEndIconDelegate) -> $r8$lambda$ypc1RVfDDE8vNgAyrsAm7Dre9Zs
      # {"id":"com.android.tools.r8.synthesized"}
    49:84:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    131:135:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    148:162:void animateIcon(boolean) -> animateIcon
    187:195:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    107:107:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    102:102:int getIconDrawableResId() -> getIconDrawableResId
    139:139:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    120:120:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    144:144:android.view.View$OnFocusChangeListener getOnIconViewFocusChangeListener() -> getOnIconViewFocusChangeListener
    199:207:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    165:184:void initAnimators() -> initAnimators
    191:193:void lambda$getAlphaAnimator$3(android.animation.ValueAnimator) -> lambda$getAlphaAnimator$3
    203:206:void lambda$getScaleAnimator$4(android.animation.ValueAnimator) -> lambda$getScaleAnimator$4
    50:58:void lambda$new$0(android.view.View) -> lambda$new$0
    61:61:void lambda$new$1(android.view.View,boolean) -> lambda$new$1
    96:96:void lambda$tearDown$2() -> lambda$tearDown$2
    125:127:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    112:116:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    88:89:void setUp() -> setUp
    211:213:boolean shouldBeVisible() -> shouldBeVisible
    93:98:void tearDown() -> tearDown
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.onFocusChange(android.view.View,boolean) -> onFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
# {"id":"sourceFile","fileName":"ClearTextEndIconDelegate.java"}
    170:170:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    173:174:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
# {"id":"sourceFile","fileName":"ClearTextEndIconDelegate.java"}
    178:178:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    181:182:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
# {"id":"sourceFile","fileName":"CustomEndIconDelegate.java"}
    31:32:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    36:37:void setUp() -> setUp
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
# {"id":"sourceFile","fileName":"CutoutDrawable.java"}
    41:41:void <init>(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState,com.google.android.material.textfield.CutoutDrawable$1) -> <init>
    57:59:void <init>(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState) -> <init>
    41:41:com.google.android.material.textfield.CutoutDrawable access$400(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState) -> access$400
    45:46:com.google.android.material.textfield.CutoutDrawable create(com.google.android.material.shape.ShapeAppearanceModel) -> create
    51:52:com.google.android.material.textfield.CutoutDrawable create(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState) -> create
    69:69:boolean hasCutout() -> hasCutout
    64:65:android.graphics.drawable.Drawable mutate() -> mutate
    90:91:void removeCutout() -> removeCutout
    75:82:void setCutout(float,float,float,float) -> setCutout
    85:86:void setCutout(android.graphics.RectF) -> setCutout
com.google.android.material.textfield.CutoutDrawable$1 -> com.google.android.material.textfield.CutoutDrawable$1:
# {"id":"sourceFile","fileName":"CutoutDrawable.java"}
com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState -> com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState:
# {"id":"sourceFile","fileName":"CutoutDrawable.java"}
    186:186:void <init>(com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,com.google.android.material.textfield.CutoutDrawable$1) -> <init>
    186:186:void <init>(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState,com.google.android.material.textfield.CutoutDrawable$1) -> <init>
    191:193:void <init>(com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> <init>
    196:198:void <init>(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState) -> <init>
    186:186:android.graphics.RectF access$200(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState) -> access$200
    203:206:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.textfield.CutoutDrawable$ImplApi18 -> com.google.android.material.textfield.CutoutDrawable$ImplApi18:
# {"id":"sourceFile","fileName":"CutoutDrawable.java"}
    96:97:void <init>(com.google.android.material.textfield.CutoutDrawable$CutoutDrawableState) -> <init>
    101:114:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
# {"id":"sourceFile","fileName":"DropdownMenuEndIconDelegate.java"}
    0:0:void $r8$lambda$4SBpO57tjhDSopV0DemkySdxojY(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$4SBpO57tjhDSopV0DemkySdxojY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$BqmxB1OD2-UBtyLLYrjkb1pVKko(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View,android.view.MotionEvent) -> $r8$lambda$BqmxB1OD2-UBtyLLYrjkb1pVKko
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$CCm9KkEwkNKH7i3YuOdE94QyO7w(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> $r8$lambda$CCm9KkEwkNKH7i3YuOdE94QyO7w
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$GC4Z4aSLx1o4GNefaOGyXn6tdak(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View) -> $r8$lambda$GC4Z4aSLx1o4GNefaOGyXn6tdak
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$Gy89nJjcMrMnAKlMjFZkWRzwff0(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> $r8$lambda$Gy89nJjcMrMnAKlMjFZkWRzwff0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$az2bGAstjYQVJ0xTZU5to9JFwf8(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> $r8$lambda$az2bGAstjYQVJ0xTZU5to9JFwf8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$s0Go8aDJW6wdKEyjtVLy3FzDAsw(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View,boolean) -> $r8$lambda$s0Go8aDJW6wdKEyjtVLy3FzDAsw
      # {"id":"com.android.tools.r8.synthesized"}
    59:59:void <clinit>() -> <clinit>
    70:115:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    56:56:android.animation.ValueAnimator access$000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$000
    203:213:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    309:315:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    345:353:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    151:151:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    146:146:int getIconDrawableResId() -> getIconDrawableResId
    217:217:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    186:186:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    139:139:androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener getTouchExplorationStateChangeListener() -> getTouchExplorationStateChangeListener
    332:342:void initAnimators() -> initAnimators
    181:181:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    303:304:boolean isDropdownPopupActive() -> isDropdownPopupActive
    166:166:boolean isIconActivable() -> isIconActivable
    171:171:boolean isIconActivated() -> isIconActivated
    156:156:boolean isIconCheckable() -> isIconCheckable
    161:161:boolean isIconChecked() -> isIconChecked
    209:212:void lambda$afterEditTextChanged$3() -> lambda$afterEditTextChanged$3
    349:351:void lambda$getAlphaAnimator$6(android.animation.ValueAnimator) -> lambda$getAlphaAnimator$6
    70:70:void lambda$new$0(android.view.View) -> lambda$new$0
    73:79:void lambda$new$1(android.view.View,boolean) -> lambda$new$1
    83:88:void lambda$new$2(boolean) -> lambda$new$2
    284:291:boolean lambda$setUpDropdownShowHideBehavior$4(android.view.View,android.view.MotionEvent) -> lambda$setUpDropdownShowHideBehavior$4
    295:297:void lambda$setUpDropdownShowHideBehavior$5() -> lambda$setUpDropdownShowHideBehavior$5
    191:198:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    224:232:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:252:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    324:329:void setEndIconChecked(boolean) -> setEndIconChecked
    119:122:void setUp() -> setUp
    283:300:void setUpDropdownShowHideBehavior() -> setUpDropdownShowHideBehavior
    176:176:boolean shouldTintIconOnError() -> shouldTintIconOnError
    255:277:void showHideDropdown() -> showHideDropdown
    128:135:void tearDown() -> tearDown
    319:321:void updateDropdownPopupDirty() -> updateDropdownPopupDirty
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.onFocusChange(android.view.View,boolean) -> onFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.onTouch(android.view.View,android.view.MotionEvent) -> onTouch
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.onDismiss() -> onDismiss
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
# {"id":"sourceFile","fileName":"DropdownMenuEndIconDelegate.java"}
    335:335:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    338:340:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.EditTextUtils -> com.google.android.material.textfield.EditTextUtils:
# {"id":"sourceFile","fileName":"EditTextUtils.java"}
    27:27:boolean isEditable(android.widget.EditText) -> isEditable
com.google.android.material.textfield.EndCompoundLayout -> com.google.android.material.textfield.EndCompoundLayout:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    96:201:void <init>(com.google.android.material.textfield.TextInputLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    84:84:android.widget.EditText access$000(com.google.android.material.textfield.EndCompoundLayout) -> access$000
    84:84:android.widget.EditText access$002(com.google.android.material.textfield.EndCompoundLayout,android.widget.EditText) -> access$002
    84:84:android.text.TextWatcher access$100(com.google.android.material.textfield.EndCompoundLayout) -> access$100
    84:84:void access$200(com.google.android.material.textfield.EndCompoundLayout,com.google.android.material.textfield.EndIconDelegate) -> access$200
    84:84:void access$300(com.google.android.material.textfield.EndCompoundLayout) -> access$300
    84:84:void access$400(com.google.android.material.textfield.EndCompoundLayout) -> access$400
    426:432:void addTouchExplorationStateChangeListenerIfNeeded() -> addTouchExplorationStateChangeListenerIfNeeded
    512:515:void checkEndIcon() -> checkEndIcon
    205:215:com.google.android.material.internal.CheckableImageButton createIconView(android.view.ViewGroup,android.view.LayoutInflater,int) -> createIconView
    780:783:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    742:747:com.google.android.material.internal.CheckableImageButton getCurrentEndIconView() -> getCurrentEndIconView
    546:546:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    351:351:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    531:531:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    575:575:int getEndIconMinSize() -> getEndIconMinSize
    356:356:int getEndIconMode() -> getEndIconMode
    585:585:android.widget.ImageView$ScaleType getEndIconScaleType() -> getEndIconScaleType
    347:347:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    325:325:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    442:443:int getIconResId(com.google.android.material.textfield.EndIconDelegate) -> getIconResId
    657:657:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    652:652:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    616:616:java.lang.CharSequence getSuffixText() -> getSuffixText
    629:629:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    605:605:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    601:601:boolean hasEndIcon() -> hasEndIcon
    243:291:void initEndIconView(androidx.appcompat.widget.TintTypedArray) -> initEndIconView
    219:239:void initErrorIconView(androidx.appcompat.widget.TintTypedArray) -> initErrorIconView
    295:311:void initSuffixTextView(androidx.appcompat.widget.TintTypedArray) -> initSuffixTextView
    508:508:boolean isEndIconChecked() -> isEndIconChecked
    488:488:boolean isEndIconVisible() -> isEndIconVisible
    752:752:boolean isErrorIconVisible() -> isErrorIconVisible
    694:696:void onHintStateChanged(boolean) -> onHintStateChanged
    699:708:void onTextInputBoxStateUpdated() -> onTextInputBoxStateUpdated
    496:497:void refreshEndIconDrawableState() -> refreshEndIconDrawableState
    475:476:void refreshErrorIconDrawableState() -> refreshErrorIconDrawableState
    391:410:void refreshIconState(boolean) -> refreshIconState
    435:439:void removeTouchExplorationStateChangeListenerIfNeeded() -> removeTouchExplorationStateChangeListenerIfNeeded
    492:493:void setEndIconActivated(boolean) -> setEndIconActivated
    500:501:void setEndIconCheckable(boolean) -> setEndIconCheckable
    535:536:void setEndIconContentDescription(int) -> setEndIconContentDescription
    539:542:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    518:519:void setEndIconDrawable(int) -> setEndIconDrawable
    522:527:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    564:572:void setEndIconMinSize(int) -> setEndIconMinSize
    360:388:void setEndIconMode(int) -> setEndIconMode
    447:448:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    452:454:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    579:582:void setEndIconScaleType(android.widget.ImageView$ScaleType) -> setEndIconScaleType
    550:554:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    557:561:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    479:485:void setEndIconVisible(boolean) -> setEndIconVisible
    314:316:void setErrorIconDrawable(int) -> setErrorIconDrawable
    319:322:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    343:344:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    458:460:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    329:333:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    336:340:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    463:472:void setOnFocusChangeListenersIfNeeded(com.google.android.material.textfield.EndIconDelegate) -> setOnFocusChangeListenersIfNeeded
    642:644:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    647:648:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    633:635:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    638:639:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    665:672:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    675:677:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    680:682:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    609:612:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    620:621:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    624:625:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    413:417:void setUpDelegate(com.google.android.material.textfield.EndIconDelegate) -> setUpDelegate
    420:423:void tearDownDelegate(com.google.android.material.textfield.EndIconDelegate) -> tearDownDelegate
    786:796:void tintEndIconOnError(boolean) -> tintEndIconOnError
    770:777:void updateEndLayoutVisibility() -> updateEndLayoutVisibility
    756:766:void updateErrorIconVisibility() -> updateErrorIconVisibility
    724:738:void updateSuffixTextViewPadding() -> updateSuffixTextViewPadding
    711:721:void updateSuffixTextVisibility() -> updateSuffixTextVisibility
com.google.android.material.textfield.EndCompoundLayout$1 -> com.google.android.material.textfield.EndCompoundLayout$1:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    115:115:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    123:124:void afterTextChanged(android.text.Editable) -> afterTextChanged
    118:119:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.google.android.material.textfield.EndCompoundLayout$2 -> com.google.android.material.textfield.EndCompoundLayout$2:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    128:128:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    131:147:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.EndCompoundLayout$3 -> com.google.android.material.textfield.EndCompoundLayout$3:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    190:190:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    193:194:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    198:199:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates -> com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    799:810:void <init>(com.google.android.material.textfield.EndCompoundLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    798:798:int access$500(com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates) -> access$500
    822:834:com.google.android.material.textfield.EndIconDelegate create(int) -> create
    813:818:com.google.android.material.textfield.EndIconDelegate get(int) -> get
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
# {"id":"sourceFile","fileName":"EndIconDelegate.java"}
    48:53:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    180:180:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    173:173:void beforeEditTextChanged(java.lang.CharSequence,int,int,int) -> beforeEditTextChanged
    71:71:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    65:65:int getIconDrawableResId() -> getIconDrawableResId
    146:146:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    138:138:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    154:154:android.view.View$OnFocusChangeListener getOnIconViewFocusChangeListener() -> getOnIconViewFocusChangeListener
    162:162:androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener getTouchExplorationStateChangeListener() -> getTouchExplorationStateChangeListener
    122:122:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    95:95:boolean isIconActivable() -> isIconActivable
    105:105:boolean isIconActivated() -> isIconActivated
    80:80:boolean isIconCheckable() -> isIconCheckable
    88:88:boolean isIconChecked() -> isIconChecked
    166:166:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    186:186:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    192:192:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    131:131:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    195:196:void refreshIconState() -> refreshIconState
    56:56:void setUp() -> setUp
    113:113:boolean shouldTintIconOnError() -> shouldTintIconOnError
    60:60:void tearDown() -> tearDown
com.google.android.material.textfield.IconHelper -> com.google.android.material.textfield.IconHelper:
# {"id":"sourceFile","fileName":"IconHelper.java"}
    81:101:void applyIconTint(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> applyIconTint
    161:175:android.widget.ImageView$ScaleType convertScaleType(int) -> convertScaleType
    127:135:int[] mergeIconState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton) -> mergeIconState
    110:122:void refreshIconDrawableState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList) -> refreshIconDrawableState
    139:147:void setCompatRippleBackgroundIfNeeded(com.google.android.material.internal.CheckableImageButton) -> setCompatRippleBackgroundIfNeeded
    58:70:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    151:153:void setIconMinSize(com.google.android.material.internal.CheckableImageButton,int) -> setIconMinSize
    46:48:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    52:54:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    157:158:void setIconScaleType(com.google.android.material.internal.CheckableImageButton,android.widget.ImageView$ScaleType) -> setIconScaleType
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
# {"id":"sourceFile","fileName":"IndicatorViewController.java"}
    134:161:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    67:67:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    67:67:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    67:67:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    67:67:com.google.android.material.textfield.TextInputLayout access$300(com.google.android.material.textfield.IndicatorViewController) -> access$300
    437:462:void addIndicator(android.widget.TextView,int) -> addIndicator
    402:423:void adjustIndicatorPadding() -> adjustIndicatorPadding
    426:426:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    379:382:void cancelCaptionAnimator() -> cancelCaptionAnimator
    339:358:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    361:367:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    371:375:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    584:584:boolean errorShouldBeShown() -> errorShouldBeShown
    390:398:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    675:675:int getErrorAccessibilityLiveRegion() -> getErrorAccessibilityLiveRegion
    671:671:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    609:609:java.lang.CharSequence getErrorText() -> getErrorText
    633:633:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    638:638:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    613:613:java.lang.CharSequence getHelperText() -> getHelperText
    576:576:android.view.View getHelperTextView() -> getHelperTextView
    680:680:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    431:433:int getIndicatorPadding(boolean,int,int) -> getIndicatorPadding
    201:215:void hideError() -> hideError
    177:185:void hideHelperText() -> hideHelperText
    588:590:boolean isCaptionStateError(int) -> isCaptionStateError
    385:385:boolean isCaptionView(int) -> isCaptionView
    519:519:boolean isErrorEnabled() -> isErrorEnabled
    523:523:boolean isHelperTextEnabled() -> isHelperTextEnabled
    465:476:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    306:329:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    663:667:void setErrorAccessibilityLiveRegion(int) -> setErrorAccessibilityLiveRegion
    656:660:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    486:516:void setErrorEnabled(boolean) -> setErrorEnabled
    649:653:void setErrorTextAppearance(int) -> setErrorTextAppearance
    642:646:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    696:700:void setHelperTextAppearance(int) -> setHelperTextAppearance
    528:572:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    689:693:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    626:629:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    618:623:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    479:482:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    227:231:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    188:198:void showError(java.lang.CharSequence) -> showError
    164:174:void showHelper(java.lang.CharSequence) -> showHelper
    239:302:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
# {"id":"sourceFile","fileName":"IndicatorViewController.java"}
    269:269:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    272:285:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    289:293:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.IndicatorViewController$2 -> com.google.android.material.textfield.IndicatorViewController$2:
# {"id":"sourceFile","fileName":"IndicatorViewController.java"}
    552:552:void <init>(com.google.android.material.textfield.IndicatorViewController) -> <init>
    556:561:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.MaterialAutoCompleteTextView -> com.google.android.material.textfield.MaterialAutoCompleteTextView:
# {"id":"sourceFile","fileName":"MaterialAutoCompleteTextView.java"}
    89:90:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:173:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:71:androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$000
    71:71:void access$100(com.google.android.material.textfield.MaterialAutoCompleteTextView,java.lang.Object) -> access$100
    71:71:int access$200(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$200
    71:71:android.content.res.ColorStateList access$300(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$300
    186:191:void dismissDropDown() -> dismissDropDown
    431:438:com.google.android.material.textfield.TextInputLayout findTextInputLayoutAncestor() -> findTextInputLayoutAncestor
    352:356:java.lang.CharSequence getHint() -> getHint
    322:322:float getPopupElevation() -> getPopupElevation
    274:274:int getSimpleItemSelectedColor() -> getSimpleItemSelectedColor
    304:304:android.content.res.ColorStateList getSimpleItemSelectedRippleColor() -> getSimpleItemSelectedRippleColor
    204:204:boolean isTouchExplorationEnabled() -> isTouchExplorationEnabled
    376:419:int measureContentWidth() -> measureContentWidth
    327:339:void onAttachedToWindow() -> onAttachedToWindow
    343:345:void onDetachedFromWindow() -> onDetachedFromWindow
    423:427:void onInputTypeChanged() -> onInputTypeChanged
    361:373:void onMeasure(int,int) -> onMeasure
    195:201:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    209:211:void setAdapter(android.widget.ListAdapter) -> setAdapter
    309:313:void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable) -> setDropDownBackgroundDrawable
    221:223:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    215:217:void setRawInputType(int) -> setRawInputType
    260:264:void setSimpleItemSelectedColor(int) -> setSimpleItemSelectedColor
    289:293:void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList) -> setSimpleItemSelectedRippleColor
    234:235:void setSimpleItems(int) -> setSimpleItems
    246:247:void setSimpleItems(java.lang.String[]) -> setSimpleItems
    177:182:void showDropDown() -> showDropDown
    443:451:void updateText(java.lang.Object) -> updateText
com.google.android.material.textfield.MaterialAutoCompleteTextView$1 -> com.google.android.material.textfield.MaterialAutoCompleteTextView$1:
# {"id":"sourceFile","fileName":"MaterialAutoCompleteTextView.java"}
    144:144:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> <init>
    148:164:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.textfield.MaterialAutoCompleteTextView$MaterialArrayAdapter -> com.google.android.material.textfield.MaterialAutoCompleteTextView$MaterialArrayAdapter:
# {"id":"sourceFile","fileName":"MaterialAutoCompleteTextView.java"}
    460:463:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView,android.content.Context,int,java.lang.String[]) -> <init>
    509:530:android.content.res.ColorStateList createItemSelectedColorStateList() -> createItemSelectedColorStateList
    485:503:android.graphics.drawable.Drawable getSelectedItemDrawable() -> getSelectedItemDrawable
    472:480:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    551:551:boolean hasSelectedColor() -> hasSelectedColor
    555:555:boolean hasSelectedRippleColor() -> hasSelectedRippleColor
    534:547:android.content.res.ColorStateList sanitizeDropdownItemSelectedRippleColor() -> sanitizeDropdownItemSelectedRippleColor
    466:468:void updateSelectedItemColorStateList() -> updateSelectedItemColorStateList
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
# {"id":"sourceFile","fileName":"NoEndIconDelegate.java"}
    26:27:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
# {"id":"sourceFile","fileName":"PasswordToggleEndIconDelegate.java"}
    0:0:void $r8$lambda$twlq6SYcv_LydKclcBcdQZ6NHKY(com.google.android.material.textfield.PasswordToggleEndIconDelegate,android.view.View) -> $r8$lambda$twlq6SYcv_LydKclcBcdQZ6NHKY
      # {"id":"com.android.tools.r8.synthesized"}
    32:61:void <init>(com.google.android.material.textfield.EndCompoundLayout,int) -> <init>
    115:116:void beforeEditTextChanged(java.lang.CharSequence,int,int,int) -> beforeEditTextChanged
    88:88:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    82:82:int getIconDrawableResId() -> getIconDrawableResId
    104:104:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    119:120:boolean hasPasswordTransformation() -> hasPasswordTransformation
    93:93:boolean isIconCheckable() -> isIconCheckable
    99:99:boolean isIconChecked() -> isIconChecked
    124:128:boolean isInputTypePassword(android.widget.EditText) -> isInputTypePassword
    38:53:void lambda$new$0(android.view.View) -> lambda$new$0
    109:111:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    65:69:void setUp() -> setUp
    73:77:void tearDown() -> tearDown
com.google.android.material.textfield.PasswordToggleEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.PasswordToggleEndIconDelegate com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.<init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.StartCompoundLayout -> com.google.android.material.textfield.StartCompoundLayout:
# {"id":"sourceFile","fileName":"StartCompoundLayout.java"}
    80:105:void <init>(com.google.android.material.textfield.TextInputLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    188:188:java.lang.CharSequence getPrefixText() -> getPrefixText
    197:197:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    171:171:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    265:265:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    220:220:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    293:293:int getStartIconMinSize() -> getStartIconMinSize
    303:303:android.widget.ImageView$ScaleType getStartIconScaleType() -> getStartIconScaleType
    148:161:void initPrefixTextView(androidx.appcompat.widget.TintTypedArray) -> initPrefixTextView
    109:145:void initStartIconView(androidx.appcompat.widget.TintTypedArray) -> initStartIconView
    242:242:boolean isStartIconVisible() -> isStartIconVisible
    332:334:void onHintStateChanged(boolean) -> onHintStateChanged
    165:167:void onMeasure(int,int) -> onMeasure
    246:247:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    175:178:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    201:202:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    192:193:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    250:251:void setStartIconCheckable(boolean) -> setStartIconCheckable
    258:261:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    205:216:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    283:290:void setStartIconMinSize(int) -> setStartIconMinSize
    224:225:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    229:231:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    297:299:void setStartIconScaleType(android.widget.ImageView$ScaleType) -> setStartIconScaleType
    269:273:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    276:280:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    234:239:void setStartIconVisible(boolean) -> setStartIconVisible
    307:313:void setupAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> setupAccessibilityNodeInfo
    316:329:void updatePrefixTextViewPadding() -> updatePrefixTextViewPadding
    338:346:void updateVisibility() -> updateVisibility
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
# {"id":"sourceFile","fileName":"TextInputEditText.java"}
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:167:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    171:174:boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point) -> getGlobalVisibleRect
    104:108:java.lang.CharSequence getHint() -> getHint
    137:138:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    125:132:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    85:97:void onAttachedToWindow() -> onAttachedToWindow
    114:120:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    195:203:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    179:189:boolean requestRectangleOnScreen(android.graphics.Rect) -> requestRectangleOnScreen
    145:146:void setTextInputLayoutFocusedRectEnabled(boolean) -> setTextInputLayoutFocusedRectEnabled
    156:156:boolean shouldUseTextInputLayoutFocusedRect(com.google.android.material.textfield.TextInputLayout) -> shouldUseTextInputLayoutFocusedRect
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    0:0:int $r8$lambda$ae-b_REtQE9J8sctylgQBMSu39c(android.text.Editable) -> $r8$lambda$ae-b_REtQE9J8sctylgQBMSu39c
      # {"id":"com.android.tools.r8.synthesized"}
    196:207:void <clinit>() -> <clinit>
    451:452:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    220:704:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    194:194:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    194:194:boolean access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    194:194:void access$200(com.google.android.material.textfield.TextInputLayout,android.text.Editable) -> access$200
    194:194:com.google.android.material.textfield.EndCompoundLayout access$300(com.google.android.material.textfield.TextInputLayout) -> access$300
    194:194:com.google.android.material.textfield.StartCompoundLayout access$400(com.google.android.material.textfield.TextInputLayout) -> access$400
    194:194:com.google.android.material.textfield.IndicatorViewController access$500(com.google.android.material.textfield.TextInputLayout) -> access$500
    3741:3745:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    2474:2478:void addPlaceholderTextView() -> addPlaceholderTextView
    709:726:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    967:990:void adjustFilledEditTextPaddingForLargeFont() -> adjustFilledEditTextPaddingForLargeFont
    4358:4380:void animateToExpansionFraction(float) -> animateToExpansionFraction
    2860:2877:void applyBoxAttributes() -> applyBoxAttributes
    2881:2895:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    4183:4185:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    785:809:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    2851:2856:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    2758:2781:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    2830:2836:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    2822:2825:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    2805:2818:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    2741:2752:int calculateLabelMarginTop() -> calculateLabelMarginTop
    2898:2898:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    2902:2902:boolean canDrawStroke() -> canDrawStroke
    4177:4180:void closeCutout() -> closeCutout
    4127:4143:void collapseHint(boolean) -> collapseHint
    2432:2437:androidx.transition.Fade createPlaceholderFadeTransition() -> createPlaceholderFadeTransition
    4146:4146:boolean cutoutEnabled() -> cutoutEnabled
    3944:3947:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    1429:1465:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    3032:3035:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    4084:4087:void draw(android.graphics.Canvas) -> draw
    4102:4124:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    4096:4099:void drawHint(android.graphics.Canvas) -> drawHint
    4194:4224:void drawableStateChanged() -> drawableStateChanged
    4338:4354:void expandHint(boolean) -> expandHint
    1583:1586:int getBaseline() -> getBaseline
    730:733:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    1227:1227:int getBoxBackgroundColor() -> getBoxBackgroundColor
    769:769:int getBoxBackgroundMode() -> getBoxBackgroundMode
    1012:1012:int getBoxCollapsedPaddingTop() -> getBoxCollapsedPaddingTop
    1364:1366:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    1376:1378:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    1352:1354:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    1340:1342:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    1110:1110:int getBoxStrokeColor() -> getBoxStrokeColor
    1160:1160:android.content.res.ColorStateList getBoxStrokeErrorColor() -> getBoxStrokeErrorColor
    1048:1048:int getBoxStrokeWidth() -> getBoxStrokeWidth
    1085:1085:int getBoxStrokeWidthFocused() -> getBoxStrokeWidthFocused
    2686:2686:int getCounterMaxLength() -> getCounterMaxLength
    2695:2698:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    2286:2286:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    2243:2243:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1944:1944:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    926:949:com.google.android.material.shape.MaterialShapeDrawable getDropDownMaterialShapeDrawable(boolean) -> getDropDownMaterialShapeDrawable
    1638:1638:android.widget.EditText getEditText() -> getEditText
    825:838:android.graphics.drawable.Drawable getEditTextBoxBackground() -> getEditTextBoxBackground
    3673:3673:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    3567:3567:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    3589:3589:int getEndIconMinSize() -> getEndIconMinSize
    3416:3416:int getEndIconMode() -> getEndIconMode
    3635:3635:android.widget.ImageView$ScaleType getEndIconScaleType() -> getEndIconScaleType
    3940:3940:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    3045:3045:java.lang.CharSequence getError() -> getError
    2095:2095:int getErrorAccessibilityLiveRegion() -> getErrorAccessibilityLiveRegion
    2076:2076:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    1975:1975:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    2153:2153:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    873:887:android.graphics.drawable.Drawable getFilledBoxBackgroundWithRipple(com.google.android.material.shape.MaterialShapeDrawable,int,int,int[][]) -> getFilledBoxBackgroundWithRipple
    3057:3059:java.lang.CharSequence getHelperText() -> getHelperText
    2052:2052:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1816:1816:java.lang.CharSequence getHint() -> getHint
    4398:4398:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    4393:4393:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1925:1925:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2786:2791:int getLabelLeftBoundAlightWithPrefix(int,boolean) -> getLabelLeftBoundAlightWithPrefix
    2795:2800:int getLabelRightBoundAlignedWithSuffix(int,boolean) -> getLabelRightBoundAlignedWithSuffix
    1423:1423:com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter() -> getLengthCounter
    1688:1688:int getMaxEms() -> getMaxEms
    1770:1770:int getMaxWidth() -> getMaxWidth
    1663:1663:int getMinEms() -> getMinEms
    1729:1729:int getMinWidth() -> getMinWidth
    915:922:android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground() -> getOrCreateFilledDropDownMenuBackground
    908:911:android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground() -> getOrCreateOutlinedDropDownMenuBackground
    844:865:android.graphics.drawable.Drawable getOutlinedBoxBackgroundWithRipple(android.content.Context,com.google.android.material.shape.MaterialShapeDrawable,int,int[][]) -> getOutlinedBoxBackgroundWithRipple
    3848:3848:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    3834:3834:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2412:2412:java.lang.CharSequence getPlaceholderText() -> getPlaceholderText
    2530:2530:int getPlaceholderTextAppearance() -> getPlaceholderTextAppearance
    2507:2507:android.content.res.ColorStateList getPlaceholderTextColor() -> getPlaceholderTextColor
    2553:2553:java.lang.CharSequence getPrefixText() -> getPrefixText
    2585:2585:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    2566:2566:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    1250:1250:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    3364:3364:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    3231:3231:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    3253:3253:int getStartIconMinSize() -> getStartIconMinSize
    3612:3612:android.widget.ImageView$ScaleType getStartIconScaleType() -> getStartIconScaleType
    2617:2617:java.lang.CharSequence getSuffixText() -> getSuffixText
    2649:2649:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    2630:2630:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    1405:1405:android.graphics.Typeface getTypeface() -> getTypeface
    2466:2471:void hidePlaceholderText() -> hidePlaceholderText
    3488:3488:boolean isEndIconVisible() -> isEndIconVisible
    1999:1999:boolean isErrorEnabled() -> isErrorEnabled
    2046:2046:boolean isHelperTextEnabled() -> isHelperTextEnabled
    4383:4383:boolean isHintExpanded() -> isHintExpanded
    1881:1881:boolean isProvidingHint() -> isProvidingHint
    2840:2841:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    244:244:int lambda$new$0(android.text.Editable) -> lambda$new$0
    773:782:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    4091:4093:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    4045:4069:void onLayout(boolean,int,int,int,int) -> onLayout
    3148:3163:void onMeasure(int,int) -> onMeasure
    3010:3028:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3109:3144:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2999:3005:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4150:4167:void openCutout() -> openCutout
    4170:4174:void recalculateCutout() -> recalculateCutout
    2671:2678:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    3303:3304:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    2481:2484:void removePlaceholderTextView() -> removePlaceholderTextView
    1188:1195:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    1173:1174:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    1207:1218:void setBoxBackgroundColorStateList(android.content.res.ColorStateList) -> setBoxBackgroundColorStateList
    752:759:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    1002:1003:void setBoxCollapsedPaddingTop(int) -> setBoxCollapsedPaddingTop
    1260:1268:void setBoxCornerFamily(int) -> setBoxCornerFamily
    1097:1101:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1119:1135:void setBoxStrokeColorStateList(android.content.res.ColorStateList) -> setBoxStrokeColorStateList
    1146:1150:void setBoxStrokeErrorColor(android.content.res.ColorStateList) -> setBoxStrokeErrorColor
    1037:1039:void setBoxStrokeWidth(int) -> setBoxStrokeWidth
    1074:1076:void setBoxStrokeWidthFocused(int) -> setBoxStrokeWidthFocused
    1062:1063:void setBoxStrokeWidthFocusedResource(int) -> setBoxStrokeWidthFocusedResource
    1025:1026:void setBoxStrokeWidthResource(int) -> setBoxStrokeWidthResource
    2183:2203:void setCounterEnabled(boolean) -> setCounterEnabled
    2306:2316:void setCounterMaxLength(int) -> setCounterMaxLength
    2254:2258:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    2270:2274:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    2213:2217:void setCounterTextAppearance(int) -> setCounterTextAppearance
    2228:2232:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1930:1936:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    891:905:void setDropDownMenuBackgroundIfNeeded() -> setDropDownMenuBackgroundIfNeeded
    1469:1565:void setEditText(android.widget.EditText) -> setEditText
    2666:2668:void setEnabled(boolean) -> setEnabled
    3497:3498:void setEndIconActivated(boolean) -> setEndIconActivated
    3519:3520:void setEndIconCheckable(boolean) -> setEndIconCheckable
    3648:3649:void setEndIconContentDescription(int) -> setEndIconContentDescription
    3662:3663:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    3542:3543:void setEndIconDrawable(int) -> setEndIconDrawable
    3556:3557:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    3578:3579:void setEndIconMinSize(int) -> setEndIconMinSize
    3404:3405:void setEndIconMode(int) -> setEndIconMode
    3427:3428:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    3450:3451:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    3623:3624:void setEndIconScaleType(android.widget.ImageView$ScaleType) -> setEndIconScaleType
    3688:3689:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    3700:3701:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    3479:3480:void setEndIconVisible(boolean) -> setEndIconVisible
    2109:2123:void setError(java.lang.CharSequence) -> setError
    2086:2087:void setErrorAccessibilityLiveRegion(int) -> setErrorAccessibilityLiveRegion
    2066:2067:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    1955:1956:void setErrorEnabled(boolean) -> setErrorEnabled
    2132:2133:void setErrorIconDrawable(int) -> setErrorIconDrawable
    2142:2143:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    3438:3439:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    3462:3463:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    2163:2164:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    2174:2175:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    1964:1965:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1969:1970:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    3101:3105:void setExpandedHintEnabled(boolean) -> setExpandedHintEnabled
    2027:2037:void setHelperText(java.lang.CharSequence) -> setHelperText
    1989:1990:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    2010:2011:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1984:1985:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1780:1784:void setHint(java.lang.CharSequence) -> setHint
    1794:1795:void setHint(int) -> setHint
    3079:3080:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1831:1860:void setHintEnabled(boolean) -> setHintEnabled
    1798:1806:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1890:1898:void setHintTextAppearance(int) -> setHintTextAppearance
    1905:1916:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    1414:1415:void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter) -> setLengthCounter
    1675:1679:void setMaxEms(int) -> setMaxEms
    1742:1746:void setMaxWidth(int) -> setMaxWidth
    1758:1759:void setMaxWidthResource(int) -> setMaxWidthResource
    1650:1654:void setMinEms(int) -> setMinEms
    1701:1705:void setMinWidth(int) -> setMinWidth
    1717:1718:void setMinWidthResource(int) -> setMinWidthResource
    3805:3806:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    3821:3822:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    3774:3775:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    3789:3790:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    3874:3875:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    3891:3892:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    3905:3906:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2377:2402:void setPlaceholderText(java.lang.CharSequence) -> setPlaceholderText
    2517:2521:void setPlaceholderTextAppearance(int) -> setPlaceholderTextAppearance
    2492:2498:void setPlaceholderTextColor(android.content.res.ColorStateList) -> setPlaceholderTextColor
    2417:2429:void setPlaceholderTextEnabled(boolean) -> setPlaceholderTextEnabled
    2542:2543:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    2594:2595:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    2575:2576:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    1237:1241:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    3317:3318:void setStartIconCheckable(boolean) -> setStartIconCheckable
    3339:3340:void setStartIconContentDescription(int) -> setStartIconContentDescription
    3353:3354:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    3206:3207:void setStartIconDrawable(int) -> setStartIconDrawable
    3219:3220:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    3242:3243:void setStartIconMinSize(int) -> setStartIconMinSize
    3265:3266:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    3277:3278:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    3600:3601:void setStartIconScaleType(android.widget.ImageView$ScaleType) -> setStartIconScaleType
    3379:3380:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    3391:3392:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    3286:3287:void setStartIconVisible(boolean) -> setStartIconVisible
    2606:2607:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    2658:2659:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    2639:2640:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    2716:2738:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    3933:3936:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    1388:1398:void setTypeface(android.graphics.Typeface) -> setTypeface
    2940:2940:boolean shouldShowError() -> shouldShowError
    4037:4040:boolean shouldUpdateEndDummyDrawable() -> shouldUpdateEndDummyDrawable
    4031:4033:boolean shouldUpdateStartDummyDrawable() -> shouldUpdateStartDummyDrawable
    2454:2463:void showPlaceholderText() -> showPlaceholderText
    953:964:void updateBoxCollapsedPaddingTop() -> updateBoxCollapsedPaddingTop
    4072:4080:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    2319:2322:void updateCounter() -> updateCounter
    2325:2351:void updateCounter(android.text.Editable) -> updateCounter
    2359:2366:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    2702:2712:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    4320:4335:void updateCursorColor(boolean) -> updateCursorColor
    3954:4027:boolean updateDummyDrawables() -> updateDummyDrawables
    2908:2937:void updateEditTextBackground() -> updateEditTextBackground
    812:821:void updateEditTextBoxBackgroundIfNeeded() -> updateEditTextBoxBackgroundIfNeeded
    3166:3179:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    1570:1579:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1591:1592:void updateLabelState(boolean) -> updateLabelState
    1595:1633:void updateLabelState(boolean,boolean) -> updateLabelState
    3183:3194:void updatePlaceholderMeasurementsBasedOnEditText() -> updatePlaceholderMeasurementsBasedOnEditText
    2441:2442:void updatePlaceholderText() -> updatePlaceholderText
    2445:2451:void updatePlaceholderText(android.text.Editable) -> updatePlaceholderText
    4300:4316:void updateStrokeErrorColor(boolean,boolean) -> updateStrokeErrorColor
    4227:4297:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.drawable.Drawable com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$22849781a358ecdf99b482e731626670766b7de8875852c491a4db41de870f96$0.m(android.widget.EditText) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticLambda1 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticLambda$1$c731f40b0043b1db8be68c13833421f1a22aba3e352b73c80e80778290593594$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.textfield.TextInputLayout$$InternalSyntheticLambda$1$c731f40b0043b1db8be68c13833421f1a22aba3e352b73c80e80778290593594$0.countLength(android.text.Editable) -> countLength
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    1509:1509:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1512:1519:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1522:1522:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1525:1525:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    3020:3020:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3023:3024:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    3154:3154:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3157:3158:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    4371:4371:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4374:4375:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    4410:4412:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4417:4475:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4480:4482:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.TextInputLayout$LengthCounter -> com.google.android.material.textfield.TextInputLayout$LengthCounter:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener -> com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener -> com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    2974:2974:void <clinit>() -> <clinit>
    2948:2949:void <init>(android.os.Parcelable) -> <init>
    2952:2955:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2967:2968:java.lang.String toString() -> toString
    2959:2962:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    2975:2975:void <init>() -> <init>
    2975:2975:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2975:2975:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2979:2979:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2985:2985:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2975:2975:java.lang.Object[] newArray(int) -> newArray
    2991:2991:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
# {"id":"sourceFile","fileName":"MaterialTextView.java"}
    83:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    130:142:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    145:145:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    183:189:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    115:127:void initialize(android.util.AttributeSet,int,int) -> initialize
    152:158:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    106:111:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    167:178:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
# {"id":"sourceFile","fileName":"MaterialComponentsViewInflater.java"}
    39:39:void <init>() -> <init>
    68:68:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    43:43:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    49:49:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    55:55:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    61:61:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
com.google.android.material.theme.overlay.MaterialThemeOverlay -> com.google.android.material.theme.overlay.MaterialThemeOverlay:
# {"id":"sourceFile","fileName":"MaterialThemeOverlay.java"}
    48:51:void <clinit>() -> <clinit>
    94:99:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    112:118:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    66:84:android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int) -> wrap
com.google.android.material.timepicker.ChipTextInputComboView -> com.google.android.material.timepicker.ChipTextInputComboView:
# {"id":"sourceFile","fileName":"ChipTextInputComboView.java"}
    66:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:java.lang.String access$100(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence) -> access$100
    53:53:com.google.android.material.chip.Chip access$200(com.google.android.material.timepicker.ChipTextInputComboView) -> access$200
    136:136:java.lang.String formatText(java.lang.CharSequence) -> formatText
    100:100:boolean isChecked() -> isChecked
    189:191:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    105:113:void setChecked(boolean) -> setChecked
    141:142:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    146:147:void setTag(int,java.lang.Object) -> setTag
    117:118:void toggle() -> toggle
    91:96:void updateHintLocales() -> updateHintLocales
com.google.android.material.timepicker.ChipTextInputComboView$1 -> com.google.android.material.timepicker.ChipTextInputComboView$1:
# {"id":"sourceFile","fileName":"ChipTextInputComboView.java"}
com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter -> com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter:
# {"id":"sourceFile","fileName":"ChipTextInputComboView.java"}
    172:172:void <init>(com.google.android.material.timepicker.ChipTextInputComboView) -> <init>
    172:172:void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView$1) -> <init>
    178:184:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.ClockFaceView -> com.google.android.material.timepicker.ClockFaceView:
# {"id":"sourceFile","fileName":"ClockFaceView.java"}
    100:101:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:202:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    68:68:com.google.android.material.timepicker.ClockHandView access$000(com.google.android.material.timepicker.ClockFaceView) -> access$000
    68:68:int access$100(com.google.android.material.timepicker.ClockFaceView) -> access$100
    68:68:android.util.SparseArray access$200(com.google.android.material.timepicker.ClockFaceView) -> access$200
    68:68:android.graphics.Rect access$300(com.google.android.material.timepicker.ClockFaceView) -> access$300
    293:309:void findIntersectingTextView() -> findIntersectingTextView
    336:347:android.graphics.RadialGradient getGradientForTextView(android.graphics.RectF,android.widget.TextView) -> getGradientForTextView
    313:331:android.widget.TextView getSelectedTextView(android.graphics.RectF) -> getSelectedTextView
    379:379:float max3(float,float,float) -> max3
    263:271:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    283:285:void onLayout(boolean,int,int,int,int) -> onLayout
    363:376:void onMeasure(int,int) -> onMeasure
    355:359:void onRotate(float,boolean) -> onRotate
    275:279:void setRadius(int) -> setRadius
    209:211:void setValues(java.lang.String[],int) -> setValues
    255:259:void updateLayoutParams() -> updateLayoutParams
    214:251:void updateTextViews(int) -> updateTextViews
com.google.android.material.timepicker.ClockFaceView$1 -> com.google.android.material.timepicker.ClockFaceView$1:
# {"id":"sourceFile","fileName":"ClockFaceView.java"}
    139:139:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    142:149:boolean onPreDraw() -> onPreDraw
com.google.android.material.timepicker.ClockFaceView$2 -> com.google.android.material.timepicker.ClockFaceView$2:
# {"id":"sourceFile","fileName":"ClockFaceView.java"}
    156:156:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    160:177:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    181:190:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.timepicker.ClockHandView -> com.google.android.material.timepicker.ClockHandView:
# {"id":"sourceFile","fileName":"ClockHandView.java"}
    0:0:void $r8$lambda$wCFWOEU6-eiQJxdycea1a-JE7mk(com.google.android.material.timepicker.ClockHandView,android.animation.ValueAnimator) -> $r8$lambda$wCFWOEU6-eiQJxdycea1a-JE7mk
      # {"id":"com.android.tools.r8.synthesized"}
    104:105:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:137:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    232:233:void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener) -> addOnRotateListener
    344:350:void adjustLevel(float,float) -> adjustLevel
    252:276:void drawSelector(android.graphics.Canvas) -> drawSelector
    280:280:android.graphics.RectF getCurrentSelectorBox() -> getCurrentSelectorBox
    369:377:int getDegreesFromXY(float,float) -> getDegreesFromXY
    241:241:float getHandRotation() -> getHandRotation
    400:400:int getLeveledCircleRadius(int) -> getLeveledCircleRadius
    285:285:int getSelectorRadius() -> getSelectorRadius
    183:198:android.util.Pair getValuesForAnimation(float) -> getValuesForAnimation
    354:365:boolean handleTouchInput(float,float,boolean,boolean,boolean) -> handleTouchInput
    168:170:void lambda$setHandRotation$0(android.animation.ValueAnimator) -> lambda$setHandRotation$0
    246:249:void onDraw(android.graphics.Canvas) -> onDraw
    141:146:void onLayout(boolean,int,int,int,int) -> onLayout
    300:340:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    293:295:void setCircleRadius(int) -> setCircleRadius
    149:150:void setHandRotation(float) -> setHandRotation
    153:180:void setHandRotation(float,boolean) -> setHandRotation
    203:225:void setHandRotationInternal(float,boolean) -> setHandRotationInternal
    391:396:void setMultiLevel(boolean) -> setMultiLevel
com.google.android.material.timepicker.ClockHandView$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.ClockHandView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.ClockHandView com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.f$0 -> f$0
    0:0:void com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.<init>(com.google.android.material.timepicker.ClockHandView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.ClockHandView$1 -> com.google.android.material.timepicker.ClockHandView$1:
# {"id":"sourceFile","fileName":"ClockHandView.java"}
    172:172:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    175:176:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.google.android.material.timepicker.ClockHandView$OnRotateListener -> com.google.android.material.timepicker.ClockHandView$OnRotateListener:
# {"id":"sourceFile","fileName":"ClockHandView.java"}
com.google.android.material.timepicker.MaxInputValidator -> com.google.android.material.timepicker.MaxInputValidator:
# {"id":"sourceFile","fileName":"MaxInputValidator.java"}
    26:28:void <init>(int) -> <init>
    42:52:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.google.android.material.timepicker.RadialViewGroup -> com.google.android.material.timepicker.RadialViewGroup:
# {"id":"sourceFile","fileName":"RadialViewGroup.java"}
    81:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    165:170:void addConstraints(java.util.List,androidx.constraintlayout.widget.ConstraintSet,int) -> addConstraints
    107:112:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    93:96:android.graphics.drawable.Drawable createBackground() -> createBackground
    184:184:int getLeveledRadius(int) -> getLeveledRadius
    179:179:int getRadius() -> getRadius
    132:134:void onFinishInflate() -> onFinishInflate
    116:119:void onViewRemoved(android.view.View) -> onViewRemoved
    102:103:void setBackgroundColor(int) -> setBackgroundColor
    173:175:void setRadius(int) -> setRadius
    188:188:boolean shouldSkipView(android.view.View) -> shouldSkipView
    137:161:void updateLayoutParams() -> updateLayoutParams
    123:128:void updateLayoutParamsAsync() -> updateLayoutParamsAsync
com.google.android.material.timepicker.RadialViewGroup$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.RadialViewGroup$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.RadialViewGroup com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.f$0 -> f$0
    0:0:void com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.<init>(com.google.android.material.timepicker.RadialViewGroup) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.TimeModel -> com.google.android.material.timepicker.TimeModel:
# {"id":"sourceFile","fileName":"TimeModel.java"}
    167:167:void <clinit>() -> <clinit>
    62:70:void <init>(int,int,int,int) -> <init>
    73:74:void <init>(android.os.Parcel) -> <init>
    155:155:int describeContents() -> describeContents
    138:147:boolean equals(java.lang.Object) -> equals
    192:192:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence) -> formatText
    198:201:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence,java.lang.String) -> formatText
    84:84:int getPeriod(int) -> getPeriod
    132:133:int hashCode() -> hashCode
    160:164:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.timepicker.TimeModel$1 -> com.google.android.material.timepicker.TimeModel$1:
# {"id":"sourceFile","fileName":"TimeModel.java"}
    167:167:void <init>() -> <init>
    167:167:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:com.google.android.material.timepicker.TimeModel createFromParcel(android.os.Parcel) -> createFromParcel
    167:167:java.lang.Object[] newArray(int) -> newArray
    175:175:com.google.android.material.timepicker.TimeModel[] newArray(int) -> newArray
com.google.android.material.timepicker.TimePickerView -> com.google.android.material.timepicker.TimePickerView:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    0:0:void $r8$lambda$qcr5SAw_DiQbOm3iFiOG_eXPQ9M(com.google.android.material.timepicker.TimePickerView,com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> $r8$lambda$qcr5SAw_DiQbOm3iFiOG_eXPQ9M
      # {"id":"com.android.tools.r8.synthesized"}
    98:99:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:125:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:com.google.android.material.timepicker.TimePickerView$OnSelectionChange access$000(com.google.android.material.timepicker.TimePickerView) -> access$000
    56:56:com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener access$100(com.google.android.material.timepicker.TimePickerView) -> access$100
    108:109:void lambda$new$0(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> lambda$new$0
    257:261:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    169:177:void setUpDisplay() -> setUpDisplay
    129:158:void setupDoubleTap() -> setupDoubleTap
com.google.android.material.timepicker.TimePickerView$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.TimePickerView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.TimePickerView com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.f$0 -> f$0
    0:0:void com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.<init>(com.google.android.material.timepicker.TimePickerView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> onButtonChecked
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.TimePickerView$1 -> com.google.android.material.timepicker.TimePickerView$1:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    80:80:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    83:86:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.TimePickerView$2 -> com.google.android.material.timepicker.TimePickerView$2:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    132:132:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    135:140:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.google.android.material.timepicker.TimePickerView$3 -> com.google.android.material.timepicker.TimePickerView$3:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    145:145:void <init>(com.google.android.material.timepicker.TimePickerView,android.view.GestureDetector) -> <init>
    148:152:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener -> com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
com.google.android.material.timepicker.TimePickerView$OnSelectionChange -> com.google.android.material.timepicker.TimePickerView$OnSelectionChange:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
# {"id":"sourceFile","fileName":"ExpandableBehavior.java"}
    65:67:void <init>() -> <init>
    67:67:void <init>() -> <init>
    65:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    150:155:boolean didStateChange(boolean) -> didStateChange
    139:146:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    126:133:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    98:120:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
# {"id":"sourceFile","fileName":"ExpandableBehavior.java"}
    106:106:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    109:114:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
# {"id":"sourceFile","fileName":"ExpandableTransformationBehavior.java"}
    46:46:void <init>() -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    75:97:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
# {"id":"sourceFile","fileName":"ExpandableTransformationBehavior.java"}
    83:83:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    86:87:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    79:89:void <init>() -> <init>
    89:89:void <init>() -> <init>
    79:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    710:722:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    668:686:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    626:628:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    542:556:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    561:582:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    587:608:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    690:703:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    612:623:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    502:532:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    462:463:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    230:256:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    207:222:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    377:378:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    315:316:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    267:305:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    99:109:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    115:120:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    129:193:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    727:730:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    169:169:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    182:188:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    172:178:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    788:788:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
# {"id":"sourceFile","fileName":"FabTransformationScrimBehavior.java"}
    52:55:void <init>() -> <init>
    55:55:void <init>() -> <init>
    52:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:126:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    63:63:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    80:103:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    70:70:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
# {"id":"sourceFile","fileName":"FabTransformationScrimBehavior.java"}
    88:88:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    98:101:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    91:94:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
# {"id":"sourceFile","fileName":"FabTransformationSheetBehavior.java"}
    53:53:void <init>() -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:72:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    79:80:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    84:127:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
dagger.hilt.EntryPoints -> dagger.hilt.EntryPoints:
# {"id":"sourceFile","fileName":"EntryPoints.java"}
    45:64:java.lang.Object get(java.lang.Object,java.lang.Class) -> get
dagger.hilt.android.ActivityRetainedLifecycle -> dagger.hilt.android.ActivityRetainedLifecycle:
# {"id":"sourceFile","fileName":"ActivityRetainedLifecycle.java"}
dagger.hilt.android.ActivityRetainedLifecycle$OnClearedListener -> dagger.hilt.android.ActivityRetainedLifecycle$OnClearedListener:
# {"id":"sourceFile","fileName":"ActivityRetainedLifecycle.java"}
dagger.hilt.android.EntryPointAccessors -> dagger.hilt.android.EntryPointAccessors:
# {"id":"sourceFile","fileName":"EntryPointAccessors.kt"}
    27:27:void <init>() -> <init>
    35:35:java.lang.Object fromApplication(android.content.Context,java.lang.Class) -> fromApplication
dagger.hilt.android.components.ActivityComponent -> dagger.hilt.android.components.ActivityComponent:
# {"id":"sourceFile","fileName":"ActivityComponent.java"}
dagger.hilt.android.components.ActivityRetainedComponent -> dagger.hilt.android.components.ActivityRetainedComponent:
# {"id":"sourceFile","fileName":"ActivityRetainedComponent.java"}
dagger.hilt.android.components.ViewModelComponent -> dagger.hilt.android.components.ViewModelComponent:
# {"id":"sourceFile","fileName":"ViewModelComponent.java"}
dagger.hilt.android.internal.Contexts -> dagger.hilt.android.internal.Contexts:
# {"id":"sourceFile","fileName":"Contexts.java"}
    30:42:android.app.Application getApplication(android.content.Context) -> getApplication
dagger.hilt.android.internal.ThreadUtil -> dagger.hilt.android.internal.ThreadUtil:
# {"id":"sourceFile","fileName":"ThreadUtil.java"}
    38:41:void ensureMainThread() -> ensureMainThread
    30:33:boolean isMainThread() -> isMainThread
dagger.hilt.android.internal.builders.ActivityComponentBuilder -> dagger.hilt.android.internal.builders.ActivityComponentBuilder:
# {"id":"sourceFile","fileName":"ActivityComponentBuilder.java"}
dagger.hilt.android.internal.builders.ActivityRetainedComponentBuilder -> dagger.hilt.android.internal.builders.ActivityRetainedComponentBuilder:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentBuilder.java"}
dagger.hilt.android.internal.builders.ViewModelComponentBuilder -> dagger.hilt.android.internal.builders.ViewModelComponentBuilder:
# {"id":"sourceFile","fileName":"ViewModelComponentBuilder.java"}
dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories -> dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories:
# {"id":"sourceFile","fileName":"DefaultViewModelFactories.java"}
    55:57:androidx.lifecycle.ViewModelProvider$Factory getActivityFactory(androidx.activity.ComponentActivity,androidx.lifecycle.ViewModelProvider$Factory) -> getActivityFactory
dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$ActivityEntryPoint -> dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$ActivityEntryPoint:
# {"id":"sourceFile","fileName":"DefaultViewModelFactories.java"}
dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$InternalFactoryFactory -> dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$InternalFactoryFactory:
# {"id":"sourceFile","fileName":"DefaultViewModelFactories.java"}
    83:87:void <init>(android.app.Application,java.util.Set,dagger.hilt.android.internal.builders.ViewModelComponentBuilder) -> <init>
    91:93:androidx.lifecycle.ViewModelProvider$Factory fromActivity(androidx.activity.ComponentActivity,androidx.lifecycle.ViewModelProvider$Factory) -> fromActivity
    106:109:androidx.lifecycle.ViewModelProvider$Factory getHiltViewModelFactory(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle,androidx.lifecycle.ViewModelProvider$Factory) -> getHiltViewModelFactory
dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories_InternalFactoryFactory_Factory -> dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories_InternalFactoryFactory_Factory:
# {"id":"sourceFile","fileName":"DefaultViewModelFactories_InternalFactoryFactory_Factory.java"}
    49:49:dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$InternalFactoryFactory newInstance(android.app.Application,java.util.Set,dagger.hilt.android.internal.builders.ViewModelComponentBuilder) -> newInstance
dagger.hilt.android.internal.lifecycle.HiltViewModelFactory -> dagger.hilt.android.internal.lifecycle.HiltViewModelFactory:
# {"id":"sourceFile","fileName":"HiltViewModelFactory.java"}
    77:103:void <init>(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle,java.util.Set,androidx.lifecycle.ViewModelProvider$Factory,dagger.hilt.android.internal.builders.ViewModelComponentBuilder) -> <init>
    108:111:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
dagger.hilt.android.internal.lifecycle.HiltViewModelFactory$1 -> dagger.hilt.android.internal.lifecycle.HiltViewModelFactory$1:
# {"id":"sourceFile","fileName":"HiltViewModelFactory.java"}
    81:81:void <init>(dagger.hilt.android.internal.lifecycle.HiltViewModelFactory,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle,dagger.hilt.android.internal.builders.ViewModelComponentBuilder) -> <init>
    87:100:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class,androidx.lifecycle.SavedStateHandle) -> create
dagger.hilt.android.internal.lifecycle.HiltViewModelFactory$ViewModelFactoriesEntryPoint -> dagger.hilt.android.internal.lifecycle.HiltViewModelFactory$ViewModelFactoriesEntryPoint:
# {"id":"sourceFile","fileName":"HiltViewModelFactory.java"}
dagger.hilt.android.internal.managers.ActivityComponentManager -> dagger.hilt.android.internal.managers.ActivityComponentManager:
# {"id":"sourceFile","fileName":"ActivityComponentManager.java"}
    48:59:void <init>(android.app.Activity) -> <init>
    74:90:java.lang.Object createComponent() -> createComponent
    63:70:java.lang.Object generatedComponent() -> generatedComponent
dagger.hilt.android.internal.managers.ActivityComponentManager$ActivityComponentBuilderEntryPoint -> dagger.hilt.android.internal.managers.ActivityComponentManager$ActivityComponentBuilderEntryPoint:
# {"id":"sourceFile","fileName":"ActivityComponentManager.java"}
dagger.hilt.android.internal.managers.ActivityRetainedComponentManager -> dagger.hilt.android.internal.managers.ActivityRetainedComponentManager:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentManager.java"}
    85:89:void <init>(androidx.activity.ComponentActivity) -> <init>
    123:123:dagger.hilt.android.components.ActivityRetainedComponent createComponent() -> createComponent
    44:44:java.lang.Object generatedComponent() -> generatedComponent
    112:119:dagger.hilt.android.components.ActivityRetainedComponent generatedComponent() -> generatedComponent
    93:93:androidx.lifecycle.ViewModelProvider getViewModelProvider(androidx.lifecycle.ViewModelStoreOwner,android.content.Context) -> getViewModelProvider
dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$1 -> dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$1:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentManager.java"}
    95:95:void <init>(dagger.hilt.android.internal.managers.ActivityRetainedComponentManager,android.content.Context) -> <init>
    100:105:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$ActivityRetainedComponentBuilderEntryPoint -> dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$ActivityRetainedComponentBuilderEntryPoint:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentManager.java"}
dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$ActivityRetainedComponentViewModel -> dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$ActivityRetainedComponentViewModel:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentManager.java"}
    64:66:void <init>(dagger.hilt.android.components.ActivityRetainedComponent) -> <init>
    69:69:dagger.hilt.android.components.ActivityRetainedComponent getComponent() -> getComponent
    74:79:void onCleared() -> onCleared
dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$ActivityRetainedLifecycleEntryPoint -> dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$ActivityRetainedLifecycleEntryPoint:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentManager.java"}
dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$Lifecycle -> dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$Lifecycle:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentManager.java"}
    130:134:void <init>() -> <init>
    134:134:void <init>() -> <init>
    151:156:void dispatchOnCleared() -> dispatchOnCleared
dagger.hilt.android.internal.managers.ActivityRetainedComponentManager_Lifecycle_Factory -> dagger.hilt.android.internal.managers.ActivityRetainedComponentManager_Lifecycle_Factory:
# {"id":"sourceFile","fileName":"ActivityRetainedComponentManager_Lifecycle_Factory.java"}
    27:27:dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$Lifecycle newInstance() -> newInstance
dagger.hilt.android.internal.managers.ApplicationComponentManager -> dagger.hilt.android.internal.managers.ApplicationComponentManager:
# {"id":"sourceFile","fileName":"ApplicationComponentManager.java"}
    28:33:void <init>(dagger.hilt.android.internal.managers.ComponentSupplier) -> <init>
    37:44:java.lang.Object generatedComponent() -> generatedComponent
dagger.hilt.android.internal.managers.ComponentSupplier -> dagger.hilt.android.internal.managers.ComponentSupplier:
# {"id":"sourceFile","fileName":"ComponentSupplier.java"}
dagger.hilt.android.internal.managers.ViewComponentManager$FragmentContextWrapper -> dagger.hilt.android.internal.managers.ViewComponentManager$FragmentContextWrapper:
# {"id":"sourceFile","fileName":"ViewComponentManager.java"}
    172:172:androidx.fragment.app.Fragment access$002(dagger.hilt.android.internal.managers.ViewComponentManager$FragmentContextWrapper,androidx.fragment.app.Fragment) -> access$002
    172:172:android.view.LayoutInflater access$102(dagger.hilt.android.internal.managers.ViewComponentManager$FragmentContextWrapper,android.view.LayoutInflater) -> access$102
    172:172:android.view.LayoutInflater access$202(dagger.hilt.android.internal.managers.ViewComponentManager$FragmentContextWrapper,android.view.LayoutInflater) -> access$202
dagger.hilt.android.internal.managers.ViewComponentManager$FragmentContextWrapper$1 -> dagger.hilt.android.internal.managers.ViewComponentManager$FragmentContextWrapper$1:
# {"id":"sourceFile","fileName":"ViewComponentManager.java"}
    180:187:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
dagger.hilt.android.internal.modules.ApplicationContextModule -> dagger.hilt.android.internal.modules.ApplicationContextModule:
# {"id":"sourceFile","fileName":"ApplicationContextModule.java"}
    34:36:void <init>(android.content.Context) -> <init>
    46:46:android.app.Application provideApplication() -> provideApplication
    41:41:android.content.Context provideContext() -> provideContext
dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideApplicationFactory -> dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideApplicationFactory:
# {"id":"sourceFile","fileName":"ApplicationContextModule_ProvideApplicationFactory.java"}
    36:36:android.app.Application provideApplication(dagger.hilt.android.internal.modules.ApplicationContextModule) -> provideApplication
dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideContextFactory -> dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideContextFactory:
# {"id":"sourceFile","fileName":"ApplicationContextModule_ProvideContextFactory.java"}
    36:36:android.content.Context provideContext(dagger.hilt.android.internal.modules.ApplicationContextModule) -> provideContext
dagger.hilt.internal.GeneratedComponent -> dagger.hilt.internal.GeneratedComponent:
# {"id":"sourceFile","fileName":"GeneratedComponent.java"}
dagger.hilt.internal.GeneratedComponentManager -> dagger.hilt.internal.GeneratedComponentManager:
# {"id":"sourceFile","fileName":"GeneratedComponentManager.java"}
dagger.hilt.internal.UnsafeCasts -> dagger.hilt.internal.UnsafeCasts:
# {"id":"sourceFile","fileName":"UnsafeCasts.java"}
    25:25:java.lang.Object unsafeCast(java.lang.Object) -> unsafeCast
dagger.internal.DoubleCheck -> dagger.internal.DoubleCheck:
# {"id":"sourceFile","fileName":"DoubleCheck.java"}
    28:29:void <clinit>() -> <clinit>
    32:37:void <init>(javax.inject.Provider) -> <init>
    42:55:java.lang.Object get() -> get
    77:83:javax.inject.Provider provider(javax.inject.Provider) -> provider
    64:70:java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object) -> reentrantCheck
dagger.internal.Preconditions -> dagger.internal.Preconditions:
# {"id":"sourceFile","fileName":"Preconditions.java"}
    122:125:void checkBuilderRequirement(java.lang.Object,java.lang.Class) -> checkBuilderRequirement
    32:35:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    61:64:java.lang.Object checkNotNullFromProvides(java.lang.Object) -> checkNotNullFromProvides
javax.inject.Provider -> javax.inject.Provider:
# {"id":"sourceFile","fileName":"Provider.java"}
kotlin.ArrayIntrinsicsKt -> R8$$REMOVED$$CLASS$$1:
# {"id":"sourceFile","fileName":"ArrayIntrinsics.kt"}
kotlin.ExceptionsKt__ExceptionsKt -> kotlin.ExceptionsKt__ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    70:72:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
kotlin.Function -> kotlin.Function:
# {"id":"sourceFile","fileName":"Function.kt"}
kotlin.InitializedLazyImpl -> kotlin.InitializedLazyImpl:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    95:95:void <init>(java.lang.Object) -> <init>
    95:95:java.lang.Object getValue() -> getValue
    97:97:boolean isInitialized() -> isInitialized
    99:99:java.lang.String toString() -> toString
kotlin.KotlinNothingValueException -> kotlin.KotlinNothingValueException:
# {"id":"sourceFile","fileName":"ExceptionsH.kt"}
    116:116:void <init>() -> <init>
kotlin.Lazy -> kotlin.Lazy:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.LazyKt__LazyJVMKt -> kotlin.LazyKt__LazyJVMKt:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
kotlin.NoWhenBranchMatchedException -> kotlin.NoWhenBranchMatchedException:
# {"id":"sourceFile","fileName":"NoWhenBranchMatchedException.kt"}
    9:9:void <init>() -> <init>
kotlin.Pair -> kotlin.Pair:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    26:28:void <init>(java.lang.Object,java.lang.Object) -> <init>
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    34:34:java.lang.String toString() -> toString
kotlin.Result -> kotlin.Result:
# {"id":"sourceFile","fileName":"Result.kt"}
    63:66:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    38:38:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    32:32:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
kotlin.Result$Companion -> kotlin.Result$Companion:
# {"id":"sourceFile","fileName":"Result.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    85:85:void <init>() -> <init>
kotlin.Result$Failure -> kotlin.Result$Failure:
# {"id":"sourceFile","fileName":"Result.kt"}
    105:106:void <init>(java.lang.Throwable) -> <init>
    109:109:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
kotlin.ResultKt -> kotlin.ResultKt:
# {"id":"sourceFile","fileName":"Result.kt"}
    122:122:java.lang.Object createFailure(java.lang.Throwable) -> createFailure
    132:133:void throwOnFailure(java.lang.Object) -> throwOnFailure
kotlin.SynchronizedLazyImpl -> kotlin.SynchronizedLazyImpl:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    55:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:87:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:77:java.lang.Object getValue() -> getValue
    82:82:boolean isInitialized() -> isInitialized
    84:84:java.lang.String toString() -> toString
    86:86:java.lang.Object writeReplace() -> writeReplace
kotlin.TuplesKt -> kotlin.TuplesKt:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> to
kotlin.UNINITIALIZED_VALUE -> kotlin.UNINITIALIZED_VALUE:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    71:71:void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> kotlin.UninitializedPropertyAccessException:
# {"id":"sourceFile","fileName":"UninitializedPropertyAccessException.kt"}
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Unit -> kotlin.Unit:
# {"id":"sourceFile","fileName":"Unit.kt"}
    22:22:void <init>() -> <init>
    23:23:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection -> kotlin.collections.AbstractCollection:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    14:14:int size() -> <init>
    14:14:void <init>():14 -> <init>
    15:15:void <init>() -> <init>
    19:19:boolean contains(java.lang.Object) -> contains
    1747:1748:boolean kotlin.collections.CollectionsKt___CollectionsKt.any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> contains
    1747:1748:boolean contains(java.lang.Object):19 -> contains
    19:19:boolean contains(java.lang.Object) -> contains
    1748:1749:boolean kotlin.collections.CollectionsKt___CollectionsKt.any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> contains
    1748:1749:boolean contains(java.lang.Object):19 -> contains
    19:19:boolean contains(java.lang.Object) -> contains
    22:22:boolean containsAll(java.util.Collection) -> containsAll
    1726:1727:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1726:1727:boolean containsAll(java.util.Collection):22 -> containsAll
    22:22:boolean containsAll(java.util.Collection) -> containsAll
    1727:1728:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1727:1728:boolean containsAll(java.util.Collection):22 -> containsAll
    22:22:boolean containsAll(java.util.Collection) -> containsAll
    24:24:boolean isEmpty() -> isEmpty
    14:14:int size() -> size
    34:34:java.lang.Object[] toArray() -> toArray
    40:40:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    26:28:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection$toString$1 -> kotlin.collections.AbstractCollection$toString$1:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    27:27:java.lang.CharSequence invoke(java.lang.Object) -> invoke
kotlin.collections.AbstractList -> kotlin.collections.AbstractList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    21:21:void <init>() -> <init>
    60:63:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
    27:27:int indexOf(java.lang.Object) -> indexOf
    350:352:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> indexOf
    350:352:int indexOf(java.lang.Object):27 -> indexOf
    27:27:int indexOf(java.lang.Object) -> indexOf
    352:356:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> indexOf
    352:356:int indexOf(java.lang.Object):27 -> indexOf
    27:27:int indexOf(java.lang.Object) -> indexOf
    25:25:java.util.Iterator iterator() -> iterator
    29:29:int lastIndexOf(java.lang.Object) -> lastIndexOf
    378:380:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> lastIndexOf
    378:380:int lastIndexOf(java.lang.Object):29 -> lastIndexOf
    29:29:int lastIndexOf(java.lang.Object) -> lastIndexOf
    380:384:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> lastIndexOf
    380:384:int lastIndexOf(java.lang.Object):29 -> lastIndexOf
    29:29:int lastIndexOf(java.lang.Object) -> lastIndexOf
    31:31:java.util.ListIterator listIterator() -> listIterator
    33:33:java.util.ListIterator listIterator(int) -> listIterator
    35:35:java.util.List subList(int,int) -> subList
kotlin.collections.AbstractList$Companion -> kotlin.collections.AbstractList$Companion:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    105:105:void <init>() -> <init>
    107:110:void checkElementIndex$kotlin_stdlib(int,int) -> checkElementIndex$kotlin_stdlib
    113:116:void checkPositionIndex$kotlin_stdlib(int,int) -> checkPositionIndex$kotlin_stdlib
    119:125:void checkRangeIndexes$kotlin_stdlib(int,int,int) -> checkRangeIndexes$kotlin_stdlib
    145:154:boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection) -> orderedEquals$kotlin_stdlib
    137:141:int orderedHashCode$kotlin_stdlib(java.util.Collection) -> orderedHashCode$kotlin_stdlib
kotlin.collections.AbstractList$IteratorImpl -> kotlin.collections.AbstractList$IteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    71:71:void <init>(kotlin.collections.AbstractList) -> <init>
    73:73:int getIndex() -> getIndex
    75:75:boolean hasNext() -> hasNext
    78:79:java.lang.Object next() -> next
    73:73:void setIndex(int) -> setIndex
kotlin.collections.AbstractList$ListIteratorImpl -> kotlin.collections.AbstractList$ListIteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    86:91:void <init>(kotlin.collections.AbstractList,int) -> <init>
    93:93:boolean hasPrevious() -> hasPrevious
    95:95:int nextIndex() -> nextIndex
    98:99:java.lang.Object previous() -> previous
    102:102:int previousIndex() -> previousIndex
kotlin.collections.AbstractList$SubList -> kotlin.collections.AbstractList$SubList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    37:43:void <init>(kotlin.collections.AbstractList,int,int) -> <init>
    46:48:java.lang.Object get(int) -> get
    51:51:int getSize() -> getSize
kotlin.collections.AbstractMutableCollection -> kotlin.collections.AbstractMutableCollection:
# {"id":"sourceFile","fileName":"AbstractMutableCollection.kt"}
    16:16:void <init>() -> <init>
    15:15:int size() -> size
kotlin.collections.AbstractMutableList -> kotlin.collections.AbstractMutableList:
# {"id":"sourceFile","fileName":"AbstractMutableList.kt"}
    16:16:void <init>() -> <init>
    15:15:java.lang.Object remove(int) -> remove
    15:15:int size() -> size
kotlin.collections.AbstractMutableSet -> kotlin.collections.AbstractMutableSet:
# {"id":"sourceFile","fileName":"AbstractMutableSet.kt"}
    16:16:void <init>() -> <init>
    15:15:int size() -> size
kotlin.collections.ArrayAsCollection -> kotlin.collections.ArrayAsCollection:
# {"id":"sourceFile","fileName":"Collections.kt"}
    57:57:int size() -> <init>
    57:57:void <init>(java.lang.Object[],boolean):57 -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    1726:1727:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1726:1727:boolean containsAll(java.util.Collection):61 -> containsAll
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    1727:1728:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1727:1728:boolean containsAll(java.util.Collection):61 -> containsAll
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    58:58:int getSize() -> getSize
    59:59:boolean isEmpty() -> isEmpty
    62:62:java.util.Iterator iterator() -> iterator
    57:57:int size() -> size
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    64:64:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArrayDeque -> kotlin.collections.ArrayDeque:
# {"id":"sourceFile","fileName":"ArrayDeque.kt"}
    562:562:void <clinit>() -> <clinit>
    26:26:java.lang.Object[] kotlin.ArrayIntrinsicsKt.emptyArray() -> <clinit>
    26:26:void <clinit>():562 -> <clinit>
    562:562:void <clinit>() -> <clinit>
    39:41:void <init>() -> <init>
    179:180:boolean add(java.lang.Object) -> add
    184:254:void add(int,java.lang.Object) -> add
    272:275:boolean addAll(java.util.Collection) -> addAll
    279:353:boolean addAll(int,java.util.Collection) -> addAll
    124:129:void addFirst(java.lang.Object) -> addFirst
    135:139:void addLast(java.lang.Object) -> addLast
    521:530:void clear() -> clear
    372:372:boolean contains(java.lang.Object) -> contains
    257:269:void copyCollectionElements(int,java.util.Collection) -> copyCollectionElements
    74:79:void copyElements(int) -> copyElements
    96:96:int decremented(int) -> decremented
    59:68:void ensureCapacity(int) -> ensureCapacity
    357:359:java.lang.Object get(int) -> get
    22:22:int getSize() -> getSize
    94:94:int incremented(int) -> incremented
    375:390:int indexOf(java.lang.Object) -> indexOf
    98:98:boolean isEmpty() -> isEmpty
    394:409:int lastIndexOf(java.lang.Object) -> lastIndexOf
    89:89:int negativeMod(int) -> negativeMod
    87:87:int positiveMod(int) -> positiveMod
    413:416:boolean remove(java.lang.Object) -> remove
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    467:479:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    467:479:boolean removeAll(java.util.Collection):462 -> removeAll
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    475:493:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    475:493:boolean removeAll(java.util.Collection):462 -> removeAll
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    488:506:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    488:506:boolean removeAll(java.util.Collection):462 -> removeAll
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    468:517:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    468:517:boolean removeAll(java.util.Collection):462 -> removeAll
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    420:459:java.lang.Object removeAt(int) -> removeAt
    145:151:java.lang.Object removeFirst() -> removeFirst
    157:157:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    163:169:java.lang.Object removeLast() -> removeLast
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    467:479:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    467:479:boolean retainAll(java.util.Collection):464 -> retainAll
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    475:493:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    475:493:boolean retainAll(java.util.Collection):464 -> retainAll
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    488:506:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    488:506:boolean retainAll(java.util.Collection):464 -> retainAll
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    468:517:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    468:517:boolean retainAll(java.util.Collection):464 -> retainAll
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    363:369:java.lang.Object set(int,java.lang.Object) -> set
    535:549:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    554:554:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArrayDeque$Companion -> kotlin.collections.ArrayDeque$Companion:
# {"id":"sourceFile","fileName":"ArrayDeque.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    561:561:void <init>() -> <init>
    568:573:int newCapacity$kotlin_stdlib(int,int) -> newCapacity$kotlin_stdlib
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
    44:44:java.lang.Object[] arrayOfNulls(java.lang.Object[],int) -> arrayOfNulls
    49:50:void copyOfRangeToIndexCheck(int,int) -> copyOfRangeToIndexCheck
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
# {"id":"sourceFile","fileName":"Arrays.kt"}
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    133:133:java.util.List asList(java.lang.Object[]) -> asList
    1247:1248:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int) -> copyInto
    1246:1246:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
    1835:1836:java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> copyOfRange
    1914:1915:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
    1956:1957:void fill(int[],int,int,int) -> fill
    2400:2401:void sort(java.lang.Object[]) -> sort
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    519:519:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    4198:4198:java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
    4207:4208:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection) -> filterNotNullTo
    8054:8054:int getLastIndex(java.lang.Object[]) -> getLastIndex
    1507:1520:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    2897:2900:char single(char[]) -> single
    3070:3070:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
    9945:9948:java.util.List toList(java.lang.Object[]) -> toList
    10044:10044:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
kotlin.collections.ArraysUtilJVM -> kotlin.collections.ArraysUtilJVM:
# {"id":"sourceFile","fileName":"ArraysUtilJVM.java"}
    13:13:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    51:51:java.util.List build(java.util.List) -> build
    88:92:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> copyToArrayOfAny
    39:39:java.util.List createListBuilder() -> createListBuilder
    45:45:java.util.List createListBuilder(int) -> createListBuilder
    20:20:java.util.List listOf(java.lang.Object) -> listOf
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    55:55:java.util.Collection asCollection(java.lang.Object[]) -> asCollection
    71:71:java.util.List emptyList() -> emptyList
    225:225:int getLastIndex(java.util.List) -> getLastIndex
    77:77:java.util.List listOf(java.lang.Object[]) -> listOf
    293:297:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
    465:465:void throwIndexOverflow() -> throwIndexOverflow
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1 -> R8$$REMOVED$$CLASS$$2:
# {"id":"sourceFile","fileName":"Iterables.kt"}
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
# {"id":"sourceFile","fileName":"Iterators.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
# {"id":"sourceFile","fileName":"MutableCollectionsJVM.kt"}
    31:32:void sort(java.util.List) -> sort
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
# {"id":"sourceFile","fileName":"MutableCollections.kt"}
    113:119:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
    1:1:int access$reverseElementIndex(java.util.List,int) -> access$reverseElementIndex
    41:41:java.util.List asReversed(java.util.List) -> asReversed
    30:30:int reverseElementIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> reverseElementIndex$CollectionsKt__ReversedViewsKt
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
# {"id":"sourceFile","fileName":"_CollectionsJvm.kt"}
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    306:306:java.lang.Object getOrNull(java.util.List,int) -> getOrNull
    3485:3495:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    3507:3507:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    3506:3506:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    589:598:java.lang.Object single(java.lang.Iterable) -> single
    607:610:java.lang.Object single(java.util.List) -> single
    1029:1032:java.util.List sorted(java.lang.Iterable) -> sorted
    37:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> sorted
    37:38:java.util.List sorted(java.lang.Iterable):1032 -> sorted
    1032:3699:java.util.List sorted(java.lang.Iterable) -> sorted
    1034:3699:java.util.List sorted(java.lang.Iterable) -> sorted
    1295:1298:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> toCollection
    1139:1143:int[] toIntArray(java.util.Collection) -> toIntArray
    1312:1319:java.util.List toList(java.lang.Iterable) -> toList
    1326:1328:java.util.List toMutableList(java.lang.Iterable) -> toMutableList
    1335:1335:java.util.List toMutableList(java.util.Collection) -> toMutableList
    1344:1351:java.util.Set toSet(java.lang.Iterable) -> toSet
    3422:3422:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
    3433:3437:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    3433:3437:java.util.List zip(java.lang.Iterable,java.lang.Iterable):3422 -> zip
    3422:3422:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
    3437:3439:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    3437:3439:java.util.List zip(java.lang.Iterable,java.lang.Iterable):3422 -> zip
    3422:3422:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
# {"id":"sourceFile","fileName":"Collections.kt"}
    15:15:void <init>() -> <init>
    16:16:boolean hasNext() -> hasNext
    17:17:boolean hasPrevious() -> hasPrevious
    15:15:java.lang.Object next() -> next
    20:20:java.lang.Void next() -> next
    18:18:int nextIndex() -> nextIndex
    15:15:java.lang.Object previous() -> previous
    21:21:java.lang.Void previous() -> previous
    19:19:int previousIndex() -> previousIndex
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
# {"id":"sourceFile","fileName":"Collections.kt"}
    24:24:void <init>() -> <init>
    0:0:void add(int,java.lang.Object) -> add
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(int,java.util.Collection) -> addAll
    0:0:boolean addAll(java.util.Collection) -> addAll
    24:24:boolean contains(java.lang.Object) -> contains
    33:33:boolean contains(java.lang.Void) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    36:36:java.lang.Void get(int) -> get
    31:31:int getSize() -> getSize
    28:28:int hashCode() -> hashCode
    24:24:int indexOf(java.lang.Object) -> indexOf
    37:37:int indexOf(java.lang.Void) -> indexOf
    32:32:boolean isEmpty() -> isEmpty
    40:40:java.util.Iterator iterator() -> iterator
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    38:38:int lastIndexOf(java.lang.Void) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    52:52:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.Object remove(int) -> remove
    0:0:boolean remove(java.lang.Object) -> remove
    24:24:int size() -> size
    48:49:java.util.List subList(int,int) -> subList
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    29:29:java.lang.String toString() -> toString
kotlin.collections.EmptyMap -> kotlin.collections.EmptyMap:
# {"id":"sourceFile","fileName":"Maps.kt"}
    14:14:void <init>() -> <init>
    24:24:boolean containsKey(java.lang.Object) -> containsKey
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    25:25:boolean containsValue(java.lang.Void) -> containsValue
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    14:14:java.lang.Object get(java.lang.Object) -> get
    26:26:java.lang.Void get(java.lang.Object) -> get
    27:27:java.util.Set getEntries() -> getEntries
    28:28:java.util.Set getKeys() -> getKeys
    21:21:int getSize() -> getSize
    29:29:java.util.Collection getValues() -> getValues
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    14:14:java.util.Set keySet() -> keySet
    31:31:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.Void remove(java.lang.Object) -> remove
    14:14:java.lang.Object remove(java.lang.Object) -> remove
    14:14:int size() -> size
    19:19:java.lang.String toString() -> toString
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
# {"id":"sourceFile","fileName":"Sets.kt"}
    14:14:void <init>() -> <init>
    14:14:boolean contains(java.lang.Object) -> contains
    23:23:boolean contains(java.lang.Void) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    21:21:int getSize() -> getSize
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    26:26:java.util.Iterator iterator() -> iterator
    28:28:java.lang.Object readResolve() -> readResolve
    14:14:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    19:19:java.lang.String toString() -> toString
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
    21:24:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object) -> getOrImplicitDefaultNullable
    330:332:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrImplicitDefaultNullable
    330:332:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):24 -> getOrImplicitDefaultNullable
    24:24:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object) -> getOrImplicitDefaultNullable
    335:335:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrImplicitDefaultNullable
    335:335:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):24 -> getOrImplicitDefaultNullable
    24:24:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object) -> getOrImplicitDefaultNullable
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
    58:58:java.util.Map build(java.util.Map) -> build
    46:46:java.util.Map createMapBuilder() -> createMapBuilder
    52:52:java.util.Map createMapBuilder(int) -> createMapBuilder
    148:156:int mapCapacity(int) -> mapCapacity
    27:27:java.util.Map mapOf(kotlin.Pair) -> mapOf
    140:159:java.util.Map toSingletonMap(java.util.Map) -> toSingletonMap
kotlin.collections.MapsKt__MapsKt -> kotlin.collections.MapsKt__MapsKt:
# {"id":"sourceFile","fileName":"Maps.kt"}
    40:40:java.util.Map emptyMap() -> emptyMap
    349:349:java.lang.Object getValue(java.util.Map,java.lang.Object) -> getValue
    788:792:java.util.Map optimizeReadOnlyMap(java.util.Map) -> optimizeReadOnlyMap
    419:422:void putAll(java.util.Map,java.lang.Iterable) -> putAll
    550:557:java.util.Map toMap(java.lang.Iterable) -> toMap
    564:794:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> toMap
    604:608:java.util.Map toMap(java.util.Map) -> toMap
    616:616:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
kotlin.collections.MapsKt___MapsKt -> R8$$REMOVED$$CLASS$$3:
# {"id":"sourceFile","fileName":"_Maps.kt"}
kotlin.collections.ReversedListReadOnly -> kotlin.collections.ReversedListReadOnly:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
    11:11:void <init>(java.util.List) -> <init>
    13:13:java.lang.Object get(int) -> get
    12:12:int getSize() -> getSize
kotlin.collections.SetsKt__SetsJVMKt -> kotlin.collections.SetsKt__SetsJVMKt:
# {"id":"sourceFile","fileName":"SetsJVM.kt"}
    49:49:java.util.Set build(java.util.Set) -> build
    37:37:java.util.Set createSetBuilder() -> createSetBuilder
    43:43:java.util.Set createSetBuilder(int) -> createSetBuilder
    18:18:java.util.Set setOf(java.lang.Object) -> setOf
kotlin.collections.SetsKt__SetsKt -> kotlin.collections.SetsKt__SetsKt:
# {"id":"sourceFile","fileName":"Sets.kt"}
    36:36:java.util.Set emptySet() -> emptySet
    175:179:java.util.Set optimizeReadOnlySet(java.util.Set) -> optimizeReadOnlySet
kotlin.collections.builders.AbstractMapBuilderEntrySet -> kotlin.collections.builders.AbstractMapBuilderEntrySet:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    627:627:void <init>() -> <init>
    627:627:boolean contains(java.lang.Object) -> contains
    628:628:boolean contains(java.util.Map$Entry) -> contains
    627:627:boolean remove(java.lang.Object) -> remove
kotlin.collections.builders.ListBuilder -> kotlin.collections.builders.ListBuilder:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    12:19:void <init>(java.lang.Object[],int,int,boolean,kotlin.collections.builders.ListBuilder,kotlin.collections.builders.ListBuilder) -> <init>
    21:21:void <init>() -> <init>
    23:24:void <init>(int) -> <init>
    24:24:void <init>(int) -> <init>
    12:12:java.lang.Object[] access$getArray$p(kotlin.collections.builders.ListBuilder) -> access$getArray$p
    12:12:int access$getLength$p(kotlin.collections.builders.ListBuilder) -> access$getLength$p
    12:12:int access$getOffset$p(kotlin.collections.builders.ListBuilder) -> access$getOffset$p
    84:86:boolean add(java.lang.Object) -> add
    90:93:void add(int,java.lang.Object) -> add
    96:99:boolean addAll(java.util.Collection) -> addAll
    103:107:boolean addAll(int,java.util.Collection) -> addAll
    221:234:void addAllInternal(int,java.util.Collection,int) -> addAllInternal
    210:218:void addAtInternal(int,java.lang.Object) -> addAtInternal
    27:30:java.util.List build() -> build
    189:190:void checkIsMutable() -> checkIsMutable
    111:113:void clear() -> clear
    200:200:boolean contentEquals(java.util.List) -> contentEquals
    180:186:void ensureCapacity(int) -> ensureCapacity
    196:197:void ensureExtraCapacity(int) -> ensureExtraCapacity
    165:166:boolean equals(java.lang.Object) -> equals
    45:46:java.lang.Object get(int) -> get
    40:40:int getSize() -> getSize
    170:170:int hashCode() -> hashCode
    58:63:int indexOf(java.lang.Object) -> indexOf
    204:207:void insertAtInternal(int,int) -> insertAtInternal
    193:193:boolean isEffectivelyReadOnly() -> isEffectivelyReadOnly
    42:42:boolean isEmpty() -> isEmpty
    75:75:java.util.Iterator iterator() -> iterator
    67:72:int lastIndexOf(java.lang.Object) -> lastIndexOf
    76:76:java.util.ListIterator listIterator() -> listIterator
    79:80:java.util.ListIterator listIterator(int) -> listIterator
    122:125:boolean remove(java.lang.Object) -> remove
    129:130:boolean removeAll(java.util.Collection) -> removeAll
    116:118:java.lang.Object removeAt(int) -> removeAt
    237:246:java.lang.Object removeAtInternal(int) -> removeAtInternal
    251:258:void removeRangeInternal(int,int) -> removeRangeInternal
    134:135:boolean retainAll(java.util.Collection) -> retainAll
    262:280:int retainOrRemoveAllInternal(int,int,java.util.Collection,boolean) -> retainOrRemoveAllInternal
    50:54:java.lang.Object set(int,java.lang.Object) -> set
    139:140:java.util.List subList(int,int) -> subList
    144:156:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    161:161:java.lang.Object[] toArray() -> toArray
    174:174:java.lang.String toString() -> toString
    34:37:java.lang.Object writeReplace() -> writeReplace
kotlin.collections.builders.ListBuilder$Itr -> kotlin.collections.builders.ListBuilder$Itr:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    289:293:void <init>(kotlin.collections.builders.ListBuilder,int) -> <init>
    319:321:void add(java.lang.Object) -> add
    296:296:boolean hasNext() -> hasNext
    295:295:boolean hasPrevious() -> hasPrevious
    308:310:java.lang.Object next() -> next
    299:299:int nextIndex() -> nextIndex
    302:304:java.lang.Object previous() -> previous
    298:298:int previousIndex() -> previousIndex
    324:430:void remove() -> remove
    314:430:void set(java.lang.Object) -> set
kotlin.collections.builders.ListBuilderKt -> kotlin.collections.builders.ListBuilderKt:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> access$subarrayContentEquals
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> access$subarrayContentHashCode
    1:1:int access$subarrayContentHashCode(java.lang.Object[],int,int):1 -> access$subarrayContentHashCode
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> access$subarrayContentToString
    1:1:java.lang.String access$subarrayContentToString(java.lang.Object[],int,int):1 -> access$subarrayContentToString
    333:430:java.lang.Object[] arrayOfUninitializedElements(int) -> arrayOfUninitializedElements
    374:374:java.lang.Object[] copyOfUninitializedElements(java.lang.Object[],int) -> copyOfUninitializedElements
    379:380:void resetAt(java.lang.Object[],int) -> resetAt
    383:384:void resetRange(java.lang.Object[],int,int) -> resetRange
    363:369:boolean subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> subarrayContentEquals
    352:359:int subarrayContentHashCode(java.lang.Object[],int,int) -> subarrayContentHashCode
    339:348:java.lang.String subarrayContentToString(java.lang.Object[],int,int) -> subarrayContentToString
kotlin.collections.builders.MapBuilder -> kotlin.collections.builders.MapBuilder:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    12:26:void <init>(java.lang.Object[],java.lang.Object[],int[],int[],int,int) -> <init>
    40:40:void <init>() -> <init>
    42:48:void <init>(int) -> <init>
    48:48:void <init>(int) -> <init>
    12:12:java.lang.Object[] access$allocateValuesArray(kotlin.collections.builders.MapBuilder) -> access$allocateValuesArray
    12:12:java.lang.Object[] access$getKeysArray$p(kotlin.collections.builders.MapBuilder) -> access$getKeysArray$p
    12:12:int access$getLength$p(kotlin.collections.builders.MapBuilder) -> access$getLength$p
    12:12:int[] access$getPresenceArray$p(kotlin.collections.builders.MapBuilder) -> access$getPresenceArray$p
    12:12:java.lang.Object[] access$getValuesArray$p(kotlin.collections.builders.MapBuilder) -> access$getValuesArray$p
    12:12:void access$removeKeyAt(kotlin.collections.builders.MapBuilder,int) -> access$removeKeyAt
    293:321:int addKey$kotlin_stdlib(java.lang.Object) -> addKey$kotlin_stdlib
    212:216:java.lang.Object[] allocateValuesArray() -> allocateValuesArray
    51:53:java.util.Map build() -> build
    179:180:void checkIsMutable$kotlin_stdlib() -> checkIsMutable$kotlin_stdlib
    101:114:void clear() -> clear
    222:237:void compact() -> compact
    400:411:boolean containsAllEntries$kotlin_stdlib(java.util.Collection) -> containsAllEntries$kotlin_stdlib
    392:394:boolean containsEntry$kotlin_stdlib(java.util.Map$Entry) -> containsEntry$kotlin_stdlib
    63:63:boolean containsKey(java.lang.Object) -> containsKey
    64:64:boolean containsValue(java.lang.Object) -> containsValue
    397:397:boolean contentEquals(java.util.Map) -> contentEquals
    199:209:void ensureCapacity(int) -> ensureCapacity
    183:188:void ensureExtraCapacity(int) -> ensureExtraCapacity
    460:460:kotlin.collections.builders.MapBuilder$EntriesItr entriesIterator$kotlin_stdlib() -> entriesIterator$kotlin_stdlib
    12:12:java.util.Set entrySet() -> entrySet
    144:146:boolean equals(java.lang.Object) -> equals
    272:279:int findKey(java.lang.Object) -> findKey
    284:289:int findValue(java.lang.Object) -> findValue
    67:69:java.lang.Object get(java.lang.Object) -> get
    175:175:int getCapacity$kotlin_stdlib() -> getCapacity$kotlin_stdlib
    135:140:java.util.Set getEntries() -> getEntries
    176:176:int getHashSize() -> getHashSize
    117:122:java.util.Set getKeys() -> getKeys
    28:28:int getSize() -> getSize
    126:131:java.util.Collection getValues() -> getValues
    219:219:int hash(java.lang.Object) -> hash
    150:155:int hashCode() -> hashCode
    62:62:boolean isEmpty() -> isEmpty
    35:35:boolean isReadOnly$kotlin_stdlib() -> isReadOnly$kotlin_stdlib
    12:12:java.util.Set keySet() -> keySet
    458:458:kotlin.collections.builders.MapBuilder$KeysItr keysIterator$kotlin_stdlib() -> keysIterator$kotlin_stdlib
    73:82:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    87:89:void putAll(java.util.Map) -> putAll
    430:438:boolean putAllEntries(java.util.Collection) -> putAllEntries
    415:426:boolean putEntry(java.util.Map$Entry) -> putEntry
    257:267:boolean putRehash(int) -> putRehash
    240:254:void rehash(int) -> rehash
    92:97:java.lang.Object remove(java.lang.Object) -> remove
    442:447:boolean removeEntry$kotlin_stdlib(java.util.Map$Entry) -> removeEntry$kotlin_stdlib
    342:386:void removeHashAt(int) -> removeHashAt
    327:331:int removeKey$kotlin_stdlib(java.lang.Object) -> removeKey$kotlin_stdlib
    335:339:void removeKeyAt(int) -> removeKeyAt
    451:455:boolean removeValue$kotlin_stdlib(java.lang.Object) -> removeValue$kotlin_stdlib
    191:195:boolean shouldCompact(int) -> shouldCompact
    12:12:int size() -> size
    159:169:java.lang.String toString() -> toString
    12:12:java.util.Collection values() -> values
    459:459:kotlin.collections.builders.MapBuilder$ValuesItr valuesIterator$kotlin_stdlib() -> valuesIterator$kotlin_stdlib
    57:60:java.lang.Object writeReplace() -> writeReplace
kotlin.collections.builders.MapBuilder$Companion -> kotlin.collections.builders.MapBuilder$Companion:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    462:462:void <init>() -> <init>
    462:462:int access$computeHashSize(kotlin.collections.builders.MapBuilder$Companion,int) -> access$computeHashSize
    462:462:int access$computeShift(kotlin.collections.builders.MapBuilder$Companion,int) -> access$computeShift
    468:468:int computeHashSize(int) -> computeHashSize
    470:470:int computeShift(int) -> computeShift
kotlin.collections.builders.MapBuilder$EntriesItr -> kotlin.collections.builders.MapBuilder$EntriesItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    519:519:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    519:519:java.lang.Object next() -> next
    522:526:kotlin.collections.builders.MapBuilder$EntryRef next() -> next
    538:546:void nextAppendString(java.lang.StringBuilder) -> nextAppendString
    530:534:int nextHashCode$kotlin_stdlib() -> nextHashCode$kotlin_stdlib
kotlin.collections.builders.MapBuilder$EntryRef -> kotlin.collections.builders.MapBuilder$EntryRef:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    549:551:void <init>(kotlin.collections.builders.MapBuilder,int) -> <init>
    568:570:boolean equals(java.lang.Object) -> equals
    554:554:java.lang.Object getKey() -> getKey
    557:557:java.lang.Object getValue() -> getValue
    572:572:int hashCode() -> hashCode
    560:564:java.lang.Object setValue(java.lang.Object) -> setValue
    574:574:java.lang.String toString() -> toString
kotlin.collections.builders.MapBuilder$Itr -> kotlin.collections.builders.MapBuilder$Itr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    473:473:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    474:474:kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib() -> <init>
    474:474:void <init>(kotlin.collections.builders.MapBuilder):474 -> <init>
    477:477:void setLastIndex$kotlin_stdlib(int) -> <init>
    477:477:void <init>(kotlin.collections.builders.MapBuilder):477 -> <init>
    473:481:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    476:476:void setIndex$kotlin_stdlib(int) -> getIndex$kotlin_stdlib
    476:476:int getIndex$kotlin_stdlib():476 -> getIndex$kotlin_stdlib
    477:477:void setLastIndex$kotlin_stdlib(int) -> getLastIndex$kotlin_stdlib
    477:477:int getLastIndex$kotlin_stdlib():477 -> getLastIndex$kotlin_stdlib
    474:474:kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib() -> getMap$kotlin_stdlib
    488:488:boolean hasNext() -> hasNext
    484:486:void initNext$kotlin_stdlib() -> initNext$kotlin_stdlib
    491:695:void remove() -> remove
    476:476:void setIndex$kotlin_stdlib(int) -> setIndex$kotlin_stdlib
    477:477:void setLastIndex$kotlin_stdlib(int) -> setLastIndex$kotlin_stdlib
kotlin.collections.builders.MapBuilder$KeysItr -> kotlin.collections.builders.MapBuilder$KeysItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    498:498:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    500:504:java.lang.Object next() -> next
kotlin.collections.builders.MapBuilder$ValuesItr -> kotlin.collections.builders.MapBuilder$ValuesItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    509:509:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    511:515:java.lang.Object next() -> next
kotlin.collections.builders.MapBuilderEntries -> kotlin.collections.builders.MapBuilderEntries:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    632:634:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    632:632:boolean add(java.lang.Object) -> add
    640:640:boolean add(java.util.Map$Entry) -> add
    641:641:boolean addAll(java.util.Collection) -> addAll
    639:639:void clear() -> clear
    644:644:boolean containsAll(java.util.Collection) -> containsAll
    638:638:boolean containsEntry(java.util.Map$Entry) -> containsEntry
    636:636:int getSize() -> getSize
    637:637:boolean isEmpty() -> isEmpty
    643:643:java.util.Iterator iterator() -> iterator
    642:642:boolean remove(java.util.Map$Entry) -> remove
    647:648:boolean removeAll(java.util.Collection) -> removeAll
    652:653:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.MapBuilderKeys -> kotlin.collections.builders.MapBuilderKeys:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    578:580:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    586:586:boolean add(java.lang.Object) -> add
    587:587:boolean addAll(java.util.Collection) -> addAll
    585:585:void clear() -> clear
    584:584:boolean contains(java.lang.Object) -> contains
    582:582:int getSize() -> getSize
    583:583:boolean isEmpty() -> isEmpty
    589:589:java.util.Iterator iterator() -> iterator
    588:588:boolean remove(java.lang.Object) -> remove
    592:593:boolean removeAll(java.util.Collection) -> removeAll
    597:598:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.MapBuilderValues -> kotlin.collections.builders.MapBuilderValues:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    602:604:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    609:609:boolean add(java.lang.Object) -> add
    610:610:boolean addAll(java.util.Collection) -> addAll
    611:611:void clear() -> clear
    608:608:boolean contains(java.lang.Object) -> contains
    606:606:int getSize() -> getSize
    607:607:boolean isEmpty() -> isEmpty
    612:612:java.util.Iterator iterator() -> iterator
    613:613:boolean remove(java.lang.Object) -> remove
    616:617:boolean removeAll(java.util.Collection) -> removeAll
    621:622:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.SerializedCollection -> kotlin.collections.builders.SerializedCollection:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    386:388:void <init>(java.util.Collection,int) -> <init>
    402:430:void readExternal(java.io.ObjectInput) -> readExternal
    406:430:void readExternal(java.io.ObjectInput) -> readExternal
    422:422:java.lang.Object readResolve() -> readResolve
    394:399:void writeExternal(java.io.ObjectOutput) -> writeExternal
kotlin.collections.builders.SerializedCollection$Companion -> kotlin.collections.builders.SerializedCollection$Companion:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    424:424:void <init>() -> <init>
kotlin.collections.builders.SerializedMap -> kotlin.collections.builders.SerializedMap:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    657:658:void <init>(java.util.Map) -> <init>
    673:686:void readExternal(java.io.ObjectInput) -> readExternal
    688:688:java.lang.Object readResolve() -> readResolve
    664:670:void writeExternal(java.io.ObjectOutput) -> writeExternal
kotlin.collections.builders.SerializedMap$Companion -> kotlin.collections.builders.SerializedMap$Companion:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    690:690:void <init>() -> <init>
kotlin.collections.builders.SetBuilder -> kotlin.collections.builders.SetBuilder:
# {"id":"sourceFile","fileName":"SetBuilder.kt"}
    10:12:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    14:14:void <init>() -> <init>
    16:16:void <init>(int) -> <init>
    33:33:boolean add(java.lang.Object) -> add
    38:39:boolean addAll(java.util.Collection) -> addAll
    19:20:java.util.Set build() -> build
    32:32:void clear() -> clear
    31:31:boolean contains(java.lang.Object) -> contains
    29:29:int getSize() -> getSize
    30:30:boolean isEmpty() -> isEmpty
    35:35:java.util.Iterator iterator() -> iterator
    34:34:boolean remove(java.lang.Object) -> remove
    43:44:boolean removeAll(java.util.Collection) -> removeAll
    48:49:boolean retainAll(java.util.Collection) -> retainAll
    24:27:java.lang.Object writeReplace() -> writeReplace
kotlin.coroutines.AbstractCoroutineContextElement -> kotlin.coroutines.AbstractCoroutineContextElement:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    14:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    14:14:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    14:14:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    14:14:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    14:14:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.AbstractCoroutineContextKey -> kotlin.coroutines.AbstractCoroutineContextKey:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    46:52:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1) -> <init>
    55:55:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key) -> isSubKey$kotlin_stdlib
    54:54:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element) -> tryCast$kotlin_stdlib
kotlin.coroutines.CombinedContext -> kotlin.coroutines.CombinedContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> <init>
    111:111:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):111 -> <init>
    112:114:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    153:153:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> contains
    156:163:boolean containsAll(kotlin.coroutines.CombinedContext) -> containsAll
    169:169:boolean equals(java.lang.Object) -> equals
    131:131:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    118:197:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    171:171:int hashCode() -> hashCode
    134:197:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    144:148:int size() -> size
    174:176:java.lang.String toString() -> toString
    179:185:java.lang.Object writeReplace() -> writeReplace
kotlin.coroutines.CombinedContext$Serialized -> kotlin.coroutines.CombinedContext$Serialized:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    188:188:kotlin.coroutines.CoroutineContext[] getElements() -> <init>
    188:188:void <init>(kotlin.coroutines.CoroutineContext[]):188 -> <init>
    193:193:java.lang.Object readResolve() -> readResolve
    12990:12991:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> readResolve
    12990:12991:java.lang.Object readResolve():193 -> readResolve
    193:193:java.lang.Object readResolve() -> readResolve
    12991:12992:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> readResolve
    12991:12992:java.lang.Object readResolve():193 -> readResolve
    193:193:java.lang.Object readResolve() -> readResolve
kotlin.coroutines.CombinedContext$Serialized$Companion -> kotlin.coroutines.CombinedContext$Serialized$Companion:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    189:189:void <init>() -> <init>
kotlin.coroutines.CombinedContext$toString$1 -> kotlin.coroutines.CombinedContext$toString$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    174:174:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    175:175:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.CombinedContext$writeReplace$1 -> kotlin.coroutines.CombinedContext$writeReplace$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    182:182:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    182:182:void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.Continuation -> kotlin.coroutines.Continuation:
# {"id":"sourceFile","fileName":"Continuation.kt"}
kotlin.coroutines.ContinuationInterceptor -> kotlin.coroutines.ContinuationInterceptor:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> kotlin.coroutines.ContinuationInterceptor$DefaultImpls:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    55:60:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> get
    67:70:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlin.coroutines.ContinuationInterceptor$Key -> kotlin.coroutines.ContinuationInterceptor$Key:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    24:24:void <init>() -> <init>
kotlin.coroutines.ContinuationKt -> kotlin.coroutines.ContinuationKt:
# {"id":"sourceFile","fileName":"Continuation.kt"}
    129:130:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutine
kotlin.coroutines.CoroutineContext -> kotlin.coroutines.CoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> kotlin.coroutines.CoroutineContext$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    31:43:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Element -> kotlin.coroutines.CoroutineContext$Element:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.CoroutineContext$Element$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    67:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> get
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    59:74:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Key -> kotlin.coroutines.CoroutineContext$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$plus$1 -> kotlin.coroutines.CoroutineContext$plus$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:40:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.EmptyCoroutineContext -> kotlin.coroutines.EmptyCoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    94:94:void <init>() -> <init>
    100:100:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    99:99:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    103:103:int hashCode() -> hashCode
    102:102:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    101:101:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    97:97:java.lang.Object readResolve() -> readResolve
    104:104:java.lang.String toString() -> toString
kotlin.coroutines.intrinsics.CoroutineSingletons -> kotlin.coroutines.intrinsics.CoroutineSingletons:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    64:64:void <clinit>() -> <clinit>
    62:64:void <init>(java.lang.String,int) -> <init>
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    122:126:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):126 -> createCoroutineUnintercepted
    123:123:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    143:143:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1 -> R8$$REMOVED$$CLASS$$4:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2 -> R8$$REMOVED$$CLASS$$5:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    168:168:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.<init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    168:168:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object):168 -> <init>
    172:172:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    172:172:java.lang.Object invokeSuspend(java.lang.Object):172 -> invokeSuspend
    180:180:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    180:180:java.lang.Object invokeSuspend(java.lang.Object):180 -> invokeSuspend
    182:182:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    182:182:java.lang.Object invokeSuspend(java.lang.Object):182 -> invokeSuspend
    179:179:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    179:179:java.lang.Object invokeSuspend(java.lang.Object):179 -> invokeSuspend
    180:180:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    180:180:java.lang.Object invokeSuspend(java.lang.Object):180 -> invokeSuspend
    174:174:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    174:174:java.lang.Object invokeSuspend(java.lang.Object):174 -> invokeSuspend
    175:175:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    175:175:java.lang.Object invokeSuspend(java.lang.Object):175 -> invokeSuspend
    176:176:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    176:176:java.lang.Object invokeSuspend(java.lang.Object):176 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    176:176:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    176:176:java.lang.Object invokeSuspend(java.lang.Object):176 -> invokeSuspend
    183:183:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    183:183:java.lang.Object invokeSuspend(java.lang.Object):183 -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    186:186:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.<init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    186:186:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object):186 -> <init>
    190:190:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object invokeSuspend(java.lang.Object):190 -> invokeSuspend
    198:198:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    198:198:java.lang.Object invokeSuspend(java.lang.Object):198 -> invokeSuspend
    200:200:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    200:200:java.lang.Object invokeSuspend(java.lang.Object):200 -> invokeSuspend
    197:197:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    197:197:java.lang.Object invokeSuspend(java.lang.Object):197 -> invokeSuspend
    198:198:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    198:198:java.lang.Object invokeSuspend(java.lang.Object):198 -> invokeSuspend
    192:192:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    192:192:java.lang.Object invokeSuspend(java.lang.Object):192 -> invokeSuspend
    193:193:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    193:193:java.lang.Object invokeSuspend(java.lang.Object):193 -> invokeSuspend
    194:194:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    194:194:java.lang.Object invokeSuspend(java.lang.Object):194 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    194:194:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    194:194:java.lang.Object invokeSuspend(java.lang.Object):194 -> invokeSuspend
    201:201:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    201:201:java.lang.Object invokeSuspend(java.lang.Object):201 -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    57:57:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> kotlin.coroutines.jvm.internal.BaseContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    14:18:void <init>(kotlin.coroutines.Continuation) -> <init>
    64:64:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    73:73:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    18:18:kotlin.coroutines.Continuation getCompletion() -> getCompletion
    76:76:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    57:57:void releaseIntercepted() -> releaseIntercepted
    23:49:void resumeWith(java.lang.Object) -> resumeWith
    68:68:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.CompletedContinuation -> kotlin.coroutines.jvm.internal.CompletedContinuation:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    124:124:void <init>() -> <init>
    126:126:kotlin.coroutines.CoroutineContext getContext() -> getContext
    129:129:void resumeWith(java.lang.Object) -> resumeWith
    132:132:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> kotlin.coroutines.jvm.internal.ContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    98:101:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    102:102:void <init>(kotlin.coroutines.Continuation) -> <init>
    105:105:kotlin.coroutines.CoroutineContext getContext() -> getContext
    111:169:kotlin.coroutines.Continuation intercepted() -> intercepted
    116:121:void releaseIntercepted() -> releaseIntercepted
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> kotlin.coroutines.jvm.internal.CoroutineStackFrame:
# {"id":"sourceFile","fileName":"CoroutineStackFrame.kt"}
kotlin.coroutines.jvm.internal.DebugMetadata -> kotlin.coroutines.jvm.internal.DebugMetadata:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
kotlin.coroutines.jvm.internal.DebugMetadataKt -> kotlin.coroutines.jvm.internal.DebugMetadataKt:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    102:105:void checkDebugMetadataVersion(int,int) -> checkDebugMetadataVersion
    90:90:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getDebugMetadataAnnotation
    93:99:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getLabel
    42:48:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getStackTraceElement
kotlin.coroutines.jvm.internal.DebugProbesKt -> kotlin.coroutines.jvm.internal.DebugProbesKt:
# {"id":"sourceFile","fileName":"DebugProbes.kt"}
    47:47:kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation) -> probeCoroutineCreated
    66:66:void probeCoroutineResumed(kotlin.coroutines.Continuation) -> probeCoroutineResumed
    82:82:void probeCoroutineSuspended(kotlin.coroutines.Continuation) -> probeCoroutineSuspended
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> kotlin.coroutines.jvm.internal.ModuleNameRetriever:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    61:61:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    76:135:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> buildCache
    84:135:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> buildCache
    66:72:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getModuleName
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    52:57:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> kotlin.coroutines.jvm.internal.RestrictedContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    81:90:void <init>(kotlin.coroutines.Continuation) -> <init>
    93:93:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda -> kotlin.coroutines.jvm.internal.RestrictedSuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    141:144:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    142:142:int getArity() -> getArity
    148:151:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.SuspendLambda -> kotlin.coroutines.jvm.internal.SuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    156:159:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    157:157:int getArity() -> getArity
    163:166:java.lang.String toString() -> toString
kotlin.internal.PlatformImplementations -> kotlin.internal.PlatformImplementations:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    13:13:void <init>() -> <init>
    32:33:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    45:45:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
kotlin.internal.PlatformImplementations$ReflectThrowable -> kotlin.internal.PlatformImplementations$ReflectThrowable:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    21:94:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> kotlin.internal.PlatformImplementationsKt:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    50:64:void <clinit>() -> <clinit>
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
# {"id":"sourceFile","fileName":"progressionUtil.kt"}
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    45:49:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    48:49:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    10:11:int mod(int,int) -> mod
kotlin.internal.jdk7.JDK7PlatformImplementations -> kotlin.internal.jdk7.JDK7PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    11:11:void <init>() -> <init>
    27:30:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    22:22:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    15:19:void <clinit>() -> <clinit>
    15:19:void <clinit>() -> <clinit>
    19:39:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
kotlin.internal.jdk8.JDK8PlatformImplementations -> kotlin.internal.jdk8.JDK8PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    27:27:void <init>() -> <init>
    58:58:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    40:40:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    33:37:void <clinit>() -> <clinit>
    33:37:void <clinit>() -> <clinit>
    37:62:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
kotlin.io.CloseableKt -> kotlin.io.CloseableKt:
# {"id":"sourceFile","fileName":"Closeable.kt"}
    54:63:void closeFinally(java.io.Closeable,java.lang.Throwable) -> closeFinally
kotlin.jvm.JvmClassMappingKt -> kotlin.jvm.JvmClassMappingKt:
# {"id":"sourceFile","fileName":"JvmClassMapping.kt"}
    29:29:java.lang.Class getJavaClass(kotlin.reflect.KClass) -> getJavaClass
    59:72:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> getJavaObjectType
kotlin.jvm.functions.Function0 -> kotlin.jvm.functions.Function0:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function1 -> kotlin.jvm.functions.Function1:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function10 -> kotlin.jvm.functions.Function10:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function11 -> kotlin.jvm.functions.Function11:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function12 -> kotlin.jvm.functions.Function12:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function13 -> kotlin.jvm.functions.Function13:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function14 -> kotlin.jvm.functions.Function14:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function15 -> kotlin.jvm.functions.Function15:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function16 -> kotlin.jvm.functions.Function16:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function17 -> kotlin.jvm.functions.Function17:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function18 -> kotlin.jvm.functions.Function18:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function19 -> kotlin.jvm.functions.Function19:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> kotlin.jvm.functions.Function2:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function20 -> kotlin.jvm.functions.Function20:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function21 -> kotlin.jvm.functions.Function21:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function22 -> kotlin.jvm.functions.Function22:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function3 -> kotlin.jvm.functions.Function3:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function4 -> kotlin.jvm.functions.Function4:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function5 -> kotlin.jvm.functions.Function5:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function6 -> kotlin.jvm.functions.Function6:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function7 -> kotlin.jvm.functions.Function7:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function8 -> kotlin.jvm.functions.Function8:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function9 -> kotlin.jvm.functions.Function9:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.internal.ArrayIterator -> kotlin.jvm.internal.ArrayIterator:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    8:8:void <init>(java.lang.Object[]) -> <init>
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
kotlin.jvm.internal.ArrayIteratorKt -> kotlin.jvm.internal.ArrayIteratorKt:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> iterator
kotlin.jvm.internal.CallableReference -> kotlin.jvm.internal.CallableReference:
# {"id":"sourceFile","fileName":"CallableReference.java"}
    48:48:void <clinit>() -> <clinit>
    69:75:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean) -> <init>
    86:91:kotlin.reflect.KCallable compute() -> compute
    81:81:java.lang.Object getBoundReceiver() -> getBoundReceiver
    120:120:java.lang.String getName() -> getName
    111:112:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    132:132:java.lang.String getSignature() -> getSignature
kotlin.jvm.internal.CallableReference$NoReceiver -> kotlin.jvm.internal.CallableReference$NoReceiver:
# {"id":"sourceFile","fileName":"CallableReference.java"}
    52:52:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:kotlin.jvm.internal.CallableReference$NoReceiver access$000() -> access$000
    55:55:java.lang.Object readResolve() -> readResolve
kotlin.jvm.internal.ClassBasedDeclarationContainer -> kotlin.jvm.internal.ClassBasedDeclarationContainer:
# {"id":"sourceFile","fileName":"ClassBasedDeclarationContainer.kt"}
kotlin.jvm.internal.ClassReference -> kotlin.jvm.internal.ClassReference:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    101:107:void <clinit>() -> <clinit>
    107:107:void <clinit>() -> <clinit>
    1559:1559:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> <clinit>
    1559:1559:void <clinit>():107 -> <clinit>
    1590:1592:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1590:1592:void <clinit>():107 -> <clinit>
    107:107:void <clinit>() -> <clinit>
    1592:1593:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1592:1593:void <clinit>():107 -> <clinit>
    1559:1559:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> <clinit>
    1559:1559:void <clinit>():107 -> <clinit>
    107:155:void <clinit>() -> <clinit>
    1253:1254:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1253:1254:void <clinit>():155 -> <clinit>
    156:156:void <clinit>() -> <clinit>
    1254:1256:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1254:1256:void <clinit>():155 -> <clinit>
    132:163:void <clinit>() -> <clinit>
    442:442:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    442:442:void <clinit>():163 -> <clinit>
    392:392:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    392:392:void <clinit>():163 -> <clinit>
    1238:1239:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1238:1239:void <clinit>():163 -> <clinit>
    392:392:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    392:392:void <clinit>():163 -> <clinit>
    1239:1239:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1239:1239:void <clinit>():163 -> <clinit>
    163:163:void <clinit>() -> <clinit>
    1239:1241:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1239:1241:void <clinit>():163 -> <clinit>
    392:392:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    392:392:void <clinit>():163 -> <clinit>
    442:442:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    442:442:void <clinit>():163 -> <clinit>
    163:163:void <clinit>() -> <clinit>
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> <init>
    10:10:void <init>(java.lang.Class):10 -> <init>
    91:91:boolean equals(java.lang.Object) -> equals
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> getJClass
    10:10:java.lang.Class getJClass():10 -> getJClass
    94:94:int hashCode() -> hashCode
    97:97:java.lang.String toString() -> toString
kotlin.jvm.internal.ClassReference$Companion -> kotlin.jvm.internal.ClassReference$Companion:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    99:99:void <init>() -> <init>
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    14:14:void <clinit>() -> <clinit>
    26:26:java.lang.Object[] kotlin.ArrayIntrinsicsKt.emptyArray() -> <clinit>
    26:26:void <clinit>():14 -> <clinit>
    14:14:void <clinit>() -> <clinit>
    19:19:java.lang.Object[] toArray(java.util.Collection) -> toArray
    57:58:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:58:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    58:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    58:60:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    60:61:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    60:61:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    22:22:java.lang.Object[] toArray(java.util.Collection) -> toArray
    61:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    61:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    23:23:java.lang.Object[] toArray(java.util.Collection) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    24:24:java.lang.Object[] toArray(java.util.Collection) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    30:31:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:58:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:58:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:35:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    58:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    58:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:35:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    60:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    60:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    31:31:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    61:61:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    61:61:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    39:39:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    61:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    61:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    42:46:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    31:31:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    30:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
kotlin.jvm.internal.DefaultConstructorMarker -> kotlin.jvm.internal.DefaultConstructorMarker:
# {"id":"sourceFile","fileName":"DefaultConstructorMarker.java"}
kotlin.jvm.internal.FunctionBase -> kotlin.jvm.internal.FunctionBase:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.FunctionReference -> kotlin.jvm.internal.FunctionReference:
# {"id":"sourceFile","fileName":"FunctionReference.java"}
    50:53:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    69:69:kotlin.reflect.KCallable computeReflected() -> computeReflected
    104:118:boolean equals(java.lang.Object) -> equals
    57:57:int getArity() -> getArity
    123:123:int hashCode() -> hashCode
    128:136:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> kotlin.jvm.internal.FunctionReferenceImpl:
# {"id":"sourceFile","fileName":"FunctionReferenceImpl.java"}
    24:25:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
# {"id":"sourceFile","fileName":"Intrinsics.java"}
    169:169:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    24:27:void checkNotNull(java.lang.Object) -> checkNotNull
    30:33:void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    92:95:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    130:133:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    165:165:int compare(int,int) -> compare
    144:157:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> createParameterIsNullExceptionMessage
    253:253:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    257:269:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    45:45:void throwJavaNpe() -> throwJavaNpe
    50:50:void throwJavaNpe(java.lang.String) -> throwJavaNpe
    140:140:void throwParameterIsNullNPE(java.lang.String) -> throwParameterIsNullNPE
    54:54:void throwUninitializedProperty(java.lang.String) -> throwUninitializedProperty
    58:59:void throwUninitializedPropertyAccessException(java.lang.String) -> throwUninitializedPropertyAccessException
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.PackageReference -> kotlin.jvm.internal.PackageReference:
# {"id":"sourceFile","fileName":"PackageReference.kt"}
    10:13:void <init>(java.lang.Class,java.lang.String) -> <init>
    19:19:boolean equals(java.lang.Object) -> equals
    12:12:java.lang.Class getJClass() -> getJClass
    22:22:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference -> kotlin.jvm.internal.PropertyReference:
# {"id":"sourceFile","fileName":"PropertyReference.java"}
    31:34:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    47:47:kotlin.reflect.KCallable compute() -> compute
    64:75:boolean equals(java.lang.Object) -> equals
    80:80:int hashCode() -> hashCode
    85:90:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference0 -> kotlin.jvm.internal.PropertyReference0:
# {"id":"sourceFile","fileName":"PropertyReference0.java"}
    25:26:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    35:35:java.lang.Object invoke() -> invoke
kotlin.jvm.internal.PropertyReference0Impl -> kotlin.jvm.internal.PropertyReference0Impl:
# {"id":"sourceFile","fileName":"PropertyReference0Impl.java"}
    29:30:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.Ref$IntRef -> kotlin.jvm.internal.Ref$IntRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    40:40:void <init>() -> <init>
    45:45:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> kotlin.jvm.internal.Ref$ObjectRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    13:13:void <init>() -> <init>
    18:18:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
# {"id":"sourceFile","fileName":"Reflection.java"}
    26:32:void <clinit>() -> <clinit>
    32:39:void <clinit>() -> <clinit>
    90:90:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    60:60:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    51:51:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class) -> getOrCreateKotlinPackage
    96:96:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    79:79:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    84:84:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
# {"id":"sourceFile","fileName":"ReflectionFactory.java"}
    14:14:void <init>() -> <init>
    51:51:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    30:30:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    26:26:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    57:57:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.StringCompanionObject -> kotlin.jvm.internal.StringCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    110:110:void <init>() -> <init>
kotlin.jvm.internal.TypeIntrinsics -> kotlin.jvm.internal.TypeIntrinsics:
# {"id":"sourceFile","fileName":"TypeIntrinsics.java"}
    341:344:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int) -> beforeCheckcastToFunctionOfArity
    258:331:int getFunctionArity(java.lang.Object) -> getFunctionArity
    336:336:boolean isFunctionOfArity(java.lang.Object,int) -> isFunctionOfArity
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    21:23:void throwCce(java.lang.Object,java.lang.String) -> throwCce
    26:26:void throwCce(java.lang.String) -> throwCce
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> throwCce
kotlin.random.AbstractPlatformRandom -> kotlin.random.AbstractPlatformRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    35:35:void <init>() -> <init>
    41:41:int nextInt() -> nextInt
kotlin.random.FallbackThreadLocalRandom -> kotlin.random.FallbackThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    50:51:void <init>() -> <init>
    56:56:java.util.Random getImpl() -> getImpl
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> kotlin.random.FallbackThreadLocalRandom$implStorage$1:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    52:52:java.util.Random initialValue() -> initialValue
kotlin.random.Random -> kotlin.random.Random:
# {"id":"sourceFile","fileName":"Random.kt"}
    271:271:void <clinit>() -> <clinit>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> <init>
    19:19:void <init>():19 -> <init>
    20:20:void <init>() -> <init>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> access$getDefaultRandom$cp
kotlin.random.Random$Default -> kotlin.random.Random$Default:
# {"id":"sourceFile","fileName":"Random.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    270:270:void <init>() -> <init>
    282:282:int nextInt() -> nextInt
    279:279:java.lang.Object writeReplace() -> writeReplace
kotlin.random.Random$Default$Serialized -> kotlin.random.Random$Default$Serialized:
# {"id":"sourceFile","fileName":"Random.kt"}
    273:273:void <init>() -> <init>
    276:276:java.lang.Object readResolve() -> readResolve
kotlin.random.jdk8.PlatformThreadLocalRandom -> kotlin.random.jdk8.PlatformThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformThreadLocalRandom.kt"}
    11:11:void <init>() -> <init>
    13:13:java.util.Random getImpl() -> getImpl
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    77:102:void <init>(int,int,int) -> <init>
    115:116:boolean equals(java.lang.Object) -> equals
    92:92:int getFirst() -> getFirst
    97:97:int getLast() -> getLast
    102:102:int getStep() -> getStep
    119:119:int hashCode() -> hashCode
    112:112:boolean isEmpty() -> isEmpty
    77:77:java.util.Iterator iterator() -> iterator
    104:104:kotlin.collections.IntIterator iterator() -> iterator
    121:121:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:123:void <init>() -> <init>
    132:132:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    38:41:void <init>(int,int,int) -> <init>
    43:43:boolean hasNext() -> hasNext
    46:54:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    86:86:void <clinit>() -> <clinit>
    54:54:void <init>(int,int) -> <init>
    53:53:kotlin.ranges.IntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    66:66:boolean contains(int) -> contains
    76:77:boolean equals(java.lang.Object) -> equals
    56:56:java.lang.Integer getEndInclusive() -> getEndInclusive
    55:55:java.lang.Integer getStart() -> getStart
    80:80:int hashCode() -> hashCode
    73:73:boolean isEmpty() -> isEmpty
    82:82:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    84:84:void <init>() -> <init>
    86:86:kotlin.ranges.IntRange getEMPTY() -> getEMPTY
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
# {"id":"sourceFile","fileName":"Ranges.kt"}
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    1244:1244:int coerceAtLeast(int,int) -> coerceAtLeast
    1255:1255:long coerceAtLeast(long,long) -> coerceAtLeast
    1321:1321:int coerceAtMost(int,int) -> coerceAtMost
    1332:1332:long coerceAtMost(long,long) -> coerceAtMost
    1413:1416:int coerceIn(int,int,int) -> coerceIn
    828:828:kotlin.ranges.IntProgression downTo(int,int) -> downTo
    1094:1095:kotlin.ranges.IntRange until(int,int) -> until
kotlin.reflect.KCallable -> kotlin.reflect.KCallable:
# {"id":"sourceFile","fileName":"KCallable.kt"}
kotlin.reflect.KClass -> kotlin.reflect.KClass:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.reflect.KDeclarationContainer -> kotlin.reflect.KDeclarationContainer:
# {"id":"sourceFile","fileName":"KDeclarationContainer.kt"}
kotlin.reflect.KFunction -> kotlin.reflect.KFunction:
# {"id":"sourceFile","fileName":"KFunction.kt"}
kotlin.reflect.KProperty -> kotlin.reflect.KProperty:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty0 -> kotlin.reflect.KProperty0:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.sequences.ConstrainedOnceSequence -> kotlin.sequences.ConstrainedOnceSequence:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:24:java.util.Iterator iterator() -> iterator
kotlin.sequences.Sequence -> kotlin.sequences.Sequence:
# {"id":"sourceFile","fileName":"Sequence.kt"}
kotlin.sequences.SequenceBuilderIterator -> kotlin.sequences.SequenceBuilderIterator:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    104:104:void <init>() -> <init>
    155:159:java.lang.Throwable exceptionalState() -> exceptionalState
    188:188:kotlin.coroutines.CoroutineContext getContext() -> getContext
    111:129:boolean hasNext() -> hasNext
    134:147:java.lang.Object next() -> next
    152:152:java.lang.Object nextNotReady() -> nextNotReady
    183:185:void resumeWith(java.lang.Object) -> resumeWith
    108:108:void setNextStep(kotlin.coroutines.Continuation) -> setNextStep
    163:167:java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation) -> yield
    172:177:java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequenceScope -> kotlin.sequences.SequenceScope:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    51:53:void <init>() -> <init>
    92:92:java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequencesKt__SequenceBuilderKt -> kotlin.sequences.SequencesKt__SequenceBuilderKt:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    37:39:java.util.Iterator iterator(kotlin.jvm.functions.Function2) -> iterator
    26:26:kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> sequence
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(kotlin.jvm.functions.Function2):21 -> <init>
    22:22:java.util.Iterator kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.iterator() -> iterator
    22:22:java.util.Iterator iterator():22 -> iterator
    26:26:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequenceBuilderKt.sequence(kotlin.jvm.functions.Function2) -> iterator
    26:26:java.util.Iterator iterator():681 -> iterator
    22:22:java.util.Iterator kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.iterator() -> iterator
    22:22:java.util.Iterator iterator():22 -> iterator
kotlin.sequences.SequencesKt__SequencesJVMKt -> kotlin.sequences.SequencesKt__SequencesJVMKt:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
kotlin.sequences.SequencesKt__SequencesKt -> kotlin.sequences.SequencesKt__SequencesKt:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    30:30:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
    626:626:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1 -> R8$$REMOVED$$CLASS$$6:
# {"id":"sourceFile","fileName":"Sequences.kt"}
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.util.Iterator):21 -> <init>
    22:22:java.util.Iterator kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.iterator() -> iterator
    22:22:java.util.Iterator iterator():22 -> iterator
    30:30:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequencesKt.asSequence(java.util.Iterator) -> iterator
    30:30:java.util.Iterator iterator():681 -> iterator
    22:22:java.util.Iterator kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.iterator() -> iterator
    22:22:java.util.Iterator iterator():22 -> iterator
kotlin.sequences.SequencesKt___SequencesJvmKt -> kotlin.sequences.SequencesKt___SequencesJvmKt:
# {"id":"sourceFile","fileName":"_SequencesJvm.kt"}
kotlin.sequences.SequencesKt___SequencesKt -> kotlin.sequences.SequencesKt___SequencesKt:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    2903:2903:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
    787:790:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> toCollection
    808:808:java.util.List toList(kotlin.sequences.Sequence) -> toList
    817:817:java.util.List toMutableList(kotlin.sequences.Sequence) -> toMutableList
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void kotlin.collections.CollectionsKt__IterablesKt$Iterable$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    16:16:void <init>(kotlin.sequences.Sequence):16 -> <init>
    17:17:java.util.Iterator kotlin.collections.CollectionsKt__IterablesKt$Iterable$1.iterator() -> iterator
    17:17:java.util.Iterator iterator():17 -> iterator
    2903:2903:java.lang.Iterable kotlin.sequences.SequencesKt___SequencesKt.asIterable(kotlin.sequences.Sequence) -> iterator
    2903:2903:java.util.Iterator iterator():71 -> iterator
    17:17:java.util.Iterator kotlin.collections.CollectionsKt__IterablesKt$Iterable$1.iterator() -> iterator
    17:17:java.util.Iterator iterator():17 -> iterator
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
    313:316:int checkRadix(int) -> checkRadix
    306:306:int digitOf(char,int) -> digitOf
    98:98:boolean isWhitespace(char) -> isWhitespace
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
# {"id":"sourceFile","fileName":"Char.kt"}
    234:240:boolean equals(char,char,boolean) -> equals
kotlin.text.DelimitedRangesSequence -> kotlin.text.DelimitedRangesSequence:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1171:1175:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1171:1171:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> access$getGetNextMatch$p
    1171:1171:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> access$getInput$p
    1171:1171:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> access$getLimit$p
    1171:1171:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> access$getStartIndex$p
    1178:1226:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> kotlin.text.DelimitedRangesSequence$iterator$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1178:1181:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1186:1207:void calcNext() -> calcNext
    1222:1224:boolean hasNext() -> hasNext
    1178:1178:java.lang.Object next() -> next
    1210:1218:kotlin.ranges.IntRange next() -> next
kotlin.text.StringsKt__AppendableKt -> kotlin.text.StringsKt__AppendableKt:
# {"id":"sourceFile","fileName":"Appendable.kt"}
    84:90:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
# {"id":"sourceFile","fileName":"Indent.kt"}
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
    132:132:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
    142:199:java.lang.Long toLongOrNull(java.lang.String,int) -> toLongOrNull
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    54:59:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    1726:1727:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> isBlank
    1726:1727:boolean isBlank(java.lang.CharSequence):621 -> isBlank
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    1727:1728:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> isBlank
    1727:1728:boolean isBlank(java.lang.CharSequence):621 -> isBlank
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    653:656:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    70:73:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    1174:1174:void kotlin.text.StringsKt___StringsKt.forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replace
    1174:1174:java.lang.String replace(java.lang.String,char,char,boolean):73 -> replace
    74:75:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    1174:1175:void kotlin.text.StringsKt___StringsKt.forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replace
    1174:1175:java.lang.String replace(java.lang.String,char,char,boolean):73 -> replace
    72:76:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    87:105:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> replace
    68:68:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
    86:86:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
    417:420:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    416:416:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> access$findAnyOf
    1145:1148:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1144:1144:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
    993:1003:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1003 -> findAnyOf$StringsKt__StringsKt
    1003:1003:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:289:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:289:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1003 -> findAnyOf$StringsKt__StringsKt
    1002:1009:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1009 -> findAnyOf$StringsKt__StringsKt
    1009:1009:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:289:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:289:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1009 -> findAnyOf$StringsKt__StringsKt
    1008:1015:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    373:373:kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> getIndices
    379:379:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    1087:1090:int indexOf(java.lang.CharSequence,char,int,boolean) -> indexOf
    1102:1105:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    973:989:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    972:972:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    1086:1086:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
    1101:1101:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    933:940:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    12824:12824:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> indexOfAny
    12824:12824:int indexOfAny(java.lang.CharSequence,char[],int,boolean):940 -> indexOfAny
    940:940:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    12824:12825:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> indexOfAny
    12824:12825:int indexOfAny(java.lang.CharSequence,char[],int,boolean):940 -> indexOfAny
    940:943:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    1117:1120:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> lastIndexOf
    1132:1135:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> lastIndexOf
    1116:1116:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    1131:1131:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    956:964:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    12824:12824:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> lastIndexOfAny
    12824:12824:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):964 -> lastIndexOfAny
    964:964:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    12824:12825:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> lastIndexOfAny
    12824:12825:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):964 -> lastIndexOfAny
    962:968:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    1263:1266:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1262:1262:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    821:829:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    1271:1626:void requireNonNegativeLimit(int) -> requireNonNegativeLimit
    1302:1309:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> split
    1549:1549:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1620:1621:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1309:1309:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1621:1622:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1621:1622:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> split
    1549:1549:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1309:1309:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1346:1365:java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int) -> split$StringsKt__StringsKt
    1301:1301:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> split$default
    423:423:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> substring
    457:458:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> substringAfter
    456:456:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
    484:485:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
    483:483:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    430:431:java.lang.String substringBefore(java.lang.String,char,java.lang.String) -> substringBefore
    439:440:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String) -> substringBefore
    429:429:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
    438:438:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
    176:176:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    79:85:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    79:85:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
    176:176:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    85:100:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    85:100:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
    176:176:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:kotlin.Pair invoke(java.lang.CharSequence,int):1266 -> invoke
    1487:1487:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:kotlin.Pair invoke(java.lang.CharSequence,int):1266 -> invoke
kotlin.text.StringsKt___StringsKt -> R8$$REMOVED$$CLASS$$7:
# {"id":"sourceFile","fileName":"_Strings.kt"}
kotlinx.coroutines.AbstractCoroutine -> kotlinx.coroutines.AbstractCoroutine:
# {"id":"sourceFile","fileName":"AbstractCoroutine.kt"}
    37:58:void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean) -> <init>
    105:105:void afterResume(java.lang.Object) -> afterResume
    86:86:java.lang.String cancellationExceptionMessage() -> cancellationExceptionMessage
    58:58:kotlin.coroutines.CoroutineContext getContext() -> getContext
    63:63:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    108:109:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    65:65:boolean isActive() -> isActive
    112:113:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    84:84:void onCancelled(java.lang.Throwable,boolean) -> onCancelled
    71:71:void onCompleted(java.lang.Object) -> onCompleted
    90:94:void onCompletionInternal(java.lang.Object) -> onCompletionInternal
    100:103:void resumeWith(java.lang.Object) -> resumeWith
    126:127:void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2) -> start
kotlinx.coroutines.AbstractTimeSource -> kotlinx.coroutines.AbstractTimeSource:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
kotlinx.coroutines.AbstractTimeSourceKt -> kotlinx.coroutines.AbstractTimeSourceKt:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
    27:27:kotlinx.coroutines.AbstractTimeSource getTimeSource() -> getTimeSource
kotlinx.coroutines.Active -> kotlinx.coroutines.Active:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    627:627:void <init>() -> <init>
    628:628:java.lang.String toString() -> toString
kotlinx.coroutines.BlockingEventLoop -> kotlinx.coroutines.BlockingEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    25:27:void <init>(java.lang.Thread) -> <init>
    26:26:java.lang.Thread getThread() -> getThread
kotlinx.coroutines.BuildersKt -> kotlinx.coroutines.BuildersKt:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2) -> launch
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object) -> launch$default
    1:1:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
kotlinx.coroutines.BuildersKt__Builders_commonKt -> kotlinx.coroutines.BuildersKt__Builders_commonKt:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    52:57:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2) -> launch
    47:49:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object) -> launch$default
    146:166:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
    95:97:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> withContext
    95:97:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):166 -> withContext
    167:167:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> withContext
    99:99:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):166 -> withContext
    149:173:java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> withContext
kotlinx.coroutines.CancelFutureOnCancel -> kotlinx.coroutines.CancelFutureOnCancel:
# {"id":"sourceFile","fileName":"Future.kt"}
    45:45:void <init>(java.util.concurrent.Future) -> <init>
    45:45:java.lang.Object invoke(java.lang.Object) -> invoke
    49:50:void invoke(java.lang.Throwable) -> invoke
    51:51:java.lang.String toString() -> toString
kotlinx.coroutines.CancelHandler -> kotlinx.coroutines.CancelHandler:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    635:635:void <init>() -> <init>
kotlinx.coroutines.CancelHandlerBase -> kotlinx.coroutines.CancelHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
    15:15:void <init>() -> <init>
kotlinx.coroutines.CancellableContinuation -> kotlinx.coroutines.CancellableContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
kotlinx.coroutines.CancellableContinuationImpl -> kotlinx.coroutines.CancellableContinuationImpl:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    36:36:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    34:34:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> <init>
    34:34:void <init>(kotlin.coroutines.Continuation,int):34 -> <init>
    37:39:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    41:41:kotlin.coroutines.CoroutineContext getContext() -> <init>
    41:41:void <init>(kotlin.coroutines.Continuation,int):41 -> <init>
    72:72:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    24:24:int kotlinx.coroutines.CancellableContinuationImplKt.decisionAndIndex(int,int) -> <init>
    24:24:void <init>(kotlin.coroutines.Continuation,int):72 -> <init>
    33:83:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    559:559:java.lang.Void alreadyResumedError(java.lang.Object) -> alreadyResumedError
    249:249:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable) -> callCancelHandler
    230:231:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callCancelHandler
    230:231:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):249 -> callCancelHandler
    249:249:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable) -> callCancelHandler
    231:239:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callCancelHandler
    231:239:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):249 -> callCancelHandler
    249:249:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable) -> callCancelHandler
    258:267:void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable) -> callOnCancellation
    252:252:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable) -> callSegmentOnCancellation
    22:22:int kotlinx.coroutines.CancellableContinuationImplKt.getIndex(int) -> callSegmentOnCancellation
    22:22:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable):252 -> callSegmentOnCancellation
    252:254:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable) -> callSegmentOnCancellation
    230:231:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callSegmentOnCancellation
    230:231:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable):254 -> callSegmentOnCancellation
    254:254:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable) -> callSegmentOnCancellation
    231:239:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callSegmentOnCancellation
    231:239:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable):254 -> callSegmentOnCancellation
    253:663:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable) -> callSegmentOnCancellation
    206:218:boolean cancel(java.lang.Throwable) -> cancel
    173:663:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    199:201:boolean cancelLater(java.lang.Throwable) -> cancelLater
    572:575:void detachChild$kotlinx_coroutines_core() -> detachChild$kotlinx_coroutines_core
    565:566:void detachChildIfNonResuable() -> detachChildIfNonResuable
    472:475:void dispatchResume(int) -> dispatchResume
    164:164:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    41:41:kotlin.coroutines.CoroutineContext getContext() -> getContext
    273:273:java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job) -> getContinuationCancellationCause
    34:34:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> getDelegate$kotlinx_coroutines_core
    613:663:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    61:61:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> getExceptionalResult$kotlinx_coroutines_core
    61:61:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object):613 -> getExceptionalResult$kotlinx_coroutines_core
    613:613:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    106:106:kotlinx.coroutines.DisposableHandle getParentHandle() -> getParentHandle
    297:339:java.lang.Object getResult() -> getResult
    61:62:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> getResult
    61:62:java.lang.Object getResult():339 -> getResult
    329:342:java.lang.Object getResult() -> getResult
    61:62:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> getResult
    61:62:java.lang.Object getResult():329 -> getResult
    108:108:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    117:121:java.lang.String getStateDebugRepresentation() -> getStateDebugRepresentation
    605:608:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object) -> getSuccessfulResult$kotlinx_coroutines_core
    129:139:void initCancellability() -> initCancellability
    346:350:kotlinx.coroutines.DisposableHandle installParentHandle() -> installParentHandle
    13:13:kotlin.jvm.functions.Function1 kotlinx.coroutines.CompletionHandlerKt.getAsHandler(kotlinx.coroutines.CompletionHandlerBase) -> installParentHandle
    13:13:kotlinx.coroutines.DisposableHandle installParentHandle():350 -> installParentHandle
    348:353:kotlinx.coroutines.DisposableHandle installParentHandle() -> installParentHandle
    398:400:void invokeOnCancellation(kotlin.jvm.functions.Function1) -> invokeOnCancellation
    403:461:void invokeOnCancellationImpl(java.lang.Object) -> invokeOnCancellationImpl
    112:112:boolean isCompleted() -> isCompleted
    141:141:boolean isReusable() -> isReusable
    469:469:kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1) -> makeCancelHandler
    465:465:void multipleHandlersError(java.lang.Object,java.lang.Object) -> multipleHandlersError
    620:620:java.lang.String nameString() -> nameString
    223:227:void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable) -> parentCancelled$kotlinx_coroutines_core
    362:365:void releaseClaimedReusableContinuation$kotlinx_coroutines_core() -> releaseClaimedReusableContinuation$kotlinx_coroutines_core
    503:663:void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1) -> resumeImpl
    497:500:void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeImpl$default
    594:596:void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object) -> resumeUndispatched
    368:368:void resumeWith(java.lang.Object) -> resumeWith
    483:495:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object) -> resumedState
    495:495:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object) -> resumedState
    168:168:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    617:617:java.lang.String toString() -> toString
    287:287:boolean tryResume() -> tryResume
    21:21:int kotlinx.coroutines.CancellableContinuationImplKt.getDecision(int) -> tryResume
    21:21:boolean tryResume():287 -> tryResume
    287:290:boolean tryResume() -> tryResume
    22:22:int kotlinx.coroutines.CancellableContinuationImplKt.getIndex(int) -> tryResume
    22:22:boolean tryResume():288 -> tryResume
    288:288:boolean tryResume() -> tryResume
    24:24:int kotlinx.coroutines.CancellableContinuationImplKt.decisionAndIndex(int,int) -> tryResume
    24:24:boolean tryResume():288 -> tryResume
    288:292:boolean tryResume() -> tryResume
    277:277:boolean trySuspend() -> trySuspend
    21:21:int kotlinx.coroutines.CancellableContinuationImplKt.getDecision(int) -> trySuspend
    21:21:boolean trySuspend():277 -> trySuspend
    277:280:boolean trySuspend() -> trySuspend
    22:22:int kotlinx.coroutines.CancellableContinuationImplKt.getIndex(int) -> trySuspend
    22:22:boolean trySuspend():278 -> trySuspend
    278:278:boolean trySuspend() -> trySuspend
    24:24:int kotlinx.coroutines.CancellableContinuationImplKt.decisionAndIndex(int,int) -> trySuspend
    24:24:boolean trySuspend():278 -> trySuspend
    278:282:boolean trySuspend() -> trySuspend
kotlinx.coroutines.CancellableContinuationImplKt -> R8$$REMOVED$$CLASS$$8:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
kotlinx.coroutines.CancellableContinuationKt -> kotlinx.coroutines.CancellableContinuationKt:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    380:380:void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle) -> disposeOnCancellation
    19:19:kotlin.jvm.functions.Function1 kotlinx.coroutines.CompletionHandlerKt.getAsHandler(kotlinx.coroutines.CancelHandlerBase) -> disposeOnCancellation
    19:19:void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle):380 -> disposeOnCancellation
    380:380:void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle) -> disposeOnCancellation
kotlinx.coroutines.CancelledContinuation -> kotlinx.coroutines.CancelledContinuation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    59:64:void <init>(kotlin.coroutines.Continuation,java.lang.Throwable,boolean) -> <init>
    65:65:boolean makeResumed() -> makeResumed
kotlinx.coroutines.ChildContinuation -> kotlinx.coroutines.ChildContinuation:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1445:1448:void <init>(kotlinx.coroutines.CancellableContinuationImpl) -> <init>
    1444:1444:java.lang.Object invoke(java.lang.Object) -> invoke
    1450:1451:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.ChildHandle -> kotlinx.coroutines.ChildHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.ChildHandleNode -> kotlinx.coroutines.ChildHandleNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1435:1437:void <init>(kotlinx.coroutines.ChildJob) -> <init>
    1440:1440:boolean childCancelled(java.lang.Throwable) -> childCancelled
    1435:1435:java.lang.Object invoke(java.lang.Object) -> invoke
    1439:1439:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.ChildJob -> kotlinx.coroutines.ChildJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.CompletableJob -> kotlinx.coroutines.CompletableJob:
# {"id":"sourceFile","fileName":"CompletableJob.kt"}
kotlinx.coroutines.CompletedContinuation -> kotlinx.coroutines.CompletedContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    648:648:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    648:648:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):648 -> <init>
    649:649:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable) -> <init>
    650:650:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    650:650:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):650 -> <init>
    651:651:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    651:651:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):651 -> <init>
    652:652:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    652:652:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):652 -> <init>
    653:653:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    653:653:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):653 -> <init>
    648:648:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    648:648:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):648 -> <init>
    648:661:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    655:655:boolean getCancelled() -> getCancelled
    658:663:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable) -> invokeHandlers
    659:663:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable) -> invokeHandlers
kotlinx.coroutines.CompletedExceptionally -> kotlinx.coroutines.CompletedExceptionally:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    42:46:void <init>(java.lang.Throwable,boolean) -> <init>
    42:50:void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    47:47:boolean getHandled() -> getHandled
    48:48:boolean makeHandled() -> makeHandled
    49:49:java.lang.String toString() -> toString
kotlinx.coroutines.CompletedWithCancellation -> kotlinx.coroutines.CompletedWithCancellation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    31:33:void <init>(java.lang.Object,kotlin.jvm.functions.Function1) -> <init>
kotlinx.coroutines.CompletionHandlerBase -> kotlinx.coroutines.CompletionHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
    9:9:void <init>() -> <init>
kotlinx.coroutines.CompletionHandlerException -> kotlinx.coroutines.CompletionHandlerException:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.CompletionHandlerKt -> R8$$REMOVED$$CLASS$$9:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
kotlinx.coroutines.CompletionHandler_commonKt -> R8$$REMOVED$$CLASS$$10:
# {"id":"sourceFile","fileName":"CompletionHandler.common.kt"}
kotlinx.coroutines.CompletionStateKt -> kotlinx.coroutines.CompletionStateKt:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    26:27:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation) -> recoverResult
    61:61:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> recoverResult
    61:61:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation):27 -> recoverResult
    27:29:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation) -> recoverResult
    14:17:java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1) -> toState
    19:21:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> toState
    61:61:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> toState
    61:61:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation):21 -> toState
    19:22:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> toState
    12:13:java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> toState$default
kotlinx.coroutines.CoroutineContextKt -> kotlinx.coroutines.CoroutineContextKt:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    54:88:kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean) -> foldCopies
    276:276:java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext) -> getCoroutineName
    40:40:boolean hasCopyableElements(kotlin.coroutines.CoroutineContext) -> hasCopyableElements
    19:22:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext) -> newCoroutineContext
    35:36:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> newCoroutineContext
    147:152:kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame) -> undispatchedCompletion
    125:142:kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateUndispatchedCompletion
kotlinx.coroutines.CoroutineContextKt$foldCopies$1 -> kotlinx.coroutines.CoroutineContextKt$foldCopies$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    80:80:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    82:85:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 -> kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    63:63:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    64:64:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 -> kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    40:40:java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element) -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.CoroutineDispatcher -> kotlinx.coroutines.CoroutineDispatcher:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    31:32:void <init>() -> <init>
    31:31:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    159:159:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> interceptContinuation
    68:68:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    106:107:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int) -> limitedParallelism
    31:31:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    166:168:void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> releaseInterceptedContinuation
    185:185:java.lang.String toString() -> toString
kotlinx.coroutines.CoroutineDispatcher$Key -> kotlinx.coroutines.CoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    35:38:void <init>() -> <init>
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> kotlinx.coroutines.CoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    38:38:java.lang.Object invoke(java.lang.Object) -> invoke
    38:38:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineExceptionHandler -> kotlinx.coroutines.CoroutineExceptionHandler:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
kotlinx.coroutines.CoroutineExceptionHandler$Key -> kotlinx.coroutines.CoroutineExceptionHandler$Key:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    102:102:void <init>() -> <init>
kotlinx.coroutines.CoroutineExceptionHandlerKt -> kotlinx.coroutines.CoroutineExceptionHandlerKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    22:33:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineException
    36:38:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):38 -> handlerException
    37:39:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable) -> handlerException
kotlinx.coroutines.CoroutineScope -> kotlinx.coroutines.CoroutineScope:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
kotlinx.coroutines.CoroutineScopeKt -> kotlinx.coroutines.CoroutineScopeKt:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
    259:264:java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> coroutineScope
kotlinx.coroutines.CoroutineStart -> kotlinx.coroutines.CoroutineStart:
# {"id":"sourceFile","fileName":"CoroutineStart.kt"}
    37:76:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    109:114:void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> invoke
    122:122:boolean isLazy() -> isLazy
kotlinx.coroutines.CoroutineStart$WhenMappings -> kotlinx.coroutines.CoroutineStart$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineStart.kt"}
kotlinx.coroutines.CoroutinesInternalError -> kotlinx.coroutines.CoroutinesInternalError:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    28:28:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.DebugStringsKt -> kotlinx.coroutines.DebugStringsKt:
# {"id":"sourceFile","fileName":"DebugStrings.kt"}
    21:21:java.lang.String getClassSimpleName(java.lang.Object) -> getClassSimpleName
    13:13:java.lang.String getHexAddress(java.lang.Object) -> getHexAddress
    15:23:java.lang.String toDebugString(kotlin.coroutines.Continuation) -> toDebugString
    18:23:java.lang.String toDebugString(kotlin.coroutines.Continuation) -> toDebugString
kotlinx.coroutines.DefaultExecutor -> kotlinx.coroutines.DefaultExecutor:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    32:42:void <clinit>() -> <clinit>
    28:29:void <init>() -> <init>
    177:182:void acknowledgeShutdownIfNeeded() -> acknowledgeShutdownIfNeeded
    135:140:java.lang.Thread createThreadSync() -> createThreadSync
    69:71:void enqueue(java.lang.Runnable) -> enqueue
    50:50:java.lang.Thread getThread() -> getThread
    61:61:boolean isShutDown() -> isShutDown
    64:65:boolean isShutdownRequested() -> isShutdownRequested
    154:158:boolean notifyStartup() -> notifyStartup
    75:76:void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> reschedule
    102:130:void run() -> run
    115:130:void run() -> run
    121:130:void run() -> run
    130:130:void run() -> run
    85:87:void shutdown() -> shutdown
    79:79:void shutdownError() -> shutdownError
kotlinx.coroutines.DefaultExecutorKt -> kotlinx.coroutines.DefaultExecutorKt:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    11:14:void <clinit>() -> <clinit>
    14:14:kotlinx.coroutines.Delay getDefaultDelay() -> getDefaultDelay
    18:25:kotlinx.coroutines.Delay initializeDefaultDelay() -> initializeDefaultDelay
kotlinx.coroutines.Delay -> kotlinx.coroutines.Delay:
# {"id":"sourceFile","fileName":"Delay.kt"}
kotlinx.coroutines.DelayKt -> kotlinx.coroutines.DelayKt:
# {"id":"sourceFile","fileName":"Delay.kt"}
    126:127:java.lang.Object delay(long,kotlin.coroutines.Continuation) -> delay
    314:322:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> delay
    314:322:java.lang.Object delay(long,kotlin.coroutines.Continuation):127 -> delay
    129:132:java.lang.Object delay(long,kotlin.coroutines.Continuation) -> delay
    314:324:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> delay
    314:324:java.lang.Object delay(long,kotlin.coroutines.Continuation):127 -> delay
    127:127:java.lang.Object delay(long,kotlin.coroutines.Continuation) -> delay
    154:154:kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext) -> getDelay
kotlinx.coroutines.DispatchedCoroutine -> kotlinx.coroutines.DispatchedCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    222:225:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    255:256:void afterCompletion(java.lang.Object) -> afterCompletion
    259:262:void afterResume(java.lang.Object) -> afterResume
    265:270:java.lang.Object getResult$kotlinx_coroutines_core() -> getResult$kotlinx_coroutines_core
    244:249:boolean tryResume() -> tryResume
    234:239:boolean trySuspend() -> trySuspend
kotlinx.coroutines.DispatchedTask -> kotlinx.coroutines.DispatchedTask:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    51:54:void <init>(int) -> <init>
    81:81:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    71:71:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object) -> getSuccessfulResult$kotlinx_coroutines_core
    140:142:void handleFatalException$kotlinx_coroutines_core(java.lang.Throwable,java.lang.Throwable) -> handleFatalException$kotlinx_coroutines_core
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handleFatalException$kotlinx_coroutines_core
    75:75:void handleFatalException$kotlinx_coroutines_core(java.lang.Throwable,java.lang.Throwable):142 -> handleFatalException$kotlinx_coroutines_core
    145:149:void handleFatalException$kotlinx_coroutines_core(java.lang.Throwable,java.lang.Throwable) -> handleFatalException$kotlinx_coroutines_core
    84:90:void run() -> run
    107:116:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    107:116:void run():90 -> run
    91:99:void run() -> run
    118:118:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    118:118:void run():90 -> run
    100:103:void run() -> run
    220:220:void kotlinx.coroutines.DispatchedTaskKt.resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable) -> run
    220:220:void run():103 -> run
    61:61:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> run
    61:61:void run():103 -> run
    220:221:void kotlinx.coroutines.DispatchedTaskKt.resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable) -> run
    220:221:void run():103 -> run
    100:111:void run() -> run
    116:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    116:119:void run():90 -> run
    116:223:void run() -> run
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    118:119:void run():90 -> run
    112:223:void run() -> run
kotlinx.coroutines.DispatchedTaskKt -> kotlinx.coroutines.DispatchedTaskKt:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    153:170:void dispatch(kotlinx.coroutines.DispatchedTask,int) -> dispatch
    47:47:boolean isCancellableMode(int) -> isCancellableMode
    48:48:boolean isReusableMode(int) -> isReusableMode
    174:178:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith$kotlinx_coroutines_core(java.lang.Object) -> resume
    255:255:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):178 -> resume
    107:116:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    107:116:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):178 -> resume
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith$kotlinx_coroutines_core(java.lang.Object) -> resume
    256:257:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):178 -> resume
    116:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    116:119:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):178 -> resume
    258:258:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith$kotlinx_coroutines_core(java.lang.Object) -> resume
    258:258:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):178 -> resume
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    118:119:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):178 -> resume
    179:181:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    184:190:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    200:202:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    200:202:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):190 -> resumeUnconfined
    191:192:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    202:216:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    202:216:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):190 -> resumeUnconfined
    194:194:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    214:214:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    214:214:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):190 -> resumeUnconfined
kotlinx.coroutines.Dispatchers -> kotlinx.coroutines.Dispatchers:
# {"id":"sourceFile","fileName":"Dispatchers.kt"}
    21:69:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    21:21:kotlinx.coroutines.CoroutineDispatcher getDefault() -> getDefault
    69:69:kotlinx.coroutines.CoroutineDispatcher getIO() -> getIO
    24:24:kotlinx.coroutines.MainCoroutineDispatcher getMain() -> getMain
kotlinx.coroutines.DisposableHandle -> kotlinx.coroutines.DisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.DisposeOnCancel -> kotlinx.coroutines.DisposeOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    382:382:void <init>(kotlinx.coroutines.DisposableHandle) -> <init>
    382:382:java.lang.Object invoke(java.lang.Object) -> invoke
    383:383:void invoke(java.lang.Throwable) -> invoke
    384:384:java.lang.String toString() -> toString
kotlinx.coroutines.Empty -> kotlinx.coroutines.Empty:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1303:1303:void <init>(boolean) -> <init>
    1304:1304:kotlinx.coroutines.NodeList getList() -> getList
    1303:1303:boolean isActive() -> isActive
    1305:1305:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoop -> kotlinx.coroutines.EventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    22:22:void <init>() -> <init>
    108:115:void decrementUseCount(boolean) -> decrementUseCount
    100:100:long delta(boolean) -> delta
    84:544:void dispatchUnconfined(kotlinx.coroutines.DispatchedTask) -> dispatchUnconfined
    61:62:long getNextTime() -> getNextTime
    103:105:void incrementUseCount(boolean) -> incrementUseCount
    102:102:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object) -> incrementUseCount$default
    93:93:boolean isUnconfinedLoopActive() -> isUnconfinedLoopActive
    97:97:boolean isUnconfinedQueueEmpty() -> isUnconfinedQueueEmpty
    66:69:boolean processUnconfinedEvent() -> processUnconfinedEvent
kotlinx.coroutines.EventLoopImplBase -> kotlinx.coroutines.EventLoopImplBase:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    180:180:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> <init>
    180:180:void <init>():180 -> <init>
    187:187:void <init>() -> <init>
    180:180:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> <init>
    180:180:void <init>():180 -> <init>
    180:180:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> access$isCompleted
    343:361:void closeQueue() -> closeQueue
    327:339:java.lang.Runnable dequeue() -> dequeue
    286:286:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    289:295:void enqueue(java.lang.Runnable) -> enqueue
    300:307:boolean enqueueImpl(java.lang.Runnable) -> enqueueImpl
    307:321:boolean enqueueImpl(java.lang.Runnable) -> enqueueImpl
    205:214:long getNextTime() -> getNextTime
    189:189:boolean isCompleted() -> isCompleted
    193:199:boolean isEmpty() -> isEmpty
    260:269:long processNextEvent() -> processNextEvent
    60:60:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    60:60:long processNextEvent():269 -> processNextEvent
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    28:31:long processNextEvent():269 -> processNextEvent
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    20:20:long processNextEvent():269 -> processNextEvent
    61:62:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    61:62:long processNextEvent():269 -> processNextEvent
    270:273:long processNextEvent() -> processNextEvent
    62:65:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    62:65:long processNextEvent():269 -> processNextEvent
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    20:20:long processNextEvent():269 -> processNextEvent
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    31:31:long processNextEvent():269 -> processNextEvent
    67:67:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    67:67:long processNextEvent():269 -> processNextEvent
    269:274:long processNextEvent() -> processNextEvent
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    20:20:long processNextEvent():269 -> processNextEvent
    278:280:long processNextEvent() -> processNextEvent
    56:56:void kotlinx.coroutines.EventLoopKt.platformAutoreleasePool(kotlin.jvm.functions.Function0) -> processNextEvent
    56:56:long processNextEvent():280 -> processNextEvent
    280:280:long processNextEvent() -> processNextEvent
    56:56:void kotlinx.coroutines.EventLoopKt.platformAutoreleasePool(kotlin.jvm.functions.Function0) -> processNextEvent
    56:56:long processNextEvent():280 -> processNextEvent
    281:283:long processNextEvent() -> processNextEvent
    393:405:void rescheduleAllDelayed() -> rescheduleAllDelayed
    387:389:void resetAll() -> resetAll
    366:370:void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> schedule
    367:372:void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> schedule
    377:382:int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> scheduleImpl
    231:244:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    190:190:void setCompleted(boolean) -> setCompleted
    374:374:boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> shouldUnpark
    219:228:void shutdown() -> shutdown
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask -> kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    489:492:void <init>(kotlinx.coroutines.EventLoopImplBase,long,kotlinx.coroutines.CancellableContinuation) -> <init>
    493:544:void run() -> run
    494:494:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoopImplBase$DelayedTask -> kotlinx.coroutines.EventLoopImplBase$DelayedTask:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    412:413:void <init>(long) -> <init>
    424:424:void setIndex(int) -> <init>
    424:424:void <init>(long):424 -> <init>
    407:407:int compareTo(java.lang.Object) -> <init>
    407:407:void <init>(long):407 -> <init>
    407:407:int compareTo(java.lang.Object) -> compareTo
    427:431:int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> compareTo
    479:479:void dispose() -> dispose
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> dispose
    28:31:void dispose():479 -> dispose
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> dispose
    20:20:void dispose():479 -> dispose
    480:484:void dispose() -> dispose
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> dispose
    20:20:void dispose():479 -> dispose
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> dispose
    31:31:void dispose():479 -> dispose
    484:484:void dispose() -> dispose
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> dispose
    20:20:void dispose():479 -> dispose
    418:418:kotlinx.coroutines.internal.ThreadSafeHeap getHeap() -> getHeap
    424:424:void setIndex(int) -> getIndex
    424:424:int getIndex():424 -> getIndex
    437:437:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    28:31:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):437 -> scheduleTask
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    20:20:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):437 -> scheduleTask
    438:439:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    72:72:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    72:72:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    28:31:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    20:20:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    73:73:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    73:73:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    440:476:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    20:20:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    460:474:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    73:75:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    73:75:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    20:20:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    31:31:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    79:79:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    79:79:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    476:476:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    20:20:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):439 -> scheduleTask
    476:476:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    420:422:void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap) -> setHeap
    424:424:void setIndex(int) -> setIndex
    435:435:boolean timeToExecute(long) -> timeToExecute
    486:486:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue -> kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    520:522:void <init>(long) -> <init>
kotlinx.coroutines.EventLoopImplPlatform -> kotlinx.coroutines.EventLoopImplPlatform:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    11:11:void <init>() -> <init>
    21:22:void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> reschedule
    15:18:void unpark() -> unpark
kotlinx.coroutines.EventLoopKt -> kotlinx.coroutines.EventLoopKt:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    29:29:kotlinx.coroutines.EventLoop createEventLoop() -> createEventLoop
kotlinx.coroutines.EventLoop_commonKt -> kotlinx.coroutines.EventLoop_commonKt:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    143:168:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p() -> access$getCLOSED_EMPTY$p
    1:1:kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p() -> access$getDISPOSED_TASK$p
    159:163:long delayToNanos(long) -> delayToNanos
kotlinx.coroutines.ExceptionsKt -> kotlinx.coroutines.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    22:77:java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable) -> CancellationException
kotlinx.coroutines.ExecutorCoroutineDispatcher -> kotlinx.coroutines.ExecutorCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Executors.kt"}
    20:20:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"Executors.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    22:25:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"Executors.kt"}
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    25:25:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl -> kotlinx.coroutines.ExecutorCoroutineDispatcherImpl:
# {"id":"sourceFile","fileName":"Executors.kt"}
    122:131:void <init>(java.util.concurrent.Executor) -> <init>
    176:177:void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException) -> cancelJobOnRejection
    180:181:void close() -> close
    134:141:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    184:184:boolean equals(java.lang.Object) -> equals
    122:122:java.util.concurrent.Executor getExecutor() -> getExecutor
    185:185:int hashCode() -> hashCode
    167:171:java.util.concurrent.ScheduledFuture scheduleBlock(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,kotlin.coroutines.CoroutineContext,long) -> scheduleBlock
    144:156:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    183:183:java.lang.String toString() -> toString
kotlinx.coroutines.ExecutorsKt -> kotlinx.coroutines.ExecutorsKt:
# {"id":"sourceFile","fileName":"Executors.kt"}
    100:100:kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor) -> from
kotlinx.coroutines.GlobalScope -> kotlinx.coroutines.GlobalScope:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
    215:215:void <init>() -> <init>
    221:221:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
kotlinx.coroutines.InactiveNodeList -> kotlinx.coroutines.InactiveNodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1375:1376:void <init>(kotlinx.coroutines.NodeList) -> <init>
    1376:1376:kotlinx.coroutines.NodeList getList() -> getList
    1378:1378:boolean isActive() -> isActive
    1379:1379:java.lang.String toString() -> toString
kotlinx.coroutines.Incomplete -> kotlinx.coroutines.Incomplete:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
kotlinx.coroutines.IncompleteStateBox -> kotlinx.coroutines.IncompleteStateBox:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1283:1283:void <init>(kotlinx.coroutines.Incomplete) -> <init>
kotlinx.coroutines.InvokeOnCancel -> kotlinx.coroutines.InvokeOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    638:640:void <init>(kotlin.jvm.functions.Function1) -> <init>
    638:638:java.lang.Object invoke(java.lang.Object) -> invoke
    642:643:void invoke(java.lang.Throwable) -> invoke
    644:644:java.lang.String toString() -> toString
kotlinx.coroutines.InvokeOnCancelling -> kotlinx.coroutines.InvokeOnCancelling:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1425:1427:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1425:1425:java.lang.Object invoke(java.lang.Object) -> invoke
    1431:1432:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.InvokeOnCompletion -> kotlinx.coroutines.InvokeOnCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1382:1384:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1382:1382:java.lang.Object invoke(java.lang.Object) -> invoke
    1385:1385:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.Job -> kotlinx.coroutines.Job:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.Job$DefaultImpls -> kotlinx.coroutines.Job$DefaultImpls:
# {"id":"sourceFile","fileName":"Job.kt"}
    199:199:void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    112:375:java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    112:375:kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> get
    357:359:kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> invokeOnCompletion$default
    112:375:kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    112:375:kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext) -> plus
kotlinx.coroutines.Job$Key -> kotlinx.coroutines.Job$Key:
# {"id":"sourceFile","fileName":"Job.kt"}
    116:116:void <init>() -> <init>
kotlinx.coroutines.JobCancellationException -> kotlinx.coroutines.JobCancellationException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    32:37:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job) -> <init>
    29:29:java.lang.Throwable createCopy() -> <init>
    29:29:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job):29 -> <init>
    67:68:boolean equals(java.lang.Object) -> equals
    40:44:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    26:26:java.lang.Object[] kotlin.ArrayIntrinsicsKt.emptyArray() -> fillInStackTrace
    26:26:java.lang.Throwable fillInStackTrace():44 -> fillInStackTrace
    44:50:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    70:70:int hashCode() -> hashCode
    64:64:java.lang.String toString() -> toString
kotlinx.coroutines.JobCancellingNode -> kotlinx.coroutines.JobCancellingNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1423:1423:void <init>() -> <init>
kotlinx.coroutines.JobImpl -> kotlinx.coroutines.JobImpl:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1309:1322:void <init>(kotlinx.coroutines.Job) -> <init>
    1322:1322:boolean getHandlesException$kotlinx_coroutines_core() -> getHandlesException$kotlinx_coroutines_core
    1311:1311:boolean getOnCancelComplete$kotlinx_coroutines_core() -> getOnCancelComplete$kotlinx_coroutines_core
    1329:1332:boolean handlesException() -> handlesException
kotlinx.coroutines.JobKt -> kotlinx.coroutines.JobKt:
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    1:1:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    1:1:void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future) -> cancelFutureOnCancellation
    1:1:void ensureActive(kotlin.coroutines.CoroutineContext) -> ensureActive
    1:1:void ensureActive(kotlinx.coroutines.Job) -> ensureActive
kotlinx.coroutines.JobKt__FutureKt -> kotlinx.coroutines.JobKt__FutureKt:
# {"id":"sourceFile","fileName":"Future.kt"}
    33:33:void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future) -> cancelFutureOnCancellation
kotlinx.coroutines.JobKt__JobKt -> kotlinx.coroutines.JobKt__JobKt:
# {"id":"sourceFile","fileName":"Job.kt"}
    564:565:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    563:563:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    586:587:void ensureActive(kotlinx.coroutines.Job) -> ensureActive
    604:605:void ensureActive(kotlin.coroutines.CoroutineContext) -> ensureActive
kotlinx.coroutines.JobNode -> kotlinx.coroutines.JobNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1344:1344:void <init>() -> <init>
    1351:1351:void dispose() -> dispose
    1348:1348:kotlinx.coroutines.JobSupport getJob() -> getJob
    1350:1350:kotlinx.coroutines.NodeList getList() -> getList
    1349:1349:boolean isActive() -> isActive
    1348:1348:void setJob(kotlinx.coroutines.JobSupport) -> setJob
    1352:1352:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport -> kotlinx.coroutines.JobSupport:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    25:25:java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object) -> <init>
    25:25:void <init>(boolean):25 -> <init>
    26:128:void <init>(boolean) -> <init>
    25:25:java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object) -> access$cancellationExceptionMessage
    25:25:java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):25 -> access$cancellationExceptionMessage
    25:25:java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object) -> access$continueCompleting
    25:25:void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):25 -> access$continueCompleting
    526:526:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode) -> addLastAtomic
    134:134:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    134:134:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):526 -> addLastAtomic
    73:75:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    73:75:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):526 -> addLastAtomic
    134:139:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    134:139:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):526 -> addLastAtomic
    526:526:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode) -> addLastAtomic
    272:273:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    19:19:java.util.Set kotlinx.coroutines.internal.ConcurrentKt.identitySet(int) -> addSuppressedExceptions
    19:19:void addSuppressedExceptions(java.lang.Throwable,java.util.List):273 -> addSuppressedExceptions
    273:279:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    163:163:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.unwrap(java.lang.Throwable) -> addSuppressedExceptions
    163:163:void addSuppressedExceptions(java.lang.Throwable,java.util.List):279 -> addSuppressedExceptions
    279:281:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    163:163:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.unwrap(java.lang.Throwable) -> addSuppressedExceptions
    163:163:void addSuppressedExceptions(java.lang.Throwable,java.util.List):281 -> addSuppressedExceptions
    281:284:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> addSuppressedExceptions
    75:75:void addSuppressedExceptions(java.lang.Throwable,java.util.List):284 -> addSuppressedExceptions
    287:287:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    1050:1050:void afterCompletion(java.lang.Object) -> afterCompletion
    974:974:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob) -> attachChild
    13:13:kotlin.jvm.functions.Function1 kotlinx.coroutines.CompletionHandlerKt.getAsHandler(kotlinx.coroutines.CompletionHandlerBase) -> attachChild
    13:13:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob):974 -> attachChild
    974:974:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob) -> attachChild
    621:621:void cancel(java.util.concurrent.CancellationException) -> cancel
    706:707:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> cancel
    706:707:void cancel(java.util.concurrent.CancellationException):621 -> cancel
    621:621:void cancel(java.util.concurrent.CancellationException) -> cancel
    707:707:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> cancel
    707:707:void cancel(java.util.concurrent.CancellationException):621 -> cancel
    621:622:void cancel(java.util.concurrent.CancellationException) -> cancel
    667:683:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object) -> cancelImpl$kotlinx_coroutines_core
    636:637:void cancelInternal(java.lang.Throwable) -> cancelInternal
    694:694:java.lang.Object cancelMakeCompleting(java.lang.Object) -> cancelMakeCompleting
    178:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> cancelMakeCompleting
    178:179:java.lang.Object cancelMakeCompleting(java.lang.Object):694 -> cancelMakeCompleting
    695:702:java.lang.Object cancelMakeCompleting(java.lang.Object) -> cancelMakeCompleting
    179:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> cancelMakeCompleting
    179:179:java.lang.Object cancelMakeCompleting(java.lang.Object):694 -> cancelMakeCompleting
    697:697:java.lang.Object cancelMakeCompleting(java.lang.Object) -> cancelMakeCompleting
    346:360:boolean cancelParent(java.lang.Throwable) -> cancelParent
    624:624:java.lang.String cancellationExceptionMessage() -> cancellationExceptionMessage
    654:655:boolean childCancelled(java.lang.Throwable) -> childCancelled
    309:327:void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object) -> completeStateFinalization
    933:941:void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> continueCompleting
    722:723:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    706:707:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> createCauseException
    706:707:java.lang.Throwable createCauseException(java.lang.Object):723 -> createCauseException
    724:725:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    207:213:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    28:31:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):213 -> finalizeFinishingState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    20:20:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):213 -> finalizeFinishingState
    214:218:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    20:20:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):213 -> finalizeFinishingState
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    31:31:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):213 -> finalizeFinishingState
    213:243:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    20:20:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):213 -> finalizeFinishingState
    917:917:kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete) -> firstChild
    25:25:java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object) -> fold
    25:25:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):25 -> fold
    25:25:java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object) -> get
    25:25:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):25 -> get
    417:423:java.util.concurrent.CancellationException getCancellationException() -> getCancellationException
    711:718:java.util.concurrent.CancellationException getChildJobCancellationCause() -> getChildJobCancellationCause
    914:914:java.lang.Throwable getExceptionOrNull(java.lang.Object) -> getExceptionOrNull
    248:250:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    706:707:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> getFinalRootCause
    706:707:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):250 -> getFinalRootCause
    250:261:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getFinalRootCause
    288:288:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):261 -> getFinalRootCause
    261:261:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    288:289:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getFinalRootCause
    288:289:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):261 -> getFinalRootCause
    261:268:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    1019:1019:boolean getHandlesException$kotlinx_coroutines_core() -> getHandlesException$kotlinx_coroutines_core
    27:27:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    617:617:boolean getOnCancelComplete$kotlinx_coroutines_core() -> getOnCancelComplete$kotlinx_coroutines_core
    777:787:kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete) -> getOrPromoteCancellingList
    132:132:kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core() -> getParentHandle$kotlinx_coroutines_core
    169:171:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    1031:1031:boolean handleJobException(java.lang.Throwable) -> handleJobException
    984:984:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    145:159:void initParentJob(kotlinx.coroutines.Job) -> initParentJob
    460:461:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    178:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    178:179:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):461 -> invokeOnCompletion
    462:478:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    28:31:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):478 -> invokeOnCompletion
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    20:20:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):478 -> invokeOnCompletion
    480:483:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:boolean kotlinx.coroutines.CompletionHandler_commonKt.isHandlerOf(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):483 -> invokeOnCompletion
    483:491:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    20:20:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):478 -> invokeOnCompletion
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    31:31:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):478 -> invokeOnCompletion
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    20:20:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):478 -> invokeOnCompletion
    493:495:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):495 -> invokeOnCompletion
    496:509:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    179:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    179:179:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):461 -> invokeOnCompletion
    505:505:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):505 -> invokeOnCompletion
    506:506:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    184:185:boolean isActive() -> isActive
    188:188:boolean isCompleted() -> isCompleted
    1010:1010:boolean isScopedCoroutine() -> isScopedCoroutine
    735:736:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    178:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCancelling
    178:179:java.lang.Object makeCancelling(java.lang.Object):736 -> makeCancelling
    737:739:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    28:31:java.lang.Object makeCancelling(java.lang.Object):739 -> makeCancelling
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    20:20:java.lang.Object makeCancelling(java.lang.Object):739 -> makeCancelling
    740:1455:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    749:1455:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    20:20:java.lang.Object makeCancelling(java.lang.Object):739 -> makeCancelling
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    31:31:java.lang.Object makeCancelling(java.lang.Object):739 -> makeCancelling
    739:1455:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    20:20:java.lang.Object makeCancelling(java.lang.Object):739 -> makeCancelling
    754:1455:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    179:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCancelling
    179:179:java.lang.Object makeCancelling(java.lang.Object):736 -> makeCancelling
    764:770:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    831:831:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object) -> makeCompletingOnce$kotlinx_coroutines_core
    178:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCompletingOnce$kotlinx_coroutines_core
    178:179:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):831 -> makeCompletingOnce$kotlinx_coroutines_core
    832:840:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object) -> makeCompletingOnce$kotlinx_coroutines_core
    179:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCompletingOnce$kotlinx_coroutines_core
    179:179:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):831 -> makeCompletingOnce$kotlinx_coroutines_core
    835:837:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object) -> makeCompletingOnce$kotlinx_coroutines_core
    835:837:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object) -> makeCompletingOnce$kotlinx_coroutines_core
    513:518:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean) -> makeNode
    513:1455:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean) -> makeNode
    25:25:java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object) -> minusKey
    25:25:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):25 -> minusKey
    1062:1062:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    944:950:kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> nextChild
    331:332:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    367:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    367:368:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    341:343:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    341:343:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    369:372:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    369:372:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    1480:1480:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    372:372:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    372:372:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCancelling
    75:75:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    372:376:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    372:376:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    343:346:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    343:346:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    377:377:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    377:377:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    1480:1480:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    377:378:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    377:378:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):332 -> notifyCancelling
    334:335:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    364:364:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    367:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    367:368:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    341:343:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    341:343:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    369:372:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    369:372:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    1500:1500:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    372:372:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    372:372:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCompletion
    75:75:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    372:376:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    372:376:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    343:346:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    343:346:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    377:377:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    377:377:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    1500:1500:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    377:378:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    377:378:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):364 -> notifyCompletion
    364:364:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    1002:1002:void onCancelling(java.lang.Throwable) -> onCancelling
    1041:1041:void onCompletionInternal(java.lang.Object) -> onCompletionInternal
    414:414:void onStart() -> onStart
    641:642:void parentCancelled(kotlinx.coroutines.ParentJob) -> parentCancelled
    25:25:java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object) -> plus
    25:25:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):25 -> plus
    530:533:void promoteEmptyToNodeList(kotlinx.coroutines.Empty) -> promoteEmptyToNodeList
    537:542:void promoteSingleToNodeList(kotlinx.coroutines.JobNode) -> promoteSingleToNodeList
    594:594:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode) -> removeNode$kotlinx_coroutines_core
    178:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> removeNode$kotlinx_coroutines_core
    178:179:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):594 -> removeNode$kotlinx_coroutines_core
    595:608:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode) -> removeNode$kotlinx_coroutines_core
    179:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> removeNode$kotlinx_coroutines_core
    179:179:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):594 -> removeNode$kotlinx_coroutines_core
    601:606:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode) -> removeNode$kotlinx_coroutines_core
    133:133:void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle) -> setParentHandle$kotlinx_coroutines_core
    381:381:boolean start() -> start
    178:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> start
    178:179:boolean start():381 -> start
    382:386:boolean start() -> start
    179:179:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> start
    179:179:boolean start():381 -> start
    383:384:boolean start() -> start
    394:406:int startInternal(java.lang.Object) -> startInternal
    1064:1073:java.lang.String stateString(java.lang.Object) -> stateString
    426:426:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String) -> toCancellationException
    707:707:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> toCancellationException
    707:707:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String):426 -> toCancellationException
    426:426:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String) -> toCancellationException
    425:425:java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object) -> toCancellationException$default
    1057:1057:java.lang.String toDebugString() -> toDebugString
    1054:1054:java.lang.String toString() -> toString
    292:298:boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryFinalizeSimpleState
    791:800:boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable) -> tryMakeCancelling
    851:867:java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object) -> tryMakeCompleting
    877:884:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    28:31:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):884 -> tryMakeCompletingSlowPath
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):884 -> tryMakeCompletingSlowPath
    886:1455:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    901:1455:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):884 -> tryMakeCompletingSlowPath
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    31:31:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):884 -> tryMakeCompletingSlowPath
    904:1455:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):884 -> tryMakeCompletingSlowPath
    922:924:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> tryWaitForChild
    13:13:kotlin.jvm.functions.Function1 kotlinx.coroutines.CompletionHandlerKt.getAsHandler(kotlinx.coroutines.CompletionHandlerBase) -> tryWaitForChild
    13:13:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):924 -> tryWaitForChild
    922:928:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> tryWaitForChild
kotlinx.coroutines.JobSupport$ChildCompletion -> kotlinx.coroutines.JobSupport$ChildCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1152:1157:void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> <init>
    1152:1152:java.lang.Object invoke(java.lang.Object) -> invoke
    1159:1160:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.JobSupport$Finishing -> kotlinx.coroutines.JobSupport$Finishing:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1082:1082:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1079:1079:kotlinx.coroutines.NodeList getList() -> <init>
    1079:1079:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable):1079 -> <init>
    1078:1088:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1121:1140:void addExceptionLocked(java.lang.Throwable) -> addExceptionLocked
    1142:1142:java.util.ArrayList allocateList() -> allocateList
    1095:1095:java.lang.Object getExceptionsHolder() -> getExceptionsHolder
    1079:1079:kotlinx.coroutines.NodeList getList() -> getList
    1090:1090:java.lang.Throwable getRootCause() -> getRootCause
    1101:1101:boolean isActive() -> isActive
    1100:1100:boolean isCancelling() -> isCancelling
    1085:1085:boolean isCompleting() -> isCompleting
    1099:1099:boolean isSealed() -> isSealed
    1106:1455:java.util.List sealLocked(java.lang.Throwable) -> sealLocked
    1109:1455:java.util.List sealLocked(java.lang.Throwable) -> sealLocked
    1086:1086:void setCompleting(boolean) -> setCompleting
    1096:1096:void setExceptionsHolder(java.lang.Object) -> setExceptionsHolder
    1091:1091:void setRootCause(java.lang.Throwable) -> setRootCause
    1145:1145:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 -> kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    73:73:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    73:73:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object):73 -> <init>
    73:73:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    73:73:java.lang.Object prepare(java.lang.Object):73 -> prepare
    74:74:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> prepare
    74:74:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):74 -> prepare
    526:526:boolean kotlinx.coroutines.JobSupport.addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode) -> prepare
    526:526:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):368 -> prepare
    74:74:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> prepare
    74:74:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):74 -> prepare
kotlinx.coroutines.JobSupportKt -> kotlinx.coroutines.JobSupportKt:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1289:1301:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p() -> access$getCOMPLETING_ALREADY$p
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p() -> access$getCOMPLETING_RETRY$p
    1:1:kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p() -> access$getEMPTY_ACTIVE$p
    1:1:kotlinx.coroutines.Empty access$getEMPTY_NEW$p() -> access$getEMPTY_NEW$p
    1:1:kotlinx.coroutines.internal.Symbol access$getSEALED$p() -> access$getSEALED$p
    1:1:kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p() -> access$getTOO_LATE_TO_CANCEL$p
    1284:1284:java.lang.Object boxIncomplete(java.lang.Object) -> boxIncomplete
    1285:1285:java.lang.Object unboxState(java.lang.Object) -> unboxState
kotlinx.coroutines.LazyStandaloneCoroutine -> kotlinx.coroutines.LazyStandaloneCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    199:203:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2) -> <init>
    206:207:void onStart() -> onStart
kotlinx.coroutines.MainCoroutineDispatcher -> kotlinx.coroutines.MainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainCoroutineDispatcher.kt"}
    15:15:void <init>() -> <init>
    69:75:java.lang.String toStringInternalImpl() -> toStringInternalImpl
kotlinx.coroutines.NodeList -> kotlinx.coroutines.NodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1355:1355:void <init>() -> <init>
    1357:1357:kotlinx.coroutines.NodeList getList() -> getList
    1356:1356:boolean isActive() -> isActive
    1372:1372:java.lang.String toString() -> toString
kotlinx.coroutines.NonDisposableHandle -> kotlinx.coroutines.NonDisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
    662:662:void <init>() -> <init>
    677:677:boolean childCancelled(java.lang.Throwable) -> childCancelled
    671:671:void dispose() -> dispose
    683:683:java.lang.String toString() -> toString
kotlinx.coroutines.NotCompleted -> kotlinx.coroutines.NotCompleted:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
kotlinx.coroutines.ParentJob -> kotlinx.coroutines.ParentJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.ResumeUndispatchedRunnable -> kotlinx.coroutines.ResumeUndispatchedRunnable:
# {"id":"sourceFile","fileName":"Executors.kt"}
    188:190:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CancellableContinuation) -> <init>
    193:208:void run() -> run
kotlinx.coroutines.RunnableKt -> R8$$REMOVED$$CLASS$$12:
# {"id":"sourceFile","fileName":"Runnable.kt"}
kotlinx.coroutines.RunnableKt$Runnable$1 -> R8$$REMOVED$$CLASS$$11:
# {"id":"sourceFile","fileName":"Runnable.kt"}
kotlinx.coroutines.StandaloneCoroutine -> kotlinx.coroutines.StandaloneCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    189:192:void <init>(kotlin.coroutines.CoroutineContext,boolean) -> <init>
    194:195:boolean handleJobException(java.lang.Throwable) -> handleJobException
kotlinx.coroutines.SupervisorJobImpl -> kotlinx.coroutines.SupervisorJobImpl:
# {"id":"sourceFile","fileName":"Supervisor.kt"}
    65:65:void <init>(kotlinx.coroutines.Job) -> <init>
    66:66:boolean childCancelled(java.lang.Throwable) -> childCancelled
kotlinx.coroutines.SupervisorKt -> kotlinx.coroutines.SupervisorKt:
# {"id":"sourceFile","fileName":"Supervisor.kt"}
    33:33:kotlinx.coroutines.CompletableJob SupervisorJob(kotlinx.coroutines.Job) -> SupervisorJob
    33:33:kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object) -> SupervisorJob$default
kotlinx.coroutines.ThreadContextElement -> kotlinx.coroutines.ThreadContextElement:
# {"id":"sourceFile","fileName":"ThreadContextElement.kt"}
kotlinx.coroutines.ThreadLocalEventLoop -> kotlinx.coroutines.ThreadLocalEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    126:126:void <clinit>() -> <clinit>
    125:125:void <init>() -> <init>
    129:544:kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core() -> getEventLoop$kotlinx_coroutines_core
    135:136:void resetEventLoop$kotlinx_coroutines_core() -> resetEventLoop$kotlinx_coroutines_core
    139:140:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop) -> setEventLoop$kotlinx_coroutines_core
kotlinx.coroutines.Unconfined -> kotlinx.coroutines.Unconfined:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    13:13:void <init>() -> <init>
    24:30:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    20:20:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    35:35:java.lang.String toString() -> toString
kotlinx.coroutines.UndispatchedCoroutine -> kotlinx.coroutines.UndispatchedCoroutine:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    165:247:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    261:315:void afterResume(java.lang.Object) -> afterResume
    107:116:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> afterResume
    107:116:void afterResume(java.lang.Object):269 -> afterResume
    270:271:void afterResume(java.lang.Object) -> afterResume
    116:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> afterResume
    116:119:void afterResume(java.lang.Object):269 -> afterResume
    272:272:void afterResume(java.lang.Object) -> afterResume
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> afterResume
    118:119:void afterResume(java.lang.Object):269 -> afterResume
    255:257:boolean clearThreadContext() -> clearThreadContext
    250:252:void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> saveThreadContext
kotlinx.coroutines.UndispatchedMarker -> kotlinx.coroutines.UndispatchedMarker:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    159:159:void <init>() -> <init>
    159:159:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    159:159:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    161:161:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    159:159:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    159:159:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlinx.coroutines.YieldContext -> kotlinx.coroutines.YieldContext:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
kotlinx.coroutines.YieldContext$Key -> kotlinx.coroutines.YieldContext$Key:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    43:43:void <init>() -> <init>
kotlinx.coroutines.android.AndroidDispatcherFactory -> kotlinx.coroutines.android.AndroidDispatcherFactory:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    52:52:void <init>() -> <init>
    55:56:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> createDispatcher
    62:62:int getLoadPriority() -> getLoadPriority
    59:59:java.lang.String hintOnError() -> hintOnError
kotlinx.coroutines.android.AndroidExceptionPreHandler -> kotlinx.coroutines.android.AndroidExceptionPreHandler:
# {"id":"sourceFile","fileName":"AndroidExceptionPreHandler.kt"}
    12:16:void <init>() -> <init>
    47:49:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
    48:49:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
    49:51:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
    20:30:java.lang.reflect.Method preHandler() -> preHandler
kotlinx.coroutines.android.HandlerContext -> kotlinx.coroutines.android.HandlerContext:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    115:131:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    134:218:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    114:114:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> <init>
    114:114:void <init>(android.os.Handler,java.lang.String,boolean):114 -> <init>
    125:128:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String):128 -> <init>
    114:114:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> access$getHandler$p
    166:168:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> cancelOnRejection
    141:144:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    175:175:boolean equals(java.lang.Object) -> equals
    114:114:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> getImmediate
    114:114:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():114 -> getImmediate
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> getImmediate
    176:176:int hashCode() -> hashCode
    137:137:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    147:147:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    17:17:java.lang.Runnable kotlinx.coroutines.RunnableKt.Runnable(kotlin.jvm.functions.Function0) -> scheduleResumeAfterDelay
    17:17:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation):147 -> scheduleResumeAfterDelay
    147:155:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    170:173:java.lang.String toString() -> toString
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1 -> kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1:
# {"id":"sourceFile","fileName":"Runnable.kt"}
    17:17:void kotlinx.coroutines.RunnableKt$Runnable$1.run() -> run
    17:17:void run():17 -> run
    19:21:void run() -> run
    17:17:void kotlinx.coroutines.RunnableKt$Runnable$1.run() -> run
    17:17:void run():17 -> run
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1 -> kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    151:151:java.lang.Object invoke(java.lang.Object) -> invoke
    151:151:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.android.HandlerDispatcher -> kotlinx.coroutines.android.HandlerDispatcher:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    22:22:void <init>() -> <init>
kotlinx.coroutines.android.HandlerDispatcherKt -> kotlinx.coroutines.android.HandlerDispatcherKt:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    109:241:void <clinit>() -> <clinit>
    86:104:android.os.Handler asHandler(android.os.Looper,boolean) -> asHandler
kotlinx.coroutines.internal.AtomicKt -> kotlinx.coroutines.internal.AtomicKt:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    35:35:void <clinit>() -> <clinit>
kotlinx.coroutines.internal.AtomicOp -> kotlinx.coroutines.internal.AtomicOp:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    49:50:void <init>() -> <init>
    55:59:java.lang.Object decide(java.lang.Object) -> decide
    70:76:java.lang.Object perform(java.lang.Object) -> perform
kotlinx.coroutines.internal.ConcurrentKt -> kotlinx.coroutines.internal.ConcurrentKt:
# {"id":"sourceFile","fileName":"Concurrent.kt"}
    21:24:void <clinit>() -> <clinit>
    29:34:boolean removeFutureOnCancel(java.util.concurrent.Executor) -> removeFutureOnCancel
kotlinx.coroutines.internal.ConcurrentLinkedListNode -> kotlinx.coroutines.internal.ConcurrentLinkedListNode:
# {"id":"sourceFile","fileName":"ConcurrentLinkedList.kt"}
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt -> kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    21:24:void <clinit>() -> <clinit>
    24:24:void <clinit>() -> <clinit>
    21:21:void <clinit>() -> getPlatformExceptionHandlers
    21:21:java.util.Collection getPlatformExceptionHandlers():21 -> getPlatformExceptionHandlers
    34:36:void propagateExceptionFinalResort(java.lang.Throwable) -> propagateExceptionFinalResort
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt -> kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.common.kt"}
    36:53:void handleUncaughtCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleUncaughtCoroutineException
kotlinx.coroutines.internal.DiagnosticCoroutineContextException -> kotlinx.coroutines.internal.DiagnosticCoroutineContextException:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    39:39:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    46:46:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    26:26:java.lang.Object[] kotlin.ArrayIntrinsicsKt.emptyArray() -> fillInStackTrace
    26:26:java.lang.Throwable fillInStackTrace():46 -> fillInStackTrace
    46:47:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    41:41:java.lang.String getLocalizedMessage() -> getLocalizedMessage
kotlinx.coroutines.internal.DispatchedContinuation -> kotlinx.coroutines.internal.DispatchedContinuation:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    17:28:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation) -> <init>
    79:80:void awaitReusability$kotlinx_coroutines_core() -> awaitReusability$kotlinx_coroutines_core
    235:238:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    25:25:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    192:192:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> getDelegate$kotlinx_coroutines_core
    61:61:kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation() -> getReusableCancellableContinuation
    70:70:boolean isReusable$kotlinx_coroutines_core() -> isReusable$kotlinx_coroutines_core
    169:181:boolean postponeCancellation$kotlinx_coroutines_core(java.lang.Throwable) -> postponeCancellation$kotlinx_coroutines_core
    89:91:void release$kotlinx_coroutines_core() -> release$kotlinx_coroutines_core
    195:202:void resumeWith(java.lang.Object) -> resumeWith
    297:313:boolean kotlinx.coroutines.internal.DispatchedContinuationKt.executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeWith
    297:313:void resumeWith(java.lang.Object):202 -> resumeWith
    200:202:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    200:202:void resumeWith(java.lang.Object):202 -> resumeWith
    203:203:void resumeWith(java.lang.Object) -> resumeWith
    95:97:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    95:97:void resumeWith(java.lang.Object):203 -> resumeWith
    204:205:void resumeWith(java.lang.Object) -> resumeWith
    97:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    97:99:void resumeWith(java.lang.Object):203 -> resumeWith
    206:206:void resumeWith(java.lang.Object) -> resumeWith
    202:205:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    202:205:void resumeWith(java.lang.Object):202 -> resumeWith
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    99:99:void resumeWith(java.lang.Object):203 -> resumeWith
    207:216:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    207:216:void resumeWith(java.lang.Object):202 -> resumeWith
    305:314:boolean kotlinx.coroutines.internal.DispatchedContinuationKt.executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeWith
    305:314:void resumeWith(java.lang.Object):202 -> resumeWith
    208:208:void resumeWith(java.lang.Object) -> resumeWith
    214:214:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    214:214:void resumeWith(java.lang.Object):202 -> resumeWith
    185:188:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    268:268:java.lang.String toString() -> toString
    150:160:java.lang.Throwable tryReleaseClaimedContinuation$kotlinx_coroutines_core(kotlinx.coroutines.CancellableContinuation) -> tryReleaseClaimedContinuation$kotlinx_coroutines_core
kotlinx.coroutines.internal.DispatchedContinuationKt -> kotlinx.coroutines.internal.DispatchedContinuationKt:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    12:14:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p() -> access$getUNDEFINED$p
    281:282:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    217:223:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith$kotlinx_coroutines_core(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    217:223:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    297:313:boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeCancellableWith
    297:313:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    200:202:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    200:202:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    224:224:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith$kotlinx_coroutines_core(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    224:224:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    243:248:boolean kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled$kotlinx_coroutines_core(java.lang.Object) -> resumeCancellableWith
    243:248:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    207:207:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    207:207:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    250:250:boolean kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled$kotlinx_coroutines_core(java.lang.Object) -> resumeCancellableWith
    250:250:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    224:225:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith$kotlinx_coroutines_core(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    224:225:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith$kotlinx_coroutines_core(java.lang.Object) -> resumeCancellableWith
    255:255:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    107:111:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    207:207:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    207:207:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    109:116:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    109:116:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith$kotlinx_coroutines_core(java.lang.Object) -> resumeCancellableWith
    256:257:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    116:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    116:119:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    258:258:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith$kotlinx_coroutines_core(java.lang.Object) -> resumeCancellableWith
    258:258:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    118:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    118:119:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    207:207:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    207:207:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    224:227:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith$kotlinx_coroutines_core(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    224:227:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    202:216:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    202:216:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    305:314:boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeCancellableWith
    305:314:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    229:229:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith$kotlinx_coroutines_core(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    229:229:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    214:214:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    214:214:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    283:284:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    278:280:void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeCancellableWith$default
kotlinx.coroutines.internal.FastServiceLoader -> kotlinx.coroutines.internal.FastServiceLoader:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    30:30:void <init>() -> <init>
    105:167:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class) -> getProviderInstance
    86:90:java.util.List load(java.lang.Class,java.lang.ClassLoader) -> load
    53:60:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    77:81:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    77:81:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():60 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    60:167:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    77:81:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    77:81:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():61 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    58:167:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    96:99:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1360:1360:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1360:1360:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    1446:1447:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1446:1447:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    99:99:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1447:1450:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1447:1450:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    1360:1360:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1360:1360:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    99:101:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1549:1549:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):101 -> loadProviders$kotlinx_coroutines_core
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1620:1621:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):101 -> loadProviders$kotlinx_coroutines_core
    101:101:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1621:1622:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1621:1622:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):101 -> loadProviders$kotlinx_coroutines_core
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1549:1549:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):101 -> loadProviders$kotlinx_coroutines_core
    100:167:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    111:117:java.util.List parse(java.net.URL) -> parse
    131:133:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    131:133:java.util.List parse(java.net.URL):117 -> parse
    118:119:java.util.List parse(java.net.URL) -> parse
    138:141:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    138:141:java.util.List parse(java.net.URL):117 -> parse
    134:143:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    134:143:java.util.List parse(java.net.URL):117 -> parse
    143:143:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    143:143:java.util.List parse(java.net.URL):117 -> parse
    124:125:java.util.List parse(java.net.URL) -> parse
    149:158:java.util.List parseFile(java.io.BufferedReader) -> parseFile
    1064:1064:boolean kotlin.text.StringsKt___StringsKt.all(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> parseFile
    1064:1064:java.util.List parseFile(java.io.BufferedReader):153 -> parseFile
    153:153:java.util.List parseFile(java.io.BufferedReader) -> parseFile
    1064:1065:boolean kotlin.text.StringsKt___StringsKt.all(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> parseFile
    1064:1065:java.util.List parseFile(java.io.BufferedReader):153 -> parseFile
    153:167:java.util.List parseFile(java.io.BufferedReader) -> parseFile
kotlinx.coroutines.internal.FastServiceLoaderKt -> kotlinx.coroutines.internal.FastServiceLoaderKt:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    17:162:void <clinit>() -> <clinit>
    17:17:void <clinit>() -> getANDROID_DETECTED
    17:17:boolean getANDROID_DETECTED():17 -> getANDROID_DETECTED
kotlinx.coroutines.internal.LimitedDispatcher -> kotlinx.coroutines.internal.LimitedDispatcher:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    27:29:void <init>(kotlinx.coroutines.CoroutineDispatcher,int) -> <init>
    29:38:void <init>(kotlinx.coroutines.CoroutineDispatcher,int) -> <init>
    26:26:kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher) -> <init>
    26:26:void <init>(kotlinx.coroutines.CoroutineDispatcher,int):26 -> <init>
    26:26:kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher) -> access$getDispatcher$p
    26:26:kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher) -> access$obtainTaskOrDeallocateWorker
    26:26:java.lang.Runnable access$obtainTaskOrDeallocateWorker(kotlinx.coroutines.internal.LimitedDispatcher):26 -> access$obtainTaskOrDeallocateWorker
    48:48:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    66:72:void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function1) -> dispatch
    66:72:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):48 -> dispatch
    49:50:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    72:73:void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function1) -> dispatch
    72:73:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):48 -> dispatch
    51:51:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    90:92:java.lang.Runnable obtainTaskOrDeallocateWorker() -> obtainTaskOrDeallocateWorker
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> obtainTaskOrDeallocateWorker
    28:31:java.lang.Runnable obtainTaskOrDeallocateWorker():92 -> obtainTaskOrDeallocateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> obtainTaskOrDeallocateWorker
    20:20:java.lang.Runnable obtainTaskOrDeallocateWorker():92 -> obtainTaskOrDeallocateWorker
    93:95:java.lang.Runnable obtainTaskOrDeallocateWorker() -> obtainTaskOrDeallocateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> obtainTaskOrDeallocateWorker
    20:20:java.lang.Runnable obtainTaskOrDeallocateWorker():92 -> obtainTaskOrDeallocateWorker
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> obtainTaskOrDeallocateWorker
    31:31:java.lang.Runnable obtainTaskOrDeallocateWorker():92 -> obtainTaskOrDeallocateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> obtainTaskOrDeallocateWorker
    20:20:java.lang.Runnable obtainTaskOrDeallocateWorker():92 -> obtainTaskOrDeallocateWorker
    97:97:java.lang.Runnable obtainTaskOrDeallocateWorker() -> obtainTaskOrDeallocateWorker
    79:79:boolean tryAllocateWorker() -> tryAllocateWorker
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryAllocateWorker
    28:31:boolean tryAllocateWorker():79 -> tryAllocateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> tryAllocateWorker
    20:20:boolean tryAllocateWorker():79 -> tryAllocateWorker
    80:82:boolean tryAllocateWorker() -> tryAllocateWorker
kotlinx.coroutines.internal.LimitedDispatcher$Worker -> kotlinx.coroutines.internal.LimitedDispatcher$Worker:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    110:110:void <init>(kotlinx.coroutines.internal.LimitedDispatcher,java.lang.Runnable) -> <init>
    112:125:void run() -> run
kotlinx.coroutines.internal.LimitedDispatcherKt -> kotlinx.coroutines.internal.LimitedDispatcherKt:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    133:135:void checkParallelism(int) -> checkParallelism
kotlinx.coroutines.internal.LockFreeLinkedListHead -> kotlinx.coroutines.internal.LockFreeLinkedListHead:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    334:334:void <init>() -> <init>
    352:352:boolean isRemoved() -> isRemoved
kotlinx.coroutines.internal.LockFreeLinkedListKt -> kotlinx.coroutines.internal.LockFreeLinkedListKt:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    24:24:void <clinit>() -> <clinit>
    24:24:java.lang.Object getCONDITION_FALSE() -> getCONDITION_FALSE
    327:327:kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object) -> unwrap
kotlinx.coroutines.internal.LockFreeLinkedListNode -> kotlinx.coroutines.internal.LockFreeLinkedListNode:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    45:45:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    45:45:void <init>():45 -> <init>
    47:49:void <init>() -> <init>
    45:45:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode) -> access$finishAdd
    45:45:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode) -> access$get_next$FU$p
    45:45:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_next$FU$p():45 -> access$get_next$FU$p
    106:114:boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> addOneIfEmpty
    271:308:kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor) -> correctPrev
    99:100:kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> findPrevNonRemoved
    248:255:void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> finishAdd
    82:84:java.lang.Object getNext() -> getNext
    88:88:kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode() -> getNextNode
    96:96:kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode() -> getPrevNode
    77:77:boolean isRemoved() -> isRemoved
    200:200:boolean remove() -> remove
    205:213:kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext() -> removeOrNext
    53:368:kotlinx.coroutines.internal.Removed removed() -> removed
    319:319:java.lang.String toString() -> toString
    182:187:int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp) -> tryCondAddNext
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp -> kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    56:58:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    55:55:void complete(java.lang.Object,java.lang.Object) -> complete
    62:68:void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object) -> complete
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1 -> R8$$REMOVED$$CLASS$$13:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1 -> kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    319:319:java.lang.Object get() -> get
kotlinx.coroutines.internal.LockFreeTaskQueue -> kotlinx.coroutines.internal.LockFreeTaskQueue:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    30:33:void <init>(boolean) -> <init>
    48:53:boolean addLast(java.lang.Object) -> addLast
    41:43:void close() -> close
    37:37:int getSize() -> getSize
    59:62:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> kotlinx.coroutines.internal.LockFreeTaskQueueCore:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    288:288:void <clinit>() -> <clinit>
    76:88:void <init>(int,boolean) -> <init>
    106:107:int addLast(java.lang.Object) -> addLast
    299:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> addLast
    299:301:int addLast(java.lang.Object):107 -> addLast
    108:138:int addLast(java.lang.Object) -> addLast
    301:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> addLast
    301:301:int addLast(java.lang.Object):107 -> addLast
    139:139:int addLast(java.lang.Object) -> addLast
    230:231:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long) -> allocateNextCopy
    299:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> allocateNextCopy
    299:301:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long):231 -> allocateNextCopy
    232:240:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long) -> allocateNextCopy
    301:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> allocateNextCopy
    301:301:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long):231 -> allocateNextCopy
    241:241:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long) -> allocateNextCopy
    224:226:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long) -> allocateOrGetNextCopy
    96:100:boolean close() -> close
    143:160:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object) -> fillPlaceholder
    92:92:int getSize() -> getSize
    299:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> getSize
    299:301:int getSize():92 -> getSize
    92:92:int getSize() -> getSize
    301:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> getSize
    301:301:int getSize():92 -> getSize
    92:92:int getSize() -> getSize
    91:91:boolean isEmpty() -> isEmpty
    299:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> isEmpty
    299:301:boolean isEmpty():91 -> isEmpty
    91:91:boolean isEmpty() -> isEmpty
    301:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> isEmpty
    301:301:boolean isEmpty():91 -> isEmpty
    91:91:boolean isEmpty() -> isEmpty
    218:220:long markFrozen() -> markFrozen
    214:214:kotlinx.coroutines.internal.LockFreeTaskQueueCore next() -> next
    166:167:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    299:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> removeFirstOrNull
    299:301:java.lang.Object removeFirstOrNull():167 -> removeFirstOrNull
    168:192:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    200:200:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int) -> removeSlowPath
    299:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> removeSlowPath
    299:301:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int):200 -> removeSlowPath
    201:210:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int) -> removeSlowPath
    301:301:java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion.withState(long,kotlin.jvm.functions.Function2) -> removeSlowPath
    301:301:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int):200 -> removeSlowPath
    211:211:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int) -> removeSlowPath
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    270:270:void <init>() -> <init>
    305:305:int addFailReason(long) -> addFailReason
    295:295:long updateHead(long,int) -> updateHead
    296:296:long updateTail(long,int) -> updateTail
    294:294:long wo(long,long) -> wo
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    268:268:void <init>(int) -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> kotlinx.coroutines.internal.MainDispatcherFactory:
# {"id":"sourceFile","fileName":"MainDispatcherFactory.kt"}
kotlinx.coroutines.internal.MainDispatcherLoader -> kotlinx.coroutines.internal.MainDispatcherLoader:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    19:22:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    25:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1963:1967:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadMainDispatcher
    1963:1967:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1967:1970:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadMainDispatcher
    1967:1970:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1970:1976:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadMainDispatcher
    1970:1976:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    25:42:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
kotlinx.coroutines.internal.MainDispatchersKt -> kotlinx.coroutines.internal.MainDispatchersKt:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    70:70:void <clinit>() -> <clinit>
    77:135:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String) -> createMissingDispatcher
    76:76:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object) -> createMissingDispatcher$default
    66:66:boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher) -> isMissing
    81:82:java.lang.Void throwMissingMainDispatcherException() -> throwMissingMainDispatcherException
    56:60:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List) -> tryCreateDispatcher
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> kotlinx.coroutines.internal.MissingMainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    89:91:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String):90 -> <init>
    88:88:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> <init>
    88:88:void <init>(java.lang.Throwable,java.lang.String):88 -> <init>
    88:88:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> dispatch
    88:88:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):88 -> dispatch
    105:105:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    93:93:kotlinx.coroutines.MainCoroutineDispatcher getImmediate() -> getImmediate
    96:96:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    111:135:java.lang.Void missing() -> missing
    88:88:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    108:108:java.lang.Void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> scheduleResumeAfterDelay
    119:119:java.lang.String toString() -> toString
kotlinx.coroutines.internal.OpDescriptor -> kotlinx.coroutines.internal.OpDescriptor:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    18:18:void <init>() -> <init>
    31:31:java.lang.String toString() -> toString
kotlinx.coroutines.internal.ProbesSupportKt -> R8$$REMOVED$$CLASS$$14:
# {"id":"sourceFile","fileName":"ProbesSupport.kt"}
kotlinx.coroutines.internal.Removed -> kotlinx.coroutines.internal.Removed:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    322:322:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    323:323:java.lang.String toString() -> toString
kotlinx.coroutines.internal.ResizableAtomicArray -> kotlinx.coroutines.internal.ResizableAtomicArray:
# {"id":"sourceFile","fileName":"ResizableAtomicArray.kt"}
    13:15:void <init>(int) -> <init>
    18:18:int currentLength() -> currentLength
    21:22:java.lang.Object get(int) -> get
    27:38:void setSynchronized(int,java.lang.Object) -> setSynchronized
kotlinx.coroutines.internal.ScopeCoroutine -> kotlinx.coroutines.internal.ScopeCoroutine:
# {"id":"sourceFile","fileName":"Scopes.kt"}
    15:18:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    27:28:void afterCompletion(java.lang.Object) -> afterCompletion
    32:33:void afterResume(java.lang.Object) -> afterResume
    20:20:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    23:23:boolean isScopedCoroutine() -> isScopedCoroutine
kotlinx.coroutines.internal.Segment -> kotlinx.coroutines.internal.Segment:
# {"id":"sourceFile","fileName":"ConcurrentLinkedList.kt"}
kotlinx.coroutines.internal.StackTraceRecoveryKt -> R8$$REMOVED$$CLASS$$15:
# {"id":"sourceFile","fileName":"StackTraceRecovery.kt"}
kotlinx.coroutines.internal.Symbol -> kotlinx.coroutines.internal.Symbol:
# {"id":"sourceFile","fileName":"Symbol.kt"}
    14:14:void <init>(java.lang.String) -> <init>
    15:15:java.lang.String toString() -> toString
kotlinx.coroutines.internal.SynchronizedKt -> R8$$REMOVED$$CLASS$$16:
# {"id":"sourceFile","fileName":"Synchronized.kt"}
kotlinx.coroutines.internal.Synchronized_commonKt -> R8$$REMOVED$$CLASS$$17:
# {"id":"sourceFile","fileName":"Synchronized.common.kt"}
kotlinx.coroutines.internal.SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt:
    1:1:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    1:1:int systemProp(java.lang.String,int,int,int) -> systemProp
    1:1:long systemProp(java.lang.String,long,long,long) -> systemProp
    1:1:java.lang.String systemProp(java.lang.String) -> systemProp
    1:1:java.lang.String systemProp(java.lang.String,java.lang.String) -> systemProp
    1:1:boolean systemProp(java.lang.String,boolean) -> systemProp
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt:
# {"id":"sourceFile","fileName":"SystemProps.kt"}
    11:11:void <clinit>() -> <clinit>
    11:11:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    16:20:java.lang.String systemProp(java.lang.String) -> systemProp
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt:
# {"id":"sourceFile","fileName":"SystemProps.common.kt"}
    21:21:boolean systemProp(java.lang.String,boolean) -> systemProp
    35:35:int systemProp(java.lang.String,int,int,int) -> systemProp
    50:56:long systemProp(java.lang.String,long,long,long) -> systemProp
    68:68:java.lang.String systemProp(java.lang.String,java.lang.String) -> systemProp
    30:34:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    44:48:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.ThreadContextKt -> kotlinx.coroutines.internal.ThreadContextKt:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    11:52:void <clinit>() -> <clinit>
    84:97:void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> restoreThreadContext
    59:59:java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext) -> threadContextElements
    65:78:java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateThreadContext
kotlinx.coroutines.internal.ThreadContextKt$countAll$1 -> kotlinx.coroutines.internal.ThreadContextKt$countAll$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    36:40:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$findOne$1 -> kotlinx.coroutines.internal.ThreadContextKt$findOne$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    46:47:kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$updateState$1 -> kotlinx.coroutines.internal.ThreadContextKt$updateState$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    53:56:kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadLocalKt -> kotlinx.coroutines.internal.ThreadLocalKt:
# {"id":"sourceFile","fileName":"ThreadLocal.kt"}
    12:12:java.lang.ThreadLocal commonThreadLocal(kotlinx.coroutines.internal.Symbol) -> commonThreadLocal
kotlinx.coroutines.internal.ThreadSafeHeap -> kotlinx.coroutines.internal.ThreadSafeHeap:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
    24:24:void <init>() -> <init>
    120:127:void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode) -> addImpl
    93:93:kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl() -> firstImpl
    30:30:int getSize() -> getSize
    33:33:boolean isEmpty() -> isEmpty
    50:50:kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> peek
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> peek
    28:31:kotlinx.coroutines.internal.ThreadSafeHeapNode peek():50 -> peek
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> peek
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode peek():50 -> peek
    50:50:kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> peek
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> peek
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode peek():50 -> peek
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> peek
    31:31:kotlinx.coroutines.internal.ThreadSafeHeapNode peek():50 -> peek
    50:50:kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> peek
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> peek
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode peek():50 -> peek
    150:209:kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc() -> realloc
    151:209:kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc() -> realloc
    81:81:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode) -> remove
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> remove
    28:31:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode):81 -> remove
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> remove
    20:20:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode):81 -> remove
    82:88:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode) -> remove
    97:115:kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int) -> removeAtImpl
    52:52:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> removeFirstOrNull
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> removeFirstOrNull
    28:31:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull():52 -> removeFirstOrNull
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> removeFirstOrNull
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull():52 -> removeFirstOrNull
    53:56:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> removeFirstOrNull
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> removeFirstOrNull
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull():52 -> removeFirstOrNull
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> removeFirstOrNull
    31:31:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull():52 -> removeFirstOrNull
    58:58:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> removeFirstOrNull
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> removeFirstOrNull
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull():52 -> removeFirstOrNull
    31:31:void setSize(int) -> setSize
    139:145:void siftDownFrom(int) -> siftDownFrom
    130:135:void siftUpFrom(int) -> siftUpFrom
    159:166:void swap(int,int) -> swap
kotlinx.coroutines.internal.ThreadSafeHeapNode -> kotlinx.coroutines.internal.ThreadSafeHeapNode:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
kotlinx.coroutines.internal.ThreadState -> kotlinx.coroutines.internal.ThreadState:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    14:17:void <init>(kotlin.coroutines.CoroutineContext,int) -> <init>
    21:23:void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object) -> append
    26:29:void restore(kotlin.coroutines.CoroutineContext) -> restore
kotlinx.coroutines.intrinsics.CancellableKt -> kotlinx.coroutines.intrinsics.CancellableKt:
# {"id":"sourceFile","fileName":"Cancellable.kt"}
    65:66:void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable) -> dispatcherFailure
    29:29:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineCancellable
    49:50:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    49:50:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):29 -> startCoroutineCancellable
    30:31:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineCancellable
    50:54:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    50:54:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):29 -> startCoroutineCancellable
    31:31:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineCancellable
    38:38:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation) -> startCoroutineCancellable
    49:50:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    49:50:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation):38 -> startCoroutineCancellable
    39:40:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation) -> startCoroutineCancellable
    50:54:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    50:54:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation):38 -> startCoroutineCancellable
    40:40:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation) -> startCoroutineCancellable
    25:27:void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object) -> startCoroutineCancellable$default
kotlinx.coroutines.intrinsics.UndispatchedKt -> kotlinx.coroutines.intrinsics.UndispatchedKt:
# {"id":"sourceFile","fileName":"Undispatched.kt"}
    42:42:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    55:55:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    55:55:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):42 -> startCoroutineUndispatched
    11:11:kotlin.coroutines.Continuation kotlinx.coroutines.internal.ProbesSupportKt.probeCoroutineCreated(kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    11:11:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):42 -> startCoroutineUndispatched
    55:57:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    55:57:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):42 -> startCoroutineUndispatched
    43:43:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    95:97:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    95:97:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):43 -> startCoroutineUndispatched
    44:44:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    97:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    97:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):43 -> startCoroutineUndispatched
    43:43:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    56:66:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    56:66:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):42 -> startCoroutineUndispatched
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    99:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):43 -> startCoroutineUndispatched
    58:60:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    58:60:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):42 -> startCoroutineUndispatched
    47:47:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    77:77:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2) -> startUndispatchedOrReturn
    97:98:java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> startUndispatchedOrReturn
    97:98:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):77 -> startUndispatchedOrReturn
    78:78:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2) -> startUndispatchedOrReturn
    97:124:java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> startUndispatchedOrReturn
    97:124:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):77 -> startUndispatchedOrReturn
    77:77:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2) -> startUndispatchedOrReturn
    118:119:java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> startUndispatchedOrReturn
    118:119:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):77 -> startUndispatchedOrReturn
    77:77:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2) -> startUndispatchedOrReturn
    119:119:java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> startUndispatchedOrReturn
    119:119:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):77 -> startUndispatchedOrReturn
    61:62:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> startUndispatchedOrReturn
    61:62:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):77 -> startUndispatchedOrReturn
kotlinx.coroutines.scheduling.CoroutineScheduler -> kotlinx.coroutines.scheduling.CoroutineScheduler:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    313:313:void <clinit>() -> <clinit>
    91:91:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getControlState$FU$p() -> <init>
    91:91:void <init>(int,int,long,java.lang.String):91 -> <init>
    93:94:void <init>(int,int,long,java.lang.String) -> <init>
    95:95:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    95:95:void <init>(int,int,long,java.lang.String):95 -> <init>
    96:96:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:void <init>(int,int,long,java.lang.String):96 -> <init>
    98:307:void <init>(int,int,long,java.lang.String) -> <init>
    92:92:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    92:92:void <init>(int,int,long,java.lang.String):92 -> <init>
    99:109:void <init>(int,int,long,java.lang.String) -> <init>
    91:91:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getControlState$FU$p() -> access$getControlState$FU$p
    119:119:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    93:93:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    93:93:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):119 -> addToGlobalQueue
    119:122:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    338:338:void close() -> close
    477:478:int createNewWorker() -> createNewWorker
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    28:31:int createNewWorker():478 -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():478 -> createNewWorker
    480:482:int createNewWorker() -> createNewWorker
    283:283:int createdWorkers(long) -> createNewWorker
    283:283:int createNewWorker():482 -> createNewWorker
    482:483:int createNewWorker() -> createNewWorker
    284:284:int blockingTasks(long) -> createNewWorker
    284:284:int createNewWorker():483 -> createNewWorker
    483:489:int createNewWorker() -> createNewWorker
    280:280:int getCreatedWorkers() -> createNewWorker
    280:280:int createNewWorker():489 -> createNewWorker
    489:490:int createNewWorker() -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():478 -> createNewWorker
    490:498:int createNewWorker() -> createNewWorker
    288:288:int incrementCreatedWorkers() -> createNewWorker
    288:288:int createNewWorker():498 -> createNewWorker
    283:283:int createdWorkers(long) -> createNewWorker
    283:283:int createNewWorker():498 -> createNewWorker
    288:288:int incrementCreatedWorkers() -> createNewWorker
    288:288:int createNewWorker():498 -> createNewWorker
    498:499:int createNewWorker() -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():478 -> createNewWorker
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    31:31:int createNewWorker():478 -> createNewWorker
    478:1035:int createNewWorker() -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():478 -> createNewWorker
    420:426:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext) -> createTask
    522:1035:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    610:610:kotlinx.coroutines.scheduling.CoroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.getScheduler() -> currentWorker
    610:610:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():522 -> currentWorker
    522:522:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    393:395:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    93:93:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> dispatch
    93:93:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):395 -> dispatch
    395:398:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    291:291:long incrementBlockingTasks() -> dispatch
    291:291:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):398 -> dispatch
    398:417:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    392:392:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object) -> dispatch$default
    336:336:void execute(java.lang.Runnable) -> execute
    308:308:boolean isTerminated() -> isTerminated
    237:247:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackNextIndex
    206:226:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop() -> parkedWorkersStackPop
    178:195:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackPush
    151:164:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int) -> parkedWorkersStackTopUpdate
    583:591:void runSafely(kotlinx.coroutines.scheduling.Task) -> runSafely
    343:347:void shutdown(long) -> shutdown
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    28:31:void shutdown(long):347 -> shutdown
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    20:20:void shutdown(long):347 -> shutdown
    347:347:void shutdown(long) -> shutdown
    280:280:int getCreatedWorkers() -> shutdown
    280:280:void shutdown(long):347 -> shutdown
    347:347:void shutdown(long) -> shutdown
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    20:20:void shutdown(long):347 -> shutdown
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    31:31:void shutdown(long):347 -> shutdown
    347:378:void shutdown(long) -> shutdown
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    20:20:void shutdown(long):347 -> shutdown
    431:436:void signalBlockingWork(long,boolean) -> signalBlockingWork
    439:442:void signalCpuWork() -> signalCpuWork
    508:515:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    90:90:int kotlinx.coroutines.scheduling.Task.getMode$kotlinx_coroutines_core() -> submitToLocalQueue
    90:90:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):515 -> submitToLocalQueue
    515:519:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    535:564:java.lang.String toString() -> toString
    562:565:java.lang.String toString() -> toString
    562:567:java.lang.String toString() -> toString
    562:568:java.lang.String toString() -> toString
    562:569:java.lang.String toString() -> toString
    562:570:java.lang.String toString() -> toString
    562:571:java.lang.String toString() -> toString
    562:572:java.lang.String toString() -> toString
    562:573:java.lang.String toString() -> toString
    562:574:java.lang.String toString() -> toString
    562:576:java.lang.String toString() -> toString
    283:283:int createdWorkers(long) -> toString
    283:283:java.lang.String toString():576 -> toString
    562:577:java.lang.String toString() -> toString
    284:284:int blockingTasks(long) -> toString
    284:284:java.lang.String toString():577 -> toString
    562:578:java.lang.String toString() -> toString
    285:285:int availableCpuPermits(long) -> toString
    285:285:java.lang.String toString():578 -> toString
    562:579:java.lang.String toString() -> toString
    445:445:boolean tryCreateWorker(long) -> tryCreateWorker
    283:283:int createdWorkers(long) -> tryCreateWorker
    283:283:boolean tryCreateWorker(long):445 -> tryCreateWorker
    445:446:boolean tryCreateWorker(long) -> tryCreateWorker
    284:284:int blockingTasks(long) -> tryCreateWorker
    284:284:boolean tryCreateWorker(long):446 -> tryCreateWorker
    446:459:boolean tryCreateWorker(long) -> tryCreateWorker
    444:444:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object) -> tryCreateWorker$default
    463:467:boolean tryUnpark() -> tryUnpark
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> kotlinx.coroutines.scheduling.CoroutineScheduler$Companion:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    310:310:void <init>() -> <init>
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> kotlinx.coroutines.scheduling.CoroutineScheduler$Worker:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    593:593:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> <init>
    593:593:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):593 -> <init>
    594:627:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    650:650:void setNextParkedWorker(java.lang.Object) -> <init>
    650:650:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):650 -> <init>
    657:657:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    593:593:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> <init>
    593:593:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):593 -> <init>
    606:608:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int) -> <init>
    593:593:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> access$getThis$0$p
    806:807:void afterTask(int) -> afterTask
    294:295:void kotlinx.coroutines.scheduling.CoroutineScheduler.decrementBlockingTasks() -> afterTask
    294:295:void afterTask(int):807 -> afterTask
    808:814:void afterTask(int) -> afterTask
    798:803:void beforeTask(int) -> beforeTask
    790:790:void executeTask(kotlinx.coroutines.scheduling.Task) -> executeTask
    90:90:int kotlinx.coroutines.scheduling.Task.getMode$kotlinx_coroutines_core() -> executeTask
    90:90:void executeTask(kotlinx.coroutines.scheduling.Task):790 -> executeTask
    790:795:void executeTask(kotlinx.coroutines.scheduling.Task) -> executeTask
    941:1043:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    944:1043:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    945:1043:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    947:1043:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    924:926:kotlinx.coroutines.scheduling.Task findBlockingTask() -> findBlockingTask
    913:919:kotlinx.coroutines.scheduling.Task findTask(boolean) -> findTask
    600:600:int getIndexInArray() -> getIndexInArray
    650:650:void setNextParkedWorker(java.lang.Object) -> getNextParkedWorker
    650:650:java.lang.Object getNextParkedWorker():650 -> getNextParkedWorker
    905:910:void idleReset(int) -> idleReset
    787:787:boolean inStack() -> inStack
    821:831:int nextInt(int) -> nextInt
    836:845:void park() -> park
    953:1043:kotlinx.coroutines.scheduling.Task pollGlobalQueues() -> pollGlobalQueues
    957:1043:kotlinx.coroutines.scheduling.Task pollGlobalQueues() -> pollGlobalQueues
    684:684:void run() -> run
    690:734:void runWorker() -> runWorker
    602:604:void setIndexInArray(int) -> setIndexInArray
    650:650:void setNextParkedWorker(java.lang.Object) -> setNextParkedWorker
    663:665:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    298:298:boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryAcquireCpuPermit() -> tryAcquireCpuPermit
    298:298:boolean tryAcquireCpuPermit():665 -> tryAcquireCpuPermit
    285:285:int kotlinx.coroutines.scheduling.CoroutineScheduler.availableCpuPermits(long) -> tryAcquireCpuPermit
    285:285:boolean tryAcquireCpuPermit():665 -> tryAcquireCpuPermit
    298:301:boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryAcquireCpuPermit() -> tryAcquireCpuPermit
    298:301:boolean tryAcquireCpuPermit():665 -> tryAcquireCpuPermit
    665:670:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    302:302:boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryAcquireCpuPermit() -> tryAcquireCpuPermit
    302:302:boolean tryAcquireCpuPermit():665 -> tryAcquireCpuPermit
    762:785:void tryPark() -> tryPark
    677:679:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    304:304:long kotlinx.coroutines.scheduling.CoroutineScheduler.releaseCpuPermit() -> tryReleaseCpu
    304:304:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):679 -> tryReleaseCpu
    680:681:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    963:963:kotlinx.coroutines.scheduling.Task trySteal(int) -> trySteal
    280:280:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> trySteal
    280:280:kotlinx.coroutines.scheduling.Task trySteal(int):963 -> trySteal
    963:987:kotlinx.coroutines.scheduling.Task trySteal(int) -> trySteal
    851:851:void tryTerminateWorker() -> tryTerminateWorker
    28:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    28:31:void tryTerminateWorker():851 -> tryTerminateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    20:20:void tryTerminateWorker():851 -> tryTerminateWorker
    853:855:void tryTerminateWorker() -> tryTerminateWorker
    280:280:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> tryTerminateWorker
    280:280:void tryTerminateWorker():855 -> tryTerminateWorker
    855:881:void tryTerminateWorker() -> tryTerminateWorker
    289:289:int kotlinx.coroutines.scheduling.CoroutineScheduler.decrementCreatedWorkers() -> tryTerminateWorker
    289:289:void tryTerminateWorker():881 -> tryTerminateWorker
    283:283:int kotlinx.coroutines.scheduling.CoroutineScheduler.createdWorkers(long) -> tryTerminateWorker
    283:283:void tryTerminateWorker():881 -> tryTerminateWorker
    289:289:int kotlinx.coroutines.scheduling.CoroutineScheduler.decrementCreatedWorkers() -> tryTerminateWorker
    289:289:void tryTerminateWorker():881 -> tryTerminateWorker
    881:899:void tryTerminateWorker() -> tryTerminateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    20:20:void tryTerminateWorker():851 -> tryTerminateWorker
    31:31:java.lang.Object kotlinx.coroutines.internal.Synchronized_commonKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    31:31:void tryTerminateWorker():851 -> tryTerminateWorker
    900:901:void tryTerminateWorker() -> tryTerminateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    20:20:void tryTerminateWorker():851 -> tryTerminateWorker
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    995:1015:void <clinit>() -> <clinit>
    991:991:void <init>(java.lang.String,int) -> <init>
kotlinx.coroutines.scheduling.DefaultIoScheduler -> kotlinx.coroutines.scheduling.DefaultIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    61:64:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
    89:89:void close() -> close
    80:81:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    71:71:void execute(java.lang.Runnable) -> execute
    92:92:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.DefaultScheduler -> kotlinx.coroutines.scheduling.DefaultScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    13:15:void <init>() -> <init>
    32:32:void close() -> close
    35:35:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.GlobalQueue -> kotlinx.coroutines.scheduling.GlobalQueue:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    114:114:void <init>() -> <init>
kotlinx.coroutines.scheduling.NanoTimeSource -> kotlinx.coroutines.scheduling.NanoTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    121:121:void <init>() -> <init>
    122:122:long nanoTime() -> nanoTime
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher -> kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    96:107:void <init>(int,int,long,java.lang.String) -> <init>
    110:110:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler() -> createScheduler
    112:112:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    118:119:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatchWithContext$kotlinx_coroutines_core
kotlinx.coroutines.scheduling.SchedulerTimeSource -> kotlinx.coroutines.scheduling.SchedulerTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    117:117:void <init>() -> <init>
kotlinx.coroutines.scheduling.Task -> kotlinx.coroutines.scheduling.Task:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    82:87:void <init>(long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    89:89:void <init>() -> <init>
kotlinx.coroutines.scheduling.TaskContext -> kotlinx.coroutines.scheduling.TaskContext:
# {"id":"sourceFile","fileName":"Tasks.kt"}
kotlinx.coroutines.scheduling.TaskContextImpl -> kotlinx.coroutines.scheduling.TaskContextImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    70:70:void <init>(int) -> <init>
    73:73:void afterTask() -> afterTask
    70:70:int getTaskMode() -> getTaskMode
kotlinx.coroutines.scheduling.TaskImpl -> kotlinx.coroutines.scheduling.TaskImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    96:100:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    102:107:void run() -> run
    110:110:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.TasksKt -> kotlinx.coroutines.scheduling.TasksKt:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    16:80:void <clinit>() -> <clinit>
kotlinx.coroutines.scheduling.UnlimitedIoScheduler -> kotlinx.coroutines.scheduling.UnlimitedIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    39:39:void <init>() -> <init>
    47:48:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    52:54:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int) -> limitedParallelism
kotlinx.coroutines.scheduling.WorkQueue -> kotlinx.coroutines.scheduling.WorkQueue:
# {"id":"sourceFile","fileName":"WorkQueue.kt"}
    46:65:void <init>() -> <init>
    84:86:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean) -> add
    94:95:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task) -> addLast
    93:93:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addLast
    93:93:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):95 -> addLast
    95:110:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task) -> addLast
    249:249:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    93:93:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    93:93:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):249 -> decrementIfBlocking
    249:253:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    63:63:int getBufferSize() -> getBufferSize
    64:64:int getSize$kotlinx_coroutines_core() -> getSize$kotlinx_coroutines_core
    193:259:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue) -> offloadAllWorkTo
    77:77:kotlinx.coroutines.scheduling.Task poll() -> poll
    153:153:kotlinx.coroutines.scheduling.Task pollBlocking() -> pollBlocking
    235:243:kotlinx.coroutines.scheduling.Task pollBuffer() -> pollBuffer
    229:231:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue) -> pollTo
    160:162:kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean) -> pollWithExclusiveMode
    93:93:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> pollWithExclusiveMode
    93:93:kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean):162 -> pollWithExclusiveMode
    162:179:kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean) -> pollWithExclusiveMode
    139:148:kotlinx.coroutines.scheduling.Task stealWithExclusiveMode(int) -> stealWithExclusiveMode
    183:185:kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean) -> tryExtractFromTheMiddle
    93:93:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryExtractFromTheMiddle
    93:93:kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean):185 -> tryExtractFromTheMiddle
    185:189:kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean) -> tryExtractFromTheMiddle
    125:134:long trySteal(int,kotlin.jvm.internal.Ref$ObjectRef) -> trySteal
    203:205:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef) -> tryStealLastScheduled
    25:25:int kotlinx.coroutines.scheduling.WorkQueueKt.getMaskForStealingMode(kotlinx.coroutines.scheduling.Task) -> tryStealLastScheduled
    25:25:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef):205 -> tryStealLastScheduled
    93:93:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealLastScheduled
    93:93:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef):205 -> tryStealLastScheduled
    25:25:int kotlinx.coroutines.scheduling.WorkQueueKt.getMaskForStealingMode(kotlinx.coroutines.scheduling.Task) -> tryStealLastScheduled
    25:25:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef):205 -> tryStealLastScheduled
    205:224:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef) -> tryStealLastScheduled
kotlinx.coroutines.scheduling.WorkQueue$$ExternalSyntheticBackportWithForwarding0 -> kotlinx.coroutines.scheduling.WorkQueue$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlinx.coroutines.scheduling.WorkQueue$$InternalSyntheticBackportWithForwarding$1$096514ac2207c3806c8a2ccddf5aed7c788f820c1da5da396811efc19e873117$0.m(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.scheduling.WorkQueueKt -> R8$$REMOVED$$CLASS$$18:
# {"id":"sourceFile","fileName":"WorkQueue.kt"}
kotlinx.coroutines.sync.Mutex -> kotlinx.coroutines.sync.Mutex:
# {"id":"sourceFile","fileName":"Mutex.kt"}
kotlinx.coroutines.sync.MutexKt -> R8$$REMOVED$$CLASS$$19:
# {"id":"sourceFile","fileName":"Mutex.kt"}
